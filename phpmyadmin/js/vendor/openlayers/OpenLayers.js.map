{"version":3,"sources":["webpack://ol/webpack/universalModuleDefinition","webpack://ol/webpack/bootstrap","webpack://ol/./debian/missing-sources/ol/events/Event.js","webpack://ol/./debian/missing-sources/ol/ObjectEventType.js","webpack://ol/./debian/missing-sources/ol/Disposable.js","webpack://ol/./debian/missing-sources/ol/array.js","webpack://ol/./debian/missing-sources/ol/functions.js","webpack://ol/./debian/missing-sources/ol/obj.js","webpack://ol/./debian/missing-sources/ol/events/Target.js","webpack://ol/./debian/missing-sources/ol/events/EventType.js","webpack://ol/./debian/missing-sources/ol/events.js","webpack://ol/./debian/missing-sources/ol/Observable.js","webpack://ol/./debian/missing-sources/ol/util.js","webpack://ol/./debian/missing-sources/ol/Object.js","webpack://ol/./debian/missing-sources/ol/MapEventType.js","webpack://ol/./debian/missing-sources/ol/has.js","webpack://ol/./debian/missing-sources/ol/dom.js","webpack://ol/./debian/missing-sources/ol/control/Control.js","webpack://ol/./debian/missing-sources/ol/css.js","webpack://ol/./debian/missing-sources/ol/layer/Property.js","webpack://ol/./debian/missing-sources/ol/AssertionError.js","webpack://ol/./debian/missing-sources/ol/asserts.js","webpack://ol/./debian/missing-sources/ol/math.js","webpack://ol/./debian/missing-sources/ol/layer/Base.js","webpack://ol/./debian/missing-sources/ol/render/EventType.js","webpack://ol/./debian/missing-sources/ol/source/State.js","webpack://ol/./debian/missing-sources/ol/layer/Layer.js","webpack://ol/./debian/missing-sources/ol/control/Attribution.js","webpack://ol/./debian/missing-sources/ol/pointer/EventType.js","webpack://ol/./debian/missing-sources/ol/proj/Units.js","webpack://ol/./debian/missing-sources/ol/proj/Projection.js","webpack://ol/./debian/missing-sources/ol/proj/epsg3857.js","webpack://ol/./debian/missing-sources/ol/proj/epsg4326.js","webpack://ol/./debian/missing-sources/ol/proj/projections.js","webpack://ol/./debian/missing-sources/ol/proj/transforms.js","webpack://ol/./debian/missing-sources/ol/extent/Corner.js","webpack://ol/./debian/missing-sources/ol/extent/Relationship.js","webpack://ol/./debian/missing-sources/ol/extent.js","webpack://ol/./debian/missing-sources/ol/geom/GeometryType.js","webpack://ol/./debian/missing-sources/ol/sphere.js","webpack://ol/./debian/missing-sources/ol/coordinate.js","webpack://ol/./debian/missing-sources/ol/proj.js","webpack://ol/./debian/missing-sources/ol/control/MousePosition.js","webpack://ol/./debian/missing-sources/ol/easing.js","webpack://ol/./debian/missing-sources/ol/control/Zoom.js","webpack://ol/./debian/missing-sources/ol/geom/GeometryLayout.js","webpack://ol/./debian/missing-sources/ol/transform.js","webpack://ol/./debian/missing-sources/ol/geom/flat/transform.js","webpack://ol/./debian/missing-sources/ol/geom/Geometry.js","webpack://ol/./debian/missing-sources/ol/geom/SimpleGeometry.js","webpack://ol/./debian/missing-sources/ol/geom/flat/closest.js","webpack://ol/./debian/missing-sources/ol/geom/flat/deflate.js","webpack://ol/./debian/missing-sources/ol/geom/flat/simplify.js","webpack://ol/./debian/missing-sources/ol/geom/flat/segments.js","webpack://ol/./debian/missing-sources/ol/geom/flat/inflate.js","webpack://ol/./debian/missing-sources/ol/geom/flat/interpolate.js","webpack://ol/./debian/missing-sources/ol/geom/flat/contains.js","webpack://ol/./debian/missing-sources/ol/geom/flat/intersectsextent.js","webpack://ol/./debian/missing-sources/ol/geom/flat/length.js","webpack://ol/./debian/missing-sources/ol/geom/LineString.js","webpack://ol/./debian/missing-sources/ol/geom/flat/area.js","webpack://ol/./debian/missing-sources/ol/geom/LinearRing.js","webpack://ol/./debian/missing-sources/ol/geom/MultiLineString.js","webpack://ol/./debian/missing-sources/ol/geom/Point.js","webpack://ol/./debian/missing-sources/ol/geom/MultiPoint.js","webpack://ol/./debian/missing-sources/ol/geom/flat/interiorpoint.js","webpack://ol/./debian/missing-sources/ol/geom/flat/reverse.js","webpack://ol/./debian/missing-sources/ol/geom/flat/orient.js","webpack://ol/./debian/missing-sources/ol/geom/Polygon.js","webpack://ol/./debian/missing-sources/ol/geom/MultiPolygon.js","webpack://ol/./debian/missing-sources/ol/geom/flat/center.js","webpack://ol/./debian/missing-sources/ol/layer/TileProperty.js","webpack://ol/./debian/missing-sources/ol/layer/BaseTile.js","webpack://ol/./debian/missing-sources/ol/ImageState.js","webpack://ol/./debian/missing-sources/ol/renderer/Layer.js","webpack://ol/./debian/missing-sources/ol/render/Event.js","webpack://ol/./debian/missing-sources/ol/render/canvas.js","webpack://ol/./debian/missing-sources/ol/renderer/canvas/Layer.js","webpack://ol/./debian/missing-sources/ol/TileRange.js","webpack://ol/./debian/missing-sources/ol/TileState.js","webpack://ol/./debian/missing-sources/ol/renderer/canvas/TileLayer.js","webpack://ol/./debian/missing-sources/ol/layer/Tile.js","webpack://ol/./debian/missing-sources/ol/size.js","webpack://ol/./debian/missing-sources/ol/style/Image.js","webpack://ol/./debian/missing-sources/ol/color.js","webpack://ol/./debian/missing-sources/ol/colorlike.js","webpack://ol/./debian/missing-sources/ol/style/RegularShape.js","webpack://ol/./debian/missing-sources/ol/style/Circle.js","webpack://ol/./debian/missing-sources/ol/style/Fill.js","webpack://ol/./debian/missing-sources/ol/style/Stroke.js","webpack://ol/./debian/missing-sources/ol/style/Style.js","webpack://ol/./debian/missing-sources/ol/layer/BaseVector.js","webpack://ol/./debian/missing-sources/ol/render/canvas/Instruction.js","webpack://ol/./debian/missing-sources/ol/render/VectorContext.js","webpack://ol/./debian/missing-sources/ol/render/canvas/Builder.js","webpack://ol/./debian/missing-sources/ol/render/canvas/ImageBuilder.js","webpack://ol/./debian/missing-sources/ol/render/canvas/LineStringBuilder.js","webpack://ol/./debian/missing-sources/ol/render/canvas/PolygonBuilder.js","webpack://ol/./debian/missing-sources/ol/style/TextPlacement.js","webpack://ol/./debian/missing-sources/ol/geom/flat/straightchunk.js","webpack://ol/./debian/missing-sources/ol/render/canvas/TextBuilder.js","webpack://ol/./debian/missing-sources/ol/render/canvas/BuilderGroup.js","webpack://ol/./debian/missing-sources/ol/render/canvas/BuilderType.js","webpack://ol/./debian/missing-sources/quickselect/index.js","webpack://ol/./debian/missing-sources/rbush/rbush.js","webpack://ol/./debian/missing-sources/ol/geom/flat/textpath.js","webpack://ol/./debian/missing-sources/ol/render/canvas/Executor.js","webpack://ol/./debian/missing-sources/ol/render/canvas/ExecutorGroup.js","webpack://ol/./debian/missing-sources/ol/ViewHint.js","webpack://ol/./debian/missing-sources/ol/render/canvas/Immediate.js","webpack://ol/./debian/missing-sources/ol/style/IconAnchorUnits.js","webpack://ol/./debian/missing-sources/ol/style/IconOrigin.js","webpack://ol/./debian/missing-sources/ol/style/IconImageCache.js","webpack://ol/./debian/missing-sources/ol/ImageBase.js","webpack://ol/./debian/missing-sources/ol/Image.js","webpack://ol/./debian/missing-sources/ol/style/IconImage.js","webpack://ol/./debian/missing-sources/ol/style/Icon.js","webpack://ol/./debian/missing-sources/ol/renderer/vector.js","webpack://ol/./debian/missing-sources/ol/renderer/canvas/VectorLayer.js","webpack://ol/./debian/missing-sources/ol/render/canvas/hitdetect.js","webpack://ol/./debian/missing-sources/ol/layer/Vector.js","webpack://ol/./debian/missing-sources/ol/Tile.js","webpack://ol/./debian/missing-sources/ol/ImageTile.js","webpack://ol/./debian/missing-sources/ol/reproj.js","webpack://ol/./debian/missing-sources/ol/reproj/common.js","webpack://ol/./debian/missing-sources/ol/reproj/Triangulation.js","webpack://ol/./debian/missing-sources/ol/source/common.js","webpack://ol/./debian/missing-sources/ol/reproj/Tile.js","webpack://ol/./debian/missing-sources/ol/structs/LRUCache.js","webpack://ol/./debian/missing-sources/ol/tilecoord.js","webpack://ol/./debian/missing-sources/ol/TileCache.js","webpack://ol/./debian/missing-sources/ol/source/TileEventType.js","webpack://ol/./debian/missing-sources/ol/source/Source.js","webpack://ol/./debian/missing-sources/ol/tilegrid/common.js","webpack://ol/./debian/missing-sources/ol/tilegrid/TileGrid.js","webpack://ol/./debian/missing-sources/ol/tilegrid.js","webpack://ol/./debian/missing-sources/ol/source/Tile.js","webpack://ol/./debian/missing-sources/ol/tileurlfunction.js","webpack://ol/./debian/missing-sources/ol/source/UrlTile.js","webpack://ol/./debian/missing-sources/ol/source/TileImage.js","webpack://ol/./debian/missing-sources/ol/source/XYZ.js","webpack://ol/./debian/missing-sources/ol/source/OSM.js","webpack://ol/./debian/missing-sources/ol/CollectionEventType.js","webpack://ol/./debian/missing-sources/ol/Collection.js","webpack://ol/./debian/missing-sources/ol/structs/RBush.js","webpack://ol/./debian/missing-sources/ol/source/VectorEventType.js","webpack://ol/./debian/missing-sources/ol/loadingstrategy.js","webpack://ol/./debian/missing-sources/ol/format/FormatType.js","webpack://ol/./debian/missing-sources/ol/featureloader.js","webpack://ol/./debian/missing-sources/ol/source/Vector.js","webpack://ol/./debian/missing-sources/ol/style/Text.js","webpack://ol/./debian/missing-sources/ol/Feature.js","webpack://ol/./debian/missing-sources/ol/renderer/Map.js","webpack://ol/./debian/missing-sources/ol/render.js","webpack://ol/./debian/missing-sources/ol/renderer/Composite.js","webpack://ol/./debian/missing-sources/ol/layer/Group.js","webpack://ol/./debian/missing-sources/ol/MapEvent.js","webpack://ol/./debian/missing-sources/ol/MapBrowserEvent.js","webpack://ol/./debian/missing-sources/ol/MapBrowserEventType.js","webpack://ol/./debian/missing-sources/ol/MapBrowserEventHandler.js","webpack://ol/./debian/missing-sources/ol/MapProperty.js","webpack://ol/./debian/missing-sources/ol/structs/PriorityQueue.js","webpack://ol/./debian/missing-sources/ol/TileQueue.js","webpack://ol/./debian/missing-sources/ol/ViewProperty.js","webpack://ol/./debian/missing-sources/ol/centerconstraint.js","webpack://ol/./debian/missing-sources/ol/resolutionconstraint.js","webpack://ol/./debian/missing-sources/ol/rotationconstraint.js","webpack://ol/./debian/missing-sources/ol/View.js","webpack://ol/./debian/missing-sources/ol/PluggableMap.js","webpack://ol/./debian/missing-sources/ol/control/Rotate.js","webpack://ol/./debian/missing-sources/ol/interaction/Property.js","webpack://ol/./debian/missing-sources/ol/interaction/Interaction.js","webpack://ol/./debian/missing-sources/ol/interaction/DoubleClickZoom.js","webpack://ol/./debian/missing-sources/ol/interaction/Pointer.js","webpack://ol/./debian/missing-sources/ol/events/condition.js","webpack://ol/./debian/missing-sources/ol/interaction/DragPan.js","webpack://ol/./debian/missing-sources/ol/interaction/DragRotate.js","webpack://ol/./debian/missing-sources/ol/render/Box.js","webpack://ol/./debian/missing-sources/ol/interaction/DragBox.js","webpack://ol/./debian/missing-sources/ol/interaction/DragZoom.js","webpack://ol/./debian/missing-sources/ol/events/KeyCode.js","webpack://ol/./debian/missing-sources/ol/interaction/KeyboardPan.js","webpack://ol/./debian/missing-sources/ol/interaction/KeyboardZoom.js","webpack://ol/./debian/missing-sources/ol/Kinetic.js","webpack://ol/./debian/missing-sources/ol/interaction/MouseWheelZoom.js","webpack://ol/./debian/missing-sources/ol/interaction/PinchRotate.js","webpack://ol/./debian/missing-sources/ol/interaction/PinchZoom.js","webpack://ol/./debian/missing-sources/ol/Map.js","webpack://ol/./debian/missing-sources/ol/control.js","webpack://ol/./debian/missing-sources/ol/interaction.js","webpack://ol/./js/src/ol.mjs"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Event","BaseEvent","type","this","propagationStopped","target","preventDefault","stopPropagation","ObjectEventType","PROPERTYCHANGE","ol_Disposable","Disposable","disposed","dispose","disposeInternal","numberSafeCompareFunction","a","b","linearFindNearest","arr","direction","length","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","equals","arr1","arr2","len1","TRUE","FALSE","VOID","obj_assign","assign","var_sources","TypeError","output","ii","arguments","source","clear","getValues","values","push","isEmpty","extendStatics","__extends","setPrototypeOf","__proto__","__","constructor","events_Target","_super","Target","opt_target","_this","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","indexOf","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","opt_type","keys","index","splice","EventType","CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","listen","opt_this","opt_once","originalListener_1","apply","eventsKey","listenOnce","unlistenByKey","Observable_extends","ol_Observable","Observable","revision_","changed","getRevision","on","len","once","ol_key","un","unByKey","util_abstract","Error","uidCounter_","getUid","obj","ol_uid","String","VERSION","Object_extends","ObjectEvent","oldValue","Object_BaseObject","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","hasProperties","notify","eventType","getChangeEventType","set","opt_silent","unset","changeEventTypeCache","ol_Object","MapEventType","ua","navigator","userAgent","toLowerCase","FIREFOX","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","PASSIVE_EVENT_LISTENERS","passive","options","error","createCanvasContext2D","opt_width","opt_height","opt_canvasPool","canvas","shift","document","createElement","width","height","getContext","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","Control_extends","control_Control","Control","element","style","pointerEvents","target_","map_","listenerKeys","render","setTarget","getMap","setMap","map","getOverlayContainerStopEvent","appendChild","mapEvent","getElementById","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","join","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","size","weight","variant","families","family","split","Property","OPACITY","VISIBLE","EXTENT","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","AssertionError_extends","ol_AssertionError","AssertionError","code","message","assert","assertion","errorCode","clamp","min","max","Math","cosh","x","y","exp","log2","log","LOG2E","squaredSegmentDistance","x1","y1","x2","y2","dx","dy","math_squaredDistance","toRadians","angleInDegrees","PI","modulo","lerp","Base_extends","Base","BaseLayer","properties","opacity","visible","zIndex","maxResolution","Infinity","minResolution","minZoom","maxZoom","className_","className","state_","getClassName","getLayerState","opt_managed","state","layer","managed","getZIndex","round","getOpacity","sourceState","getSourceState","getVisible","extent","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","render_EventType","State","UNDEFINED","LOADING","READY","Layer_extends","inView","layerState","viewState","resolution","zoom","layer_Layer","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","handleSourcePropertyChange_","setSource","array","states","getSource","getState","handleSourceChange_","getFeatures","pixel","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","Attribution_extends","control_Attribution","Attribution","opt_options","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","button","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","j","jj","updateElement_","display","lastChild","removeChildren","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","pointer_EventType","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","proj_Units","proj_Projection","Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","epsg3857_extends","RADIUS","HALF_SIZE","WORLD_EXTENT","epsg3857_EPSG3857Projection","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","slice","halfSize","tan","toEPSG4326","atan","epsg4326_extends","epsg4326_EXTENT","epsg4326_METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","projections_cache","transforms_transforms","transforms_add","destination","transformFn","sourceCode","destinationCode","Corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","createEmpty","extendCoordinate","buffer","opt_extent","clone","closestSquaredDistanceXY","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extent_equals","extendCoordinates","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","extent_isEmpty","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","rotation","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x3","y0","y3","getIntersection","intersection","extent_intersects","applyTransform","opt_stops","xs","ys","_boundingExtentXYs","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","coordinate_equals","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","coordinate_wrapX","projection","worldWidth","worldsAway","getWorldsAway","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","cloneTransform","identityTransform","addProjection","add","proj_get","projectionLike","opt_units","pointResolution","toEPSG4326_1","getTransformFromProjections","vertices","addEquivalentProjections","projections","forEach","addProjections","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","transform","transforms_get","getTransform","proj_transform","transformExtent","projections2","forwardTransform","inverseTransform","proj_userProjection","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","MousePosition_extends","PROJECTION","control_MousePosition","MousePosition","handleProjectionChanged_","coordinateFormat","setCoordinateFormat","setProjection","undefinedHTML_","undefinedHTML","renderOnMouseOut_","renderedHTML_","mapProjection_","transform_","getCoordinateFormat","getProjection","handleMouseMove","updateHTML_","getEventPixel","handleMouseOut","viewport","getViewport","format","html","getCoordinateFromPixelInternal","userProjection","toString","easeIn","pow","easeOut","inAndOut","linear","Zoom_extends","control_Zoom","Zoom","delta","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","duration_","duration","zoomByDelta_","view","getView","currentZoom","getZoom","newZoom","getConstrainedZoom","getAnimating","cancelAnimations","animate","easing","setZoom","GeometryLayout","XY","XYZ","XYM","XYZM","e","f","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","mat","det","transform_toString","transform2D","opt_dest","dest","flat_transform_rotate","anchor","anchorX","anchorY","deltaX","deltaY","k","Geometry_extends","tmpTransform","geom_Geometry","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","nextArgs","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","returnOrUpdate","scale","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","SimpleGeometry_extends","getStrideForLayout","layout","geom_SimpleGeometry","SimpleGeometry","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","flat_transform_scale","transform_translate","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","ends","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","assignClosestArrayPoint","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","pop","first","maxSquaredDistance","squaredDistance_1","douglasPeuckerArray","simplifiedEnds","snap","quantize","quantizeArray","ret","point1","point2","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","interpolatePoint","fraction","length_1","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","intersectsLineString","coordinatesExtent","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","lineStringLength","LineString_extends","geom_LineString","LineString","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getLength","getFlatMidpoint","area_linearRing","twiceArea","area_linearRings","LinearRing_extends","geom_LinearRing","LinearRing","MultiLineString_extends","geom_MultiLineString","MultiLineString","ends_","lineStrings","lineString","appendLineString","opt_interpolate","interpolate","lineStringsCoordinateAtM","getEnds","getLineString","getLineStrings","getFlatMidpoints","midpoints","intersectsLineStringArray","Point_extends","geom_Point","Point","deflateCoordinate","MultiPoint_extends","geom_MultiPoint","MultiPoint","appendPoint","getPoint","getPoints","points","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","abs","reverse_coordinates","linearRingIsClockwise","firstVertexRepeated","iMinVertex","minXAtMinY","findCornerVertex","iPreviousVertex","iNextVertex","aX","aY","bX","bY","cX","cY","linearRingsAreOriented","opt_right","right","isClockwise","orientLinearRings","orientLinearRingsArray","Polygon_extends","Polygon_Polygon","Polygon","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","geom_Polygon","fromExtent","MultiPolygon_extends","geom_MultiPolygon","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","polygon","appendPolygon","newEndss","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingss","getEndss","getFlatInteriorPoints","center_linearRingss","interiorPoints","getInteriorPointsOfMultiArray","getInteriorPoints","linearRingssAreOriented","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","TileProperty","BaseTile_extends","BaseTile","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","ImageState","IDLE","LOADED","EMPTY","renderer_Layer_extends","renderer_Layer","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","loadedTileCallback","tiles","tile","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","forEachFeatureAtCoordinate","hitTolerance","declutteredFeatures","getDataAtPixel","getLayer","handleFontsChanged","renderIfReadyAndVisible","loadImage","image","imageState","load","Event_extends","render_Event","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","defaultLineDash","defaultPadding","checkedFonts","setSize","console","warn","measureFont","div","heights","measureContext","textHeights","registerFont","interval","referenceWidth","retries","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","metrics","measureText","Number","actualBoundingBoxAscent","actualBoundingBoxDescent","margin","padding","position","left","body","offsetHeight","canvas_measureAndCacheTextWidth","cache","rotateAtOffset","offsetX","offsetY","drawImageOrLabel","labelOrImage","originX","originY","w","h","save","globalAlpha","setTransform","contextInstructions","executeLabelInstructions","drawImage","restore","createTransformStringCanvas","canvas_Layer_extends","canvas_Layer","CanvasLayerRenderer","container","renderedResolution","tempTransform","pixelTransform","containerReused","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clip","pixelRatio","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","beginPath","moveTo","lineTo","clipUnrotated","inverted","dispatchRenderEvent_","event_1","preRender","postRender","getRenderTransform","renderPixel","newCanvas","newContext","clearRect","getImageData","err","Uint8Array","TileRange","contains","containsTileRange","getSize","TileRange_createOrUpdate","ol_TileRange","TileState","TileLayer_extends","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileState","getTile","z","setState","getInterimTile","layerIndex","viewResolution","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","zDirection","tileResolution","getResolution","layerExtent","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","uid","inTransition","getAlpha","time","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","canvasTransform","getContextOptions","clips","clipZs","currentClip","zs","getOpaque","reverse","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","origin_1","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","floatX","nextX","floatY","nextY","transition","i_1","drawTileImage","updateUsedTiles","usedTiles","manageTilePyramid","scheduleExpireCache","gutter","getTileImage","tileAlpha","alpha","alphaChanged","endTransition","getImage","canExpireCache","postRenderFunction","tileSourceKey","expireCache","postRenderFunctions","getKey","opt_tileCallback","wantedTiles","tileQueue","tileCount","isKeyQueued","enqueue","getTileCoordCenter","useTile","updateCacheSize","canvas_TileLayer","Tile_extends","layer_Tile","TileLayer","toSize","opt_size","style_Image","ImageStyle","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","scaleArray_","displacement_","displacement","getScale","getRotation","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getHitDetectionImageSize","getOrigin","setRotateWithView","setRotation","setScale","listenImageChange","unlistenImageChange","HEX_COLOR_RE_","NAMED_COLOR_RE_","fromNamed","color","el","rgb","getComputedStyle","cacheSize","fromString","g","exec","hasAlpha","parseInt","substr","normalize","fromStringInternal_","asArray","color_toString","asColorLike","RegularShape_extends","style_RegularShape","RegularShape","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points_","radius_","radius1","radius2_","radius2","angle_","stroke_","stroke","anchor_","size_","imageSize_","hitDetectionImageSize_","getFill","getRadius","getRadius2","getAngle","getStroke","renderOptions","createRenderOptions","createHitDetectionCanvas_","draw_","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","imageSize","angle0","radiusC","arc","fillStyle","lineWidth","setLineDash","closePath","drawHitDetectionCanvas_","Circle_extends","Circle","CircleStyle","setRadius","style_Fill","Fill","color_","setColor","style_Stroke","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometry_","geometryFunction_","defaultGeometryFunction","geometry","setGeometry","image_","renderer","text_","zIndex_","getGeometry","getText","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","feature","defaultStyles","createDefaultStyle","style_Style","BaseVector_extends","BaseVector_Property","BaseVector","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","opt_style","styleFunction","styles_1","toFunction","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","render_VectorContext","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","opt_declutterGroups","Builder_extends","Builder","CanvasBuilder","maxExtent","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","myEnds","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","ImageBuilder_extends","ImageBuilder","CanvasImageBuilder","declutterGroups_","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","ceil","declutterGroups","hitDetectionImage","origin","LineStringBuilder_extends","LineStringBuilder","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","PolygonBuilder_extends","PolygonBuilder","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","TextPlacement","LINE","matchingChunk","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TextBuilder_extends","TEXT_ALIGN","top","middle","hanging","alphabetic","ideographic","bottom","BATCH_CONSTRUCTORS","Default","Text","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","placement","textAlign","flatOffset","flatEnd","oo","range","declutterGroup","concat","drawChars_","geometryWidths","overflow","saveTextStates_","backgroundFill","backgroundStroke","p0","p1","p2","p3","pixelRatio_1","strokeKey","textKey","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","canvas_BuilderGroup","BuilderGroup","tolerance_","maxExtent_","pixelRatio_","resolution_","buildersByZIndex_","addDeclutter","group","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","BuilderType","DEFAULT","IMAGE","TEXT","quickselect","compare","quickselectStep","sd","newLeft","newRight","swap","defaultCompare","rbush_RBush","[object Object]","maxEntries","_maxEntries","_minEntries","_all","bbox","result","rbush_intersects","toBBox","nodesToSearch","children","child","childBBox","leaf","rbush_contains","insert","_build","_splitRoot","tmpNode","_insert","item","createNode","equalsFn","path","indexes","goingUp","findItem","_condense","items","N","M","calcBBox","N2","N1","multiSelect","compareMinX","right2","compareMinY","right3","level","targetNode","minArea","minEnlargement","bboxArea","enlargement","isNode","insertPath","_chooseSubtree","rbush_extend","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareNodeMinX","compareNodeMinY","_allDistMargin","leftBBox","rightBBox","bboxMargin","siblings","destNode","drawTextOnPath","startM","measureAndCacheTextWidth","rotatedCoordinates","previousAngle","numChars","segmentM","angleChanged","char","charLength","charM","segmentPos","Executor_tmpExtent","Executor_tmpTransform","Executor_p1","Executor_p2","Executor_p3","p4","canvas_Executor","Executor","overlaps","alignFill_","declutterItems","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","align","lines","numLines","widths","currentWidth","measureTextWidths","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","strokeInstruction","setStrokeStyle_","replayImageOrLabel_","contextScale","imageOrLabel","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","centerX","centerY","renderBufferX","renderBufferY","strokePadding","declutterArgs","repeatSize","renderDeclutter","declutterTree","boxes","box","declutterData","collides","currentAlpha","drawLabelWithPointPlacement_","execute_","featureCallback","opt_hitExtent","pixelCoordinates","transform1","transform2","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","coords","labelWithAnchor","widthIndex","declutterGroupIndex","rendered","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","cc","chars","part","execute","executeHitDetection","opt_featureCallback","ORDER","ExecutorGroup_ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","contextSize","hitExtent","mask","circleArrayCache","arraySize","fillCircleArrayRowToMiddle","getCircleArray","imageData","j_1","result_1","executor","opt_builderTypes","opt_declutterReplays","builderTypes","0","canvas_ExecutorGroup","ViewHint","Immediate_extends","Immediate","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","simpleGeometry","transformGeom2D","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageAnchor","imageImage","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","IconAnchorUnits","FRACTION","IconOrigin","IconImageCache","cache_","cacheSize_","maxCacheSize_","expire","iconImage","src","crossOrigin","maxCacheSize","asString","shared","ImageBase_extends","ol_ImageBase","ImageBase","Image_extends","listenImage","loadHandler","errorHandler","img","promise","listening_1","then","catch","ImageWrapper","imageLoadFunction","src_","unlisten_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","IconImage_extends","taintedTestContext","IconImage_IconImage","IconImage","imageState_","tainted_","isTainted_","dispatchChangeEvent_","replaceColor_","fillRect","getSrc","ctx","globalCompositeOperation","imgData","putImageData","Icon_extends","style_Icon","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","IconImage_get","offset_","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","GeometryCollection","replayGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","loading","renderGeometry","getGeometries","renderFeatureInternal","VectorLayer_extends","canvas_VectorLayer","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","makeScale","vectorSource","clipped","viewHints","declutterReplays","getWrapX","world","transform_1","transform_2","viewHints_1","zz","executorData","currentExecutor","replayDeclutter","parseFloat","Promise","resolve","reject","transforms","features","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","styles","originalStyle","canvas_1","imgContext","byGeometryType","replace","zIndexKeys","geomAndStyle","kk","createHitDetectionImageData","resultFeatures","hitDetect","layer_1","features_1","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","loadExtents","loadExtent","wrapX","userTransform","loadFeatures","dirty","userExtent","getFeaturesInExtent","replayGroupInstructions","executorGroup","getOverlaps","Vector_extends","Vector","VectorLayer","ol_Tile_extends","ol_Tile","Tile","interimTile","hifi","transition_","transitionStarts_","release","refreshInterimChain","prev","getTileCoord","id","ImageTile_extends","brokenDiagonalRendering_","ol_ImageTile","ImageTile","tileLoadFunction","tileLoadFunction_","naturalWidth","naturalHeight","ERROR_THRESHOLD","MAX_SUBDIVISION","reproj_Triangulation","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","IMAGE_SMOOTHING_DISABLED","msImageSmoothingEnabled","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetCenter","targetResolution","sourceCenter","sourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","reproj_render","triangulation","sources","opt_renderEdges","opt_contextOptions","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","isBrokenDiagonalRendering","ud","vd","step","steps","reproj_Tile_extends","reproj_Tile","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","calculateSourceExtentResolution","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","reproject_","getTileSize","leftToLoad_1","sourceListenKey_1","unlistenSources_","setTimeout","structs_LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","getCount","containsKey","entry","value_","key_","newer","older","remove","peekLast","peekLastKey","peekFirstKey","tilecoord_createOrUpdate","opt_tileCoord","getKeyZXY","tilecoord_getKey","TileCache_extends","ol_TileCache","TileCache","pruneExceptNewestZ","fromKey","TileEventType","Source_extends","adaptAttributions","attributionLike","source_Source","Source","projection_","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","getResolutions","refresh","setAttributions","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","tmpTileCoord","tilegrid_TileGrid","TileGrid","opt_strict","zoomFactor","resolutions_","resolutions","every","currentVal","res","origins","zoomFactor_","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordResolution","getFullTileRange","opt_direction","fullTileRanges","getForProjection","opt_maxZoom","opt_tileSize","opt_corner","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","opt_maxResolution","half","source_Tile_extends","Tile_TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","getTileGrid","thisProj","ratio","getTileCoordForTileUrlFunction","opt_projection","tilegrid_wrapX","withinExtentAndZ","TileSourceEvent","source_Tile","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","hash","createFromTileUrlFunctions","UrlTile_extends","source_UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","handleTileChange","setTileLoadFunction","setTileUrlFunction","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","stop_1","expandUrl","TileImage_extends","defaultTileLoadFunction","imageTile","source_TileImage","TileImage","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","usedTileCache","getGutter","JSON","stringify","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","XYZ_extends","source_XYZ","xyzOptions","gridOptions","createXYZ","OSM_extends","ATTRIBUTION","source_OSM","OSM","CollectionEventType","ADD","REMOVE","Collection_extends","Collection_Property","CollectionEvent","opt_element","opt_index","ol_Collection","Collection","unique_","unique","array_","assertUnique_","updateLength_","getArray","insertAt","elem","removeAt","setAt","opt_except","structs_RBush","RBush","opt_maxEntries","rbush_","items_","extents","update","getAll","all","getInExtent","search","forEach_","forEachInExtent","toJSON","rbush","VectorEventType","loadingstrategy_all","FormatType","ARRAY_BUFFER","XML","withCredentials","featureloader_xhr","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","loadFeaturesXhr","dataProjection","addFeatures","source_Vector_extends","VectorSourceEvent","opt_feature","source_Vector","VectorSource","loader_","format_","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","getId","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getClosestFeatureToCoordinate","opt_filter","closestFeature","filter","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","DEFAULT_FILL_COLOR","style_Text","font_","textAlign_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","padding_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","Feature_extends","ol_Feature","Feature","opt_geometryOrProperties","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","setGeometryName","getGeometryName","handleGeometryChange_","createStyleFunction","setId","Map_extends","expireIconCache","renderer_Map","MapRenderer","declutterTree_","dispatchRenderEvent","calculateMatrices2D","pixelToCoordinateTransform","checkWrapped","thisArg","layerFilter","thisArg2","translatedCoordinate","offsets","layerStates","numLayers","tmpCoord","callback_1","forEachLayerAtPixel","hasFeatureAtCoordinate","zIndexItems","renderDeclutterItems","scheduleExpireIconCache","Composite_extends","Composite","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","insertBefore","firstChild","children_","previousElement","oldChildren","childNodes","oldChild","newChild","replaceChildren","Group_extends","Group_Property","LAYERS","Group","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","MapEvent_extends","ol_MapEvent","MapEvent","MapBrowserEvent_extends","ol_MapBrowserEvent","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","configurable","getCoordinateFromPixel","MapBrowserEventType","SINGLECLICK","POINTERDRAG","MapBrowserEventHandler_extends","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","clearTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","handlePointerMove_","getRootNode","isMoving_","defaultPrevented","clientX","clientY","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","structs_PriorityQueue","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue_extends","ol_TileQueue","TileQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","ViewProperty","createExtent","onlyCenter","smooth","opt_isMoving","viewWidth","viewHeight","none","getViewportClampedResolution","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createMinMaxResolution","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","disable","rotationconstraint_none","View_extends","DEFAULT_MIN_ZOOM","animationCallback","returnValue","isNoopAnimation","animation","sourceRotation","targetRotation","ol_View","View","hints_","animations_","updateAnimationKey_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","constrainResolution","capped","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","power","opt_minResolution","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","theta","createRotationConstraint","constraints_","setCenterInternal","setResolution","options_","getUpdatedOptions_","newOptions","getCenterInternal","var_args","isDef","resolveConstraints","args","animateInternal","animationCount","Date","now","series","complete","getResolutionForZoom","setHint","updateAnimations_","getInteracting","cancelAnimationFrame","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getZoomForResolution","setConstrainResolution","enabled","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","nearest","baseLevel","fit","geometryOrExtent","fitInternal","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRotX","centerRotY","getConstrainedCenter","centerOn","centerOnInternal","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","targetZoom","targetRes","PluggableMap_extends","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","controls","interactions","overlays","layerGroup","createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","forEachFeatureAtPixel","getFeaturesAtPixel","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","getTarget","getTargetElement","getOverlayById","getLoading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getOverlayContainer","tileCenter","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","elementFromPoint","documentElement","interactionsArray","getActive","handlePostRender","hints","lowOnFrameBudget","targetElement","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","hasArea","setLayerGroup","setView","computedStyle","offsetWidth","Rotate_extends","control_Rotate","Rotate","callResetNorth_","resetNorth","autoHide_","autoHide","resetNorth_","interaction_Property","Interaction_extends","zoomByDelta","interaction_Interaction","Interaction","setActive","active","DoubleClickZoom_extends","interaction_DoubleClickZoom","DoubleClickZoom","delta_","stopEvent","shiftKey","Pointer_extends","Pointer_centroid","Pointer","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","condition_all","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","hasAttribute","activeElement","condition_focus","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","pointerType","primaryAction","isPrimary","DragPan_extends","interaction_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroid","distance","centerpx","DragRotate_extends","interaction_DragRotate","DragRotate","lastAngle_","Box_extends","Box","RenderBox","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","DragBox_extends","DragBoxEventType","DragBoxEvent","interaction_DragBox","DragBox","box_","minArea_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","DragZoom_extends","interaction_DragZoom","DragZoom","out_","out","mapExtent","boxPixelExtent","scaleFromCenter","KeyCode","KeyboardPan_extends","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyCode","mapUnitsDelta","pan","KeyboardZoom_extends","interaction_KeyboardZoom","KeyboardZoom","ol_Kinetic","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","lastIndex","firstIndex","MouseWheelZoom_extends","Mode","interaction_MouseWheelZoom","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate_extends","interaction_PinchRotate","PinchRotate","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom_extends","interaction_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","ol_Map_extends","Map_Map","Map","zoomOptions","rotateOptions","attribution","attributionOptions","defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","interaction_defaults","ol","createStringXY","opt_fractionDigits","toFixed","coordinate_format","toStringXY","geom","fromLonLat","__webpack_exports__"],"mappings":"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","file":"OpenLayers.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ol\"] = factory();\n\telse\n\t\troot[\"ol\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar BaseEvent = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function BaseEvent(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.preventDefault = function () {\n        this.propagationStopped = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return BaseEvent;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default BaseEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange',\n};\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @protected\n         */\n        this.disposed = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed) {\n            this.disposed = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + ((high - low) >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) {\n            /* Too low. */\n            low = mid + 1;\n        }\n        else {\n            /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || (opt_strict && res === 0));\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/functions\n */\nimport { equals as arrayEquals } from './array.js';\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n    var called = false;\n    /** @type {ReturnType} */\n    var lastResult;\n    /** @type {Array<any>} */\n    var lastArgs;\n    var lastThis;\n    return function () {\n        var nextArgs = Array.prototype.slice.call(arguments);\n        if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n            called = true;\n            lastThis = this;\n            lastArgs = nextArgs;\n            lastResult = fn.apply(this, arguments);\n        }\n        return lastResult;\n    };\n}\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        var output = Object(target);\n        for (var i = 1, ii = arguments.length; i < ii; ++i) {\n            var source = arguments[i];\n            if (source !== undefined && source !== null) {\n                for (var key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        output[key] = source[key];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        var values = [];\n        for (var property in object) {\n            values.push(object[property]);\n        }\n        return values;\n    };\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport { VOID } from '../functions.js';\nimport { clear } from '../obj.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    /**\n     * @param {*=} opt_target Default event target for dispatched events.\n     */\n    function Target(opt_target) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.eventTarget_ = opt_target;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.pendingRemovals_ = null;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.dispatching_ = null;\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n         */\n        _this.listeners_ = null;\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        if (!type || !listener) {\n            return;\n        }\n        var listeners = this.listeners_ || (this.listeners_ = {});\n        var listenersForType = listeners[type] || (listeners[type] = []);\n        if (listenersForType.indexOf(listener) === -1) {\n            listenersForType.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        /** @type {import(\"./Event.js\").default|Event} */\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        if (!evt.target) {\n            evt.target = this.eventTarget_ || this;\n        }\n        var listeners = this.listeners_ && this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            var dispatching = this.dispatching_ || (this.dispatching_ = {});\n            var pendingRemovals = this.pendingRemovals_ || (this.pendingRemovals_ = {});\n            if (!(type in dispatching)) {\n                dispatching[type] = 0;\n                pendingRemovals[type] = 0;\n            }\n            ++dispatching[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if ('handleEvent' in listeners[i]) {\n                    propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[i]).handleEvent(evt);\n                }\n                else {\n                    propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[i]).call(this, evt);\n                }\n                if (propagate === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --dispatching[type];\n            if (dispatching[type] === 0) {\n                var pr = pendingRemovals[type];\n                delete pendingRemovals[type];\n                while (pr--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete dispatching[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * Clean up.\n     */\n    Target.prototype.disposeInternal = function () {\n        this.listeners_ && clear(this.listeners_);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return (this.listeners_ && this.listeners_[type]) || undefined;\n    };\n    /**\n     * @param {string=} opt_type Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        if (!this.listeners_) {\n            return false;\n        }\n        return opt_type\n            ? opt_type in this.listeners_\n            : Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_ && this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (index !== -1) {\n                if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n                    // make listener a no-op, and remove later in #dispatchEvent()\n                    listeners[index] = VOID;\n                    ++this.pendingRemovals_[type];\n                }\n                else {\n                    listeners.splice(index, 1);\n                    if (listeners.length === 0) {\n                        delete this.listeners_[type];\n                    }\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~BaseEvent#change\n     * @api\n     */\n    CHANGE: 'change',\n    /**\n     * Generic error event. Triggered when an error occurs.\n     * @event module:ol/events/Event~BaseEvent#error\n     * @api\n     */\n    ERROR: 'error',\n    BLUR: 'blur',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    FOCUS: 'focus',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    RESIZE: 'resize',\n    TOUCHMOVE: 'touchmove',\n    WHEEL: 'wheel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent\n */\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    if (opt_this && opt_this !== target) {\n        listener = listener.bind(opt_this);\n    }\n    if (opt_once) {\n        var originalListener_1 = listener;\n        listener = function () {\n            target.removeEventListener(type, listener);\n            originalListener_1.apply(this, arguments);\n        };\n    }\n    var eventsKey = {\n        target: target,\n        type: type,\n        listener: listener,\n    };\n    target.addEventListener(type, listener);\n    return eventsKey;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        key.target.removeEventListener(key.type, key.listener);\n        clear(key);\n    }\n}\n//# sourceMappingURL=events.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { listen, listenOnce, unlistenByKey } from './events.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        var key;\n        if (Array.isArray(type)) {\n            var len = type.length;\n            key = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                key[i] = listenOnce(this, type[i], listener);\n            }\n        }\n        else {\n            key = listenOnce(this, /** @type {string} */ (type), listener);\n        }\n        /** @type {Object} */ (listener).ol_key = key;\n        return key;\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        var key = /** @type {Object} */ (listener).ol_key;\n        if (key) {\n            unByKey(key);\n        }\n        else if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                this.removeEventListener(type[i], listener);\n            }\n        }\n        else {\n            this.removeEventListener(type, listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.4.3';\n//# sourceMappingURL=util.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport { assign, isEmpty } from './obj.js';\nimport { getUid } from './util.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {Object<string, *>}\n         */\n        _this.values_ = null;\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_ && this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return (this.values_ && Object.keys(this.values_)) || [];\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return (this.values_ && assign({}, this.values_)) || {};\n    };\n    /**\n     * @return {boolean} The object has properties.\n     */\n    BaseObject.prototype.hasProperties = function () {\n        return !!this.values_;\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        var values = this.values_ || (this.values_ = {});\n        if (opt_silent) {\n            values[key] = value;\n        }\n        else {\n            var oldValue = values[key];\n            values[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (this.values_ && key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (isEmpty(this.values_)) {\n                this.values_ = null;\n            }\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key)\n        ? changeEventTypeCache[key]\n        : (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend',\n};\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport var WORKER_OFFSCREEN_CANVAS = typeof WorkerGlobalScope !== 'undefined' &&\n    typeof OffscreenCanvas !== 'undefined' &&\n    self instanceof WorkerGlobalScope; //eslint-disable-line\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport var IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n/**\n * @type {boolean}\n */\nexport var PASSIVE_EVENT_LISTENERS = (function () {\n    var passive = false;\n    try {\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passive = true;\n            },\n        });\n        window.addEventListener('_', null, options);\n        window.removeEventListener('_', null, options);\n    }\n    catch (error) {\n        // passive not supported\n    }\n    return passive;\n})();\n//# sourceMappingURL=has.js.map","import { WORKER_OFFSCREEN_CANVAS } from './has.js';\n/**\n * @module ol/dom\n */\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @param {Array<HTMLCanvasElement>=} opt_canvasPool Canvas pool to take existing canvas from.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool) {\n    var canvas = opt_canvasPool && opt_canvasPool.length\n        ? opt_canvasPool.shift()\n        : WORKER_OFFSCREEN_CANVAS\n            ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n            : document.createElement('canvas');\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n    return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport { VOID } from '../functions.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { removeNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        var element = options.element;\n        if (element && !options.target && !element.style.pointerEvents) {\n            element.style.pointerEvents = 'auto';\n        }\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = element ? element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_\n                ? this.target_\n                : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * Renders the control.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @api\n     */\n    Control.prototype.render = function (mapEvent) { };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ =\n            typeof target === 'string' ? document.getElementById(target) : target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/css\n */\n/**\n * @typedef {Object} FontParameters\n * @property {string} style\n * @property {string} variant\n * @property {string} weight\n * @property {string} size\n * @property {string} lineHeight\n * @property {string} family\n * @property {Array<string>} families\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * From http://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nvar fontRegEx = new RegExp([\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n].join(''), 'i');\nvar fontRegExMatchIndex = [\n    'style',\n    'variant',\n    'weight',\n    'size',\n    'lineHeight',\n    'family',\n];\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport var getFontParameters = function (fontSpec) {\n    var match = fontSpec.match(fontRegEx);\n    if (!match) {\n        return null;\n    }\n    var style = /** @type {FontParameters} */ ({\n        lineHeight: 'normal',\n        size: '1.2em',\n        style: 'normal',\n        weight: 'normal',\n        variant: 'normal',\n    });\n    for (var i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n        var value = match[i + 1];\n        if (value !== undefined) {\n            style[fontRegExMatchIndex[i]] = value;\n        }\n    }\n    style.families = style.family.split(/,\\s?/);\n    return style;\n};\n//# sourceMappingURL=css.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    MAX_ZOOM: 'maxZoom',\n    MIN_ZOOM: 'minZoom',\n    SOURCE: 'source',\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' +\n            path +\n            '/doc/errors/#' +\n            code +\n            ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/math\n */\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n})();\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport var log2 = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var log2;\n    if ('log2' in Math) {\n        // The environment supports the native Math.log2 function, use it…\n        log2 = Math.log2;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        log2 = function (x) {\n            return Math.log(x) * Math.LOG2E;\n        };\n    }\n    return log2;\n})();\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return (angleInRadians * 180) / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return (angleInDegrees * Math.PI) / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { clamp } from '../math.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        properties[LayerProperty.MIN_ZOOM] =\n            options.minZoom !== undefined ? options.minZoom : -Infinity;\n        properties[LayerProperty.MAX_ZOOM] =\n            options.maxZoom !== undefined ? options.maxZoom : Infinity;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ =\n            properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * This method is not meant to be called by layers or layer renderers because the state\n     * is incorrect if the layer is included in a layer group.\n     *\n     * @param {boolean=} opt_managed Layer is managed.\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function (opt_managed) {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ ||\n            /** @type {?} */ ({\n                layer: this,\n                managed: opt_managed === undefined ? true : opt_managed,\n            });\n        var zIndex = this.getZIndex();\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex =\n            zIndex !== undefined ? zIndex : state.managed === false ? Infinity : 0;\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        state.minZoom = this.getMinZoom();\n        state.maxZoom = this.getMaxZoom();\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the minimum zoom level of the layer.\n     * @return {number} The minimum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n    };\n    /**\n     * Return the maximum zoom level of the layer.\n     * @return {number} The maximum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the maximum zoom (exclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} maxZoom The maximum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxZoom = function (maxZoom) {\n        this.set(LayerProperty.MAX_ZOOM, maxZoom);\n    };\n    /**\n     * Set the minimum zoom (inclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} minZoom The minimum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinZoom = function (minZoom) {\n        this.set(LayerProperty.MIN_ZOOM, minZoom);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    /**\n     * Clean up.\n     */\n    BaseLayer.prototype.disposeInternal = function () {\n        if (this.state_) {\n            this.state_.layer = null;\n            this.state_ = null;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error',\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n * @property {number} minZoom\n * @property {number} maxZoom\n */\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        // Overwrite default render method with a custom one\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        _this.addEventListener(getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_);\n        var source = options.source\n            ? /** @type {SourceType} */ (options.source)\n            : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../pixel\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    Layer.prototype.getFeatures = function (pixel) {\n        return this.renderer_.getFeatures(pixel);\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target which the renderer may (but need not) use\n     * for rendering its content.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState, target) {\n        var layerRenderer = this.getRenderer();\n        if (layerRenderer.prepareFrame(frameState)) {\n            return layerRenderer.renderFrame(frameState, target);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n                var layerStatesArray = renderEvent.frameState.layerStatesArray;\n                var layerState = this.getLayerState(false);\n                // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n                assert(!layerStatesArray.some(function (arrayLayerState) {\n                    return arrayLayerState.layer === layerState.layer;\n                }), 67);\n                layerStatesArray.push(layerState);\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * @return {boolean} The layer has a renderer.\n     */\n    Layer.prototype.hasRenderer = function () {\n        return !!this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    /**\n     * Clean up.\n     */\n    Layer.prototype.disposeInternal = function () {\n        this.setSource(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n    if (!layerState.visible) {\n        return false;\n    }\n    var resolution = viewState.resolution;\n    if (resolution < layerState.minResolution ||\n        resolution >= layerState.maxResolution) {\n        return false;\n    }\n    var zoom = viewState.zoom;\n    return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { equals } from '../array.js';\nimport { inView } from '../layer/Layer.js';\nimport { removeChildren, replaceNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options=} opt_options Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ =\n            options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ =\n            options.collapsible !== undefined ? options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = _this.collapsible_ && !_this.collapsed_ ? _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className +\n            ' ' +\n            CLASS_UNSELECTABLE +\n            ' ' +\n            CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ulElement_);\n        element.appendChild(button);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var layerStatesArray = frameState.layerStatesArray;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!inView(layerState, frameState.viewState)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            if (!this.overrideCollapsible_ &&\n                source.getAttributionsCollapsible() === false) {\n                this.setCollapsible(false);\n            }\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (!collapsible && this.collapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    /**\n     * Update the attribution element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Attribution.prototype.render = function (mapEvent) {\n        this.updateElement_(mapEvent.frameState);\n    };\n    return Attribution;\n}(Control));\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    DEGREES: 'degrees',\n    FEET: 'ft',\n    METERS: 'm',\n    PIXELS: 'pixels',\n    TILE_PIXELS: 'tile-pixels',\n    USFEET: 'us-ft',\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ =\n            options.worldExtent !== undefined ? options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ =\n            options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport { cosh } from '../math.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            },\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    var halfSize = HALF_SIZE;\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (halfSize * input[i]) / 180;\n        var y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n        if (y > halfSize) {\n            y = halfSize;\n        }\n        else if (y < -halfSize) {\n            y = -halfSize;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (180 * input[i]) / HALF_SIZE;\n        output[i + 1] =\n            (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string=} opt_axisOrientation Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT,\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n    new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu'),\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return cache[code] || null;\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/extent/Corner\n */\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16,\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport { assert } from './asserts.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value,\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return (extent1[0] <= extent2[0] &&\n        extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] &&\n        extent2[3] <= extent1[3]);\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return (extent1[0] == extent2[0] &&\n        extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] &&\n        extent1[3] == extent2[3]);\n}\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n    return (Math.abs(extent1[0] - extent2[0]) < tolerance &&\n        Math.abs(extent1[2] - extent2[2]) < tolerance &&\n        Math.abs(extent1[1] - extent2[1]) < tolerance &&\n        Math.abs(extent1[3] - extent2[3]) < tolerance);\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = (resolution * size[0]) / 2;\n    var dy = (resolution * size[1]) / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return (extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1]);\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - (endY - maxY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - (endX - maxX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - (endY - minY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - (endX - minX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n    var coordinates = [];\n    if (opt_stops > 1) {\n        var width = extent[2] - extent[0];\n        var height = extent[3] - extent[1];\n        for (var i = 0; i < opt_stops; ++i) {\n            coordinates.push(extent[0] + (width * i) / opt_stops, extent[1], extent[2], extent[1] + (height * i) / opt_stops, extent[2] - (width * i) / opt_stops, extent[3], extent[0], extent[3] - (height * i) / opt_stops);\n        }\n    }\n    else {\n        coordinates = [\n            extent[0],\n            extent[1],\n            extent[2],\n            extent[1],\n            extent[2],\n            extent[3],\n            extent[0],\n            extent[3],\n        ];\n    }\n    transformFn(coordinates, coordinates, 2);\n    var xs = [];\n    var ys = [];\n    for (var i = 0, l = coordinates.length; i < l; i += 2) {\n        xs.push(coordinates[i]);\n        ys.push(coordinates[i + 1]);\n    }\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n    var projectionExtent = projection.getExtent();\n    var center = getCenter(extent);\n    if (projection.canWrapX() &&\n        (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.floor((center[0] - projectionExtent[0]) / worldWidth);\n        var offset = worldsAway * worldWidth;\n        extent[0] -= offset;\n        extent[2] -= offset;\n    }\n    return extent;\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle',\n};\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport { toDegrees, toRadians } from './math.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) *\n            Math.sin(deltaLonBy2) *\n            Math.cos(lat1) *\n            Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area +=\n            toRadians(x2 - x1) *\n                (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return (area * radius * radius) / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 +\n        Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/coordinate\n */\nimport { getWidth } from './extent.js';\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + (r * dx) / d;\n    var y = y0 + (r * dy) / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = dx === 0 && dy === 0\n        ? 0\n        : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - deg * 3600 - min * 60;\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return (deg +\n        '\\u00b0 ' +\n        padNumber(min, 2) +\n        '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) +\n        '\\u2033' +\n        (normalizedDegrees == 0\n            ? ''\n            : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return (degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n            ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n    if (projection.canWrapX()) {\n        var worldWidth = getWidth(projection.getExtent());\n        var worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n        if (worldsAway) {\n            coordinate[0] -= worldsAway * worldWidth;\n        }\n    }\n    return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number=} opt_sourceExtentWidth Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n    var projectionExtent = projection.getExtent();\n    var worldsAway = 0;\n    if (projection.canWrapX() &&\n        (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])) {\n        var sourceExtentWidth = opt_sourceExtentWidth || getWidth(projectionExtent);\n        worldsAway = Math.floor((coordinate[0] - projectionExtent[0]) / sourceExtentWidth);\n    }\n    return worldsAway;\n}\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport { PROJECTIONS as EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326, } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport { add as addProj, clear as clearProj, get as getProj, } from './proj/projections.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc, } from './proj/transforms.js';\nimport { applyTransform, getWidth } from './extent.js';\nimport { clamp, modulo } from './math.js';\nimport { getDistance } from './sphere.js';\nimport { getWorldsAway } from './coordinate.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    addProj(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string'\n        ? getProj(/** @type {string} */ (projectionLike))\n        : /** @type {Projection} */ (projectionLike) || null;\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution =\n                    (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            var vertices = [\n                point[0] - resolution / 2,\n                point[1],\n                point[0] + resolution / 2,\n                point[1],\n                point[0],\n                point[1] - resolution / 2,\n                point[0],\n                point[1] + resolution / 2,\n            ];\n            vertices = toEPSG4326_1(vertices, vertices, 2);\n            var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n            var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n            pointResolution = (width + height) / 2;\n            var metersPerUnit = opt_units\n                ? METERS_PER_UNIT[opt_units]\n                : projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    clearProj();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return /** @type {Projection} */ (projection);\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * @type {?Projection}\n */\nvar userProjection = null;\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n    userProjection = get(projection);\n}\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n    userProjection = null;\n}\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @returns {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n    return userProjection;\n}\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n    setUserProjection('EPSG:4326');\n}\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @returns {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, sourceProjection, userProjection);\n}\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, userProjection, destProjection);\n}\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @returns {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, sourceProjection, userProjection);\n}\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, userProjection, destProjection);\n}\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n    return function (coord) {\n        var sourceX = coord[0];\n        var sourceY = coord[1];\n        var transformed, worldsAway;\n        if (sourceProj.canWrapX()) {\n            var sourceExtent = sourceProj.getExtent();\n            var sourceExtentWidth = getWidth(sourceExtent);\n            worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n            if (worldsAway) {\n                // Move x to the real world\n                sourceX = sourceX - worldsAway * sourceExtentWidth;\n            }\n            sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n            sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n            transformed = transform([sourceX, sourceY]);\n        }\n        else {\n            transformed = transform(coord);\n        }\n        if (worldsAway && destProj.canWrapX()) {\n            // Move transformed coordinate back to the offset world\n            transformed[0] += worldsAway * getWidth(destProj.getExtent());\n        }\n        return transformed;\n    };\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/control/MousePosition\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Control from './Control.js';\nimport EventType from '../pointer/EventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport { get as getProjection, getTransformFromProjections, getUserProjection, identityTransform, } from '../proj.js';\nimport { listen } from '../events.js';\n/**\n * @type {string}\n */\nvar PROJECTION = 'projection';\n/**\n * @type {string}\n */\nvar COORDINATE_FORMAT = 'coordinateFormat';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [undefinedHTML='&#160;'] Markup to show when coordinates are not\n * available (e.g. when the pointer leaves the map viewport).  By default, the last position\n * will be replaced with `'&#160;'` (`&nbsp;`) when the pointer leaves the viewport.  To\n * retain the last rendered position, set this option to something falsey (like an empty\n * string `''`).\n */\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nvar MousePosition = /** @class */ (function (_super) {\n    __extends(MousePosition, _super);\n    /**\n     * @param {Options=} opt_options Mouse position options.\n     */\n    function MousePosition(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var element = document.createElement('div');\n        element.className =\n            options.className !== undefined ? options.className : 'ol-mouse-position';\n        _this = _super.call(this, {\n            element: element,\n            render: options.render,\n            target: options.target,\n        }) || this;\n        _this.addEventListener(getChangeEventType(PROJECTION), _this.handleProjectionChanged_);\n        if (options.coordinateFormat) {\n            _this.setCoordinateFormat(options.coordinateFormat);\n        }\n        if (options.projection) {\n            _this.setProjection(options.projection);\n        }\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.undefinedHTML_ =\n            options.undefinedHTML !== undefined ? options.undefinedHTML : '&#160;';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderOnMouseOut_ = !!_this.undefinedHTML_;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.renderedHTML_ = element.innerHTML;\n        /**\n         * @private\n         * @type {?import(\"../proj/Projection.js\").default}\n         */\n        _this.mapProjection_ = null;\n        /**\n         * @private\n         * @type {?import(\"../proj.js\").TransformFunction}\n         */\n        _this.transform_ = null;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MousePosition.prototype.handleProjectionChanged_ = function () {\n        this.transform_ = null;\n    };\n    /**\n     * Return the coordinate format type used to render the current position or\n     * undefined.\n     * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n     *     position in.\n     * @observable\n     * @api\n     */\n    MousePosition.prototype.getCoordinateFormat = function () {\n        return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (this.get(COORDINATE_FORMAT));\n    };\n    /**\n     * Return the projection that is used to report the mouse position.\n     * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n     *     position in.\n     * @observable\n     * @api\n     */\n    MousePosition.prototype.getProjection = function () {\n        return /** @type {import(\"../proj/Projection.js\").default|undefined} */ (this.get(PROJECTION));\n    };\n    /**\n     * @param {MouseEvent} event Browser event.\n     * @protected\n     */\n    MousePosition.prototype.handleMouseMove = function (event) {\n        var map = this.getMap();\n        this.updateHTML_(map.getEventPixel(event));\n    };\n    /**\n     * @param {Event} event Browser event.\n     * @protected\n     */\n    MousePosition.prototype.handleMouseOut = function (event) {\n        this.updateHTML_(null);\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    MousePosition.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            var viewport = map.getViewport();\n            this.listenerKeys.push(listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this));\n            if (this.renderOnMouseOut_) {\n                this.listenerKeys.push(listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this));\n            }\n        }\n    };\n    /**\n     * Set the coordinate format type used to render the current position.\n     * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n     *     position in.\n     * @observable\n     * @api\n     */\n    MousePosition.prototype.setCoordinateFormat = function (format) {\n        this.set(COORDINATE_FORMAT, format);\n    };\n    /**\n     * Set the projection that is used to report the mouse position.\n     * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n     *     position in.\n     * @observable\n     * @api\n     */\n    MousePosition.prototype.setProjection = function (projection) {\n        this.set(PROJECTION, getProjection(projection));\n    };\n    /**\n     * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @private\n     */\n    MousePosition.prototype.updateHTML_ = function (pixel) {\n        var html = this.undefinedHTML_;\n        if (pixel && this.mapProjection_) {\n            if (!this.transform_) {\n                var projection = this.getProjection();\n                if (projection) {\n                    this.transform_ = getTransformFromProjections(this.mapProjection_, projection);\n                }\n                else {\n                    this.transform_ = identityTransform;\n                }\n            }\n            var map = this.getMap();\n            var coordinate = map.getCoordinateFromPixelInternal(pixel);\n            if (coordinate) {\n                var userProjection = getUserProjection();\n                if (userProjection) {\n                    this.transform_ = getTransformFromProjections(this.mapProjection_, userProjection);\n                }\n                this.transform_(coordinate, coordinate);\n                var coordinateFormat = this.getCoordinateFormat();\n                if (coordinateFormat) {\n                    html = coordinateFormat(coordinate);\n                }\n                else {\n                    html = coordinate.toString();\n                }\n            }\n        }\n        if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n            this.element.innerHTML = html;\n            this.renderedHTML_ = html;\n        }\n    };\n    /**\n     * Update the projection. Rendering of the coordinates is done in\n     * `handleMouseMove` and `handleMouseUp`.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    MousePosition.prototype.render = function (mapEvent) {\n        var frameState = mapEvent.frameState;\n        if (!frameState) {\n            this.mapProjection_ = null;\n        }\n        else {\n            if (this.mapProjection_ != frameState.viewState.projection) {\n                this.mapProjection_ = frameState.viewState.projection;\n                this.transform_ = null;\n            }\n        }\n    };\n    return MousePosition;\n}(Control));\nexport default MousePosition;\n//# sourceMappingURL=MousePosition.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options=} opt_options Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined\n            ? options.zoomOutTipLabel\n            : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = className + '-in';\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string'\n            ? document.createTextNode(zoomInLabel)\n            : zoomInLabel);\n        inElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, delta), false);\n        var outElement = document.createElement('button');\n        outElement.className = className + '-out';\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string'\n            ? document.createTextNode(zoomOutLabel)\n            : zoomOutLabel);\n        outElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, -delta), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM',\n};\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` porperty of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n    return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    return 'matrix(' + mat.join(', ') + ')';\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, create as createTransform, } from '../transform.js';\nimport { createEmpty, createOrUpdateEmpty, getHeight, returnOrUpdate, } from '../extent.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport { memoizeOne } from '../functions.js';\nimport { transform2D } from './flat/transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        /**\n         * Get a transformed and simplified version of the geometry.\n         * @abstract\n         * @param {number} revision The geometry revision.\n         * @param {number} squaredTolerance Squared tolerance.\n         * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n         * @return {Geometry} Simplified geometry.\n         */\n        _this.simplifyTransformedInternal = memoizeOne(function (revision, squaredTolerance, opt_transform) {\n            if (!opt_transform) {\n                return this.getSimplifiedGeometry(squaredTolerance);\n            }\n            var clone = this.clone();\n            clone.applyTransform(opt_transform);\n            return clone.getSimplifiedGeometry(squaredTolerance);\n        });\n        return _this;\n    }\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.simplifyTransformed = function (squaredTolerance, opt_transform) {\n        return this.simplifyTransformedInternal(this.getRevision(), squaredTolerance, opt_transform);\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            var extent = this.computeExtent(this.extent_);\n            if (isNaN(extent[0]) || isNaN(extent[1])) {\n                createOrUpdateEmpty(extent);\n            }\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n     * algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS\n            ? function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            }\n            : getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport { rotate, scale, transform2D, translate } from './flat/transform.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./GeometryLayout.js\").default}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {import(\"./GeometryLayout.js\").default} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n        var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n        if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n            return simplifiedGeometry;\n        }\n        else {\n            // Simplification did not actually remove any coordinates.  We now know\n            // that any calls to getSimplifiedGeometry with a squaredTolerance less\n            // than or equal to the current squaredTolerance will also not have any\n            // effect.  This allows us to short circuit simplification (saving CPU\n            // cycles) and prevents the cache of simplified geometries from filling\n            // up with useless identical copies of this geometry (saving memory).\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index +=\n                stride *\n                    Math.max(((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n                        maxDelta) |\n                        0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredDistance, squaredSegmentDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined\n        ? opt_simplifiedFlatCoordinates\n        : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if (dx1 * dy2 == dy1 * dx2 &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var point2 = [];\n    var ret;\n    for (; offset + stride < end; offset += stride) {\n        point2[0] = flatCoordinates[offset + stride];\n        point2[1] = flatCoordinates[offset + stride + 1];\n        ret = callback(point1, point2);\n        if (ret) {\n            return ret;\n        }\n        point1[0] = point2[0];\n        point1[1] = point2[1];\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport { binarySearch } from '../../array.js';\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @param {number=} opt_dimension Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest, opt_dimension) {\n    var o, t;\n    var n = (end - offset) / stride;\n    if (n === 1) {\n        o = offset;\n    }\n    else if (n === 2) {\n        o = offset;\n        t = fraction;\n    }\n    else if (n !== 0) {\n        var x1 = flatCoordinates[offset];\n        var y1 = flatCoordinates[offset + 1];\n        var length_1 = 0;\n        var cumulativeLengths = [0];\n        for (var i = offset + stride; i < end; i += stride) {\n            var x2 = flatCoordinates[i];\n            var y2 = flatCoordinates[i + 1];\n            length_1 += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n            cumulativeLengths.push(length_1);\n            x1 = x2;\n            y1 = y2;\n        }\n        var target = fraction * length_1;\n        var index = binarySearch(cumulativeLengths, target);\n        if (index < 0) {\n            t =\n                (target - cumulativeLengths[-index - 2]) /\n                    (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n            o = offset + (-index - 2) * stride;\n        }\n        else {\n            o = offset + index * stride;\n        }\n    }\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var dest = opt_dest ? opt_dest : new Array(dimension);\n    for (var i = 0; i < dimension; ++i) {\n        dest[i] =\n            o === undefined\n                ? NaN\n                : t === undefined\n                    ? flatCoordinates[o + i]\n                    : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n    if (end == offset) {\n        return null;\n    }\n    var coordinate;\n    if (m < flatCoordinates[offset + stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(offset, offset + stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (flatCoordinates[end - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(end - stride, end);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    // FIXME use O(1) search\n    if (m == flatCoordinates[offset + stride - 1]) {\n        return flatCoordinates.slice(offset, offset + stride);\n    }\n    var lo = offset / stride;\n    var hi = end / stride;\n    while (lo < hi) {\n        var mid = (lo + hi) >> 1;\n        if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n            hi = mid;\n        }\n        else {\n            lo = mid + 1;\n        }\n    }\n    var m0 = flatCoordinates[lo * stride - 1];\n    if (m == m0) {\n        return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n    }\n    var m1 = flatCoordinates[(lo + 1) * stride - 1];\n    var t = (m - m0) / (m1 - m0);\n    coordinate = [];\n    for (var i = 0; i < stride - 1; ++i) {\n        coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));\n    }\n    coordinate.push(m);\n    return coordinate;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n    if (interpolate) {\n        return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n    }\n    var coordinate;\n    if (m < flatCoordinates[stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(0, stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    if (flatCoordinates[flatCoordinates.length - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        if (offset == end) {\n            continue;\n        }\n        if (m < flatCoordinates[offset + stride - 1]) {\n            return null;\n        }\n        else if (m <= flatCoordinates[end - 1]) {\n            return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);\n        }\n        offset = end;\n    }\n    return null;\n}\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // http://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment, } from '../../extent.js';\nimport { forEach as forEachSegment } from './segments.js';\nimport { linearRingContainsExtent, linearRingContainsXY } from './contains.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/length\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    for (var i = offset + stride; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        x1 = x2;\n        y1 = y2;\n    }\n    return length;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n    var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n    var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n    var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n    perimeter += Math.sqrt(dx * dx + dy * dy);\n    return perimeter;\n}\n//# sourceMappingURL=length.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { extend } from '../array.js';\nimport { forEach as forEachSegment } from './flat/segments.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { interpolatePoint, lineStringCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineString } from './flat/intersectsextent.js';\nimport { lineStringLength } from './flat/length.js';\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /** @class */ (function (_super) {\n    __extends(LineString, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function LineString(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatMidpoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatMidpointRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed coordinate to the coordinates of the linestring.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @api\n     */\n    LineString.prototype.appendCoordinate = function (coordinate) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = coordinate.slice();\n        }\n        else {\n            extend(this.flatCoordinates, coordinate);\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LineString} Clone.\n     * @api\n     */\n    LineString.prototype.clone = function () {\n        return new LineString(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    LineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Iterate over each segment, calling the provided callback.\n     * If the callback returns a truthy value the function returns that\n     * value immediately. Otherwise the function returns `false`.\n     *\n     * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n     *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n     * @return {T|boolean} Value.\n     * @template T,S\n     * @api\n     */\n    LineString.prototype.forEachSegment = function (callback) {\n        return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    LineString.prototype.getCoordinateAtM = function (m, opt_extrapolate) {\n        if (this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        return lineStringCoordinateAtM(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate);\n    };\n    /**\n     * Return the coordinates of the linestring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    LineString.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinate at the provided fraction along the linestring.\n     * The `fraction` is a number between 0 and 1, where 0 is the start of the\n     * linestring and 1 is the end.\n     * @param {number} fraction Fraction.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n     *     be modified. If not provided, a new coordinate will be returned.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n     * @api\n     */\n    LineString.prototype.getCoordinateAt = function (fraction, opt_dest) {\n        return interpolatePoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, opt_dest, this.stride);\n    };\n    /**\n     * Return the length of the linestring on projected plane.\n     * @return {number} Length (on projected plane).\n     * @api\n     */\n    LineString.prototype.getLength = function () {\n        return lineStringLength(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat midpoint.\n     */\n    LineString.prototype.getFlatMidpoint = function () {\n        if (this.flatMidpointRevision_ != this.getRevision()) {\n            this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n            this.flatMidpointRevision_ = this.getRevision();\n        }\n        return this.flatMidpoint_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LineString} Simplified LineString.\n     * @protected\n     */\n    LineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    LineString.prototype.getType = function () {\n        return GeometryType.LINE_STRING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    LineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineString(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the linestring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    LineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LineString;\n}(SimpleGeometry));\nexport default LineString;\n//# sourceMappingURL=LineString.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LinearRing} Simplified LinearRing.\n     * @protected\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { arrayMaxSquaredDelta, assignClosestArrayPoint } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { douglasPeuckerArray } from './flat/simplify.js';\nimport { extend } from '../array.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { interpolatePoint, lineStringsCoordinateAtM, } from './flat/interpolate.js';\nimport { intersectsLineStringArray } from './flat/intersectsextent.js';\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /** @class */ (function (_super) {\n    __extends(MultiLineString, _super);\n    /**\n     * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n     *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n     *     combination with `opt_layout` and `opt_ends` are also accepted.)\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Flat coordinate ends for internal use.\n     */\n    function MultiLineString(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (Array.isArray(coordinates[0])) {\n            _this.setCoordinates(\n            /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        else if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            var layout = _this.getLayout();\n            var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n            var flatCoordinates = [];\n            var ends = [];\n            for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n                var lineString = lineStrings[i];\n                if (i === 0) {\n                    layout = lineString.getLayout();\n                }\n                extend(flatCoordinates, lineString.getFlatCoordinates());\n                ends.push(flatCoordinates.length);\n            }\n            _this.setFlatCoordinates(layout, flatCoordinates);\n            _this.ends_ = ends;\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linestring to the multilinestring.\n     * @param {LineString} lineString LineString.\n     * @api\n     */\n    MultiLineString.prototype.appendLineString = function (lineString) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = lineString.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiLineString} Clone.\n     * @api\n     */\n    MultiLineString.prototype.clone = function () {\n        return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiLineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * `opt_interpolate` controls interpolation between consecutive LineStrings\n     * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n     * will be linearly interpolated between the last coordinate of one LineString\n     * and the first coordinate of the next LineString.  If `opt_interpolate` is\n     * `false` then the function will return `null` for Ms falling between\n     * LineStrings.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinateAtM = function (m, opt_extrapolate, opt_interpolate) {\n        if ((this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) ||\n            this.flatCoordinates.length === 0) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n        return lineStringsCoordinateAtM(this.flatCoordinates, 0, this.ends_, this.stride, m, extrapolate, interpolate);\n    };\n    /**\n     * Return the coordinates of the multilinestring.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinates = function () {\n        return inflateCoordinatesArray(this.flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    MultiLineString.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * Return the linestring at the specified index.\n     * @param {number} index Index.\n     * @return {LineString} LineString.\n     * @api\n     */\n    MultiLineString.prototype.getLineString = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LineString(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linestrings of this multilinestring.\n     * @return {Array<LineString>} LineStrings.\n     * @api\n     */\n    MultiLineString.prototype.getLineStrings = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var layout = this.layout;\n        /** @type {Array<LineString>} */\n        var lineStrings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n            lineStrings.push(lineString);\n            offset = end;\n        }\n        return lineStrings;\n    };\n    /**\n     * @return {Array<number>} Flat midpoints.\n     */\n    MultiLineString.prototype.getFlatMidpoints = function () {\n        var midpoints = [];\n        var flatCoordinates = this.flatCoordinates;\n        var offset = 0;\n        var ends = this.ends_;\n        var stride = this.stride;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var midpoint = interpolatePoint(flatCoordinates, offset, end, stride, 0.5);\n            extend(midpoints, midpoint);\n            offset = end;\n        }\n        return midpoints;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {MultiLineString} Simplified MultiLineString.\n     * @protected\n     */\n    MultiLineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = douglasPeuckerArray(this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    MultiLineString.prototype.getType = function () {\n        return GeometryType.MULTI_LINE_STRING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiLineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineStringArray(this.flatCoordinates, 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multilinestring.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @api\n     */\n    MultiLineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return MultiLineString;\n}(SimpleGeometry));\nexport default MultiLineString;\n//# sourceMappingURL=MultiLineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { containsXY, createOrUpdateFromCoordinate } from '../extent.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        return point;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { closestSquaredDistanceXY, containsXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /** @class */ (function (_super) {\n    __extends(MultiPoint, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function MultiPoint(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed point to this multipoint.\n     * @param {Point} point Point.\n     * @api\n     */\n    MultiPoint.prototype.appendPoint = function (point) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = point.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, point.getFlatCoordinates());\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPoint} Clone.\n     * @api\n     */\n    MultiPoint.prototype.clone = function () {\n        var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n        return multiPoint;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiPoint.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var squaredDistance = squaredDx(x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n            if (squaredDistance < minSquaredDistance) {\n                minSquaredDistance = squaredDistance;\n                for (var j = 0; j < stride; ++j) {\n                    closestPoint[j] = flatCoordinates[i + j];\n                }\n                closestPoint.length = stride;\n            }\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * Return the coordinates of the multipoint.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    MultiPoint.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the point at the specified index.\n     * @param {number} index Index.\n     * @return {Point} Point.\n     * @api\n     */\n    MultiPoint.prototype.getPoint = function (index) {\n        var n = !this.flatCoordinates\n            ? 0\n            : this.flatCoordinates.length / this.stride;\n        if (index < 0 || n <= index) {\n            return null;\n        }\n        return new Point(this.flatCoordinates.slice(index * this.stride, (index + 1) * this.stride), this.layout);\n    };\n    /**\n     * Return the points of this multipoint.\n     * @return {Array<Point>} Points.\n     * @api\n     */\n    MultiPoint.prototype.getPoints = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var layout = this.layout;\n        var stride = this.stride;\n        /** @type {Array<Point>} */\n        var points = [];\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n            points.push(point);\n        }\n        return points;\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    MultiPoint.prototype.getType = function () {\n        return GeometryType.MULTI_POINT;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiPoint.prototype.intersectsExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            if (containsXY(extent, x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Set the coordinates of the multipoint.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    MultiPoint.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return MultiPoint;\n}(SimpleGeometry));\nexport default MultiPoint;\n//# sourceMappingURL=MultiPoint.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { linearRingsContainsXY } from './contains.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // https://stackoverflow.com/a/1180256/2389327\n    // https://en.wikipedia.org/wiki/Curve_orientation#Orientation_of_a_simple_polygon\n    var firstVertexRepeated = true;\n    for (var i = 0; i < stride; ++i) {\n        if (flatCoordinates[offset + i] !== flatCoordinates[end - stride + i]) {\n            firstVertexRepeated = false;\n            break;\n        }\n    }\n    if (firstVertexRepeated) {\n        end -= stride;\n    }\n    var iMinVertex = findCornerVertex(flatCoordinates, offset, end, stride);\n    // Orientation matrix:\n    //     [ 1  xa  ya ]\n    // O = | 1  xb  yb |\n    //     [ 1  xc  yc ]\n    var iPreviousVertex = iMinVertex - stride;\n    if (iPreviousVertex < offset) {\n        iPreviousVertex = end - stride;\n    }\n    var iNextVertex = iMinVertex + stride;\n    if (iNextVertex >= end) {\n        iNextVertex = offset;\n    }\n    var aX = flatCoordinates[iPreviousVertex];\n    var aY = flatCoordinates[iPreviousVertex + 1];\n    var bX = flatCoordinates[iMinVertex];\n    var bY = flatCoordinates[iMinVertex + 1];\n    var cX = flatCoordinates[iNextVertex];\n    var cY = flatCoordinates[iNextVertex + 1];\n    var determinant = bX * cY + aX * bY + aY * cX - (aY * bX + bY * cX + aX * cY);\n    return determinant < 0;\n}\n// Find vertex along one edge of bounding box.\n// In this case, we find smallest y; in case of tie also smallest x.\nfunction findCornerVertex(flatCoordinates, offset, end, stride) {\n    var iMinVertex = -1;\n    var minY = Infinity;\n    var minXAtMinY = Infinity;\n    for (var i = offset; i < end; i += stride) {\n        var x = flatCoordinates[i];\n        var y = flatCoordinates[i + 1];\n        if (y > minY) {\n            continue;\n        }\n        if (y == minY) {\n            if (x >= minXAtMinY) {\n                continue;\n            }\n        }\n        // Minimum so far.\n        iMinVertex = i;\n        minY = y;\n        minXAtMinY = x;\n    }\n    return iMinVertex;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0\n            ? (right && isClockwise) || (!right && !isClockwise)\n            : (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { arrayMaxSquaredDelta, assignClosestArrayPoint } from './flat/closest.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { modulo } from '../math.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { offset as sphereOffset } from '../sphere.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length = orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Polygon} Simplified Polygon.\n     * @protected\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [\n        flatCoordinates.length,\n    ]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [\n        minX,\n        minY,\n        minX,\n        maxY,\n        maxX,\n        maxY,\n        maxX,\n        minY,\n        minX,\n        minY,\n    ];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [\n        flatCoordinates.length,\n    ]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n        flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n        flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta, } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateMultiCoordinatesArray } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointsOfMultiArray } from './flat/interiorpoint.js';\nimport { inflateMultiCoordinatesArray } from './flat/inflate.js';\nimport { intersectsLinearRingMultiArray } from './flat/intersectsextent.js';\nimport { linearRingssAreOriented, orientLinearRingsArray, } from './flat/orient.js';\nimport { linearRingss as linearRingssArea } from './flat/area.js';\nimport { linearRingss as linearRingssCenter } from './flat/center.js';\nimport { linearRingssContainsXY } from './flat/contains.js';\nimport { quantizeMultiArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /** @class */ (function (_super) {\n    __extends(MultiPolygon, _super);\n    /**\n     * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @param {Array<Array<number>>=} opt_endss Array of ends for internal use with flat coordinates.\n     */\n    function MultiPolygon(coordinates, opt_layout, opt_endss) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<Array<number>>}\n         * @private\n         */\n        _this.endss_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointsRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.flatInteriorPoints_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (!opt_endss && !Array.isArray(coordinates[0])) {\n            var layout = _this.getLayout();\n            var polygons = /** @type {Array<Polygon>} */ (coordinates);\n            var flatCoordinates = [];\n            var endss = [];\n            for (var i = 0, ii = polygons.length; i < ii; ++i) {\n                var polygon = polygons[i];\n                if (i === 0) {\n                    layout = polygon.getLayout();\n                }\n                var offset = flatCoordinates.length;\n                var ends = polygon.getEnds();\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] += offset;\n                }\n                extend(flatCoordinates, polygon.getFlatCoordinates());\n                endss.push(ends);\n            }\n            opt_layout = layout;\n            coordinates = flatCoordinates;\n            opt_endss = endss;\n        }\n        if (opt_layout !== undefined && opt_endss) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.endss_ = opt_endss;\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed polygon to this multipolygon.\n     * @param {Polygon} polygon Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.appendPolygon = function (polygon) {\n        /** @type {Array<number>} */\n        var ends;\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = polygon.getFlatCoordinates().slice();\n            ends = polygon.getEnds().slice();\n            this.endss_.push();\n        }\n        else {\n            var offset = this.flatCoordinates.length;\n            extend(this.flatCoordinates, polygon.getFlatCoordinates());\n            ends = polygon.getEnds().slice();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] += offset;\n            }\n        }\n        this.endss_.push(ends);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPolygon} Clone.\n     * @api\n     */\n    MultiPolygon.prototype.clone = function () {\n        var len = this.endss_.length;\n        var newEndss = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            newEndss[i] = this.endss_[i].slice();\n        }\n        return new MultiPolygon(this.flatCoordinates.slice(), this.layout, newEndss);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiPolygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(this.flatCoordinates, 0, this.endss_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestMultiArrayPoint(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    MultiPolygon.prototype.containsXY = function (x, y) {\n        return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the multipolygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    MultiPolygon.prototype.getArea = function () {\n        return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for multi-polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n     * @api\n     */\n    MultiPolygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRingsArray(flatCoordinates, 0, this.endss_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateMultiCoordinatesArray(flatCoordinates, 0, this.endss_, this.stride);\n    };\n    /**\n     * @return {Array<Array<number>>} Endss.\n     */\n    MultiPolygon.prototype.getEndss = function () {\n        return this.endss_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    MultiPolygon.prototype.getFlatInteriorPoints = function () {\n        if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n            var flatCenters = linearRingssCenter(this.flatCoordinates, 0, this.endss_, this.stride);\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, flatCenters);\n            this.flatInteriorPointsRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n     * @return {MultiPoint} Interior points as XYM coordinates, where M is\n     * the length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    MultiPolygon.prototype.getInteriorPoints = function () {\n        return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    MultiPolygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length = orientLinearRingsArray(this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {MultiPolygon} Simplified MultiPolygon.\n     * @protected\n     */\n    MultiPolygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEndss = [];\n        simplifiedFlatCoordinates.length = quantizeMultiArray(this.flatCoordinates, 0, this.endss_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEndss);\n        return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n    };\n    /**\n     * Return the polygon at the specified index.\n     * @param {number} index Index.\n     * @return {Polygon} Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygon = function (index) {\n        if (index < 0 || this.endss_.length <= index) {\n            return null;\n        }\n        var offset;\n        if (index === 0) {\n            offset = 0;\n        }\n        else {\n            var prevEnds = this.endss_[index - 1];\n            offset = prevEnds[prevEnds.length - 1];\n        }\n        var ends = this.endss_[index].slice();\n        var end = ends[ends.length - 1];\n        if (offset !== 0) {\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] -= offset;\n            }\n        }\n        return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n    };\n    /**\n     * Return the polygons of this multipolygon.\n     * @return {Array<Polygon>} Polygons.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygons = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var endss = this.endss_;\n        var polygons = [];\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            var ends = endss[i].slice();\n            var end = ends[ends.length - 1];\n            if (offset !== 0) {\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] -= offset;\n                }\n            }\n            var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n            polygons.push(polygon);\n            offset = end;\n        }\n        return polygons;\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    MultiPolygon.prototype.getType = function () {\n        return GeometryType.MULTI_POLYGON;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiPolygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multipolygon.\n     * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    MultiPolygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 3);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var endss = deflateMultiCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n        if (endss.length === 0) {\n            this.flatCoordinates.length = 0;\n        }\n        else {\n            var lastEnds = endss[endss.length - 1];\n            this.flatCoordinates.length =\n                lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n        }\n        this.changed();\n    };\n    return MultiPolygon;\n}(SimpleGeometry));\nexport default MultiPolygon;\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/geom/flat/center\n */\nimport { createEmpty, createOrUpdateFromFlatCoordinates } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var flatCenters = [];\n    var extent = createEmpty();\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n        flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n        offset = ends[ends.length - 1];\n    }\n    return flatCenters;\n}\n//# sourceMappingURL=center.js.map","/**\n * @module ol/layer/TileProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    PRELOAD: 'preload',\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n//# sourceMappingURL=TileProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nvar BaseTileLayer = /** @class */ (function (_super) {\n    __extends(BaseTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function BaseTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, baseOptions) || this;\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined\n            ? options.useInterimTilesOnError\n            : true);\n        return _this;\n    }\n    /**\n     * Return the level as number to which we will preload tiles up to.\n     * @return {number} The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n     * Set the level as number to which we will preload tiles up to.\n     * @param {number} preload The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n     * Whether we use interim tiles on error.\n     * @return {boolean} Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n     * Set whether we use interim tiles on error.\n     * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return BaseTileLayer;\n}(Layer));\nexport default BaseTileLayer;\n//# sourceMappingURL=BaseTile.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=ImageState.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport { abstract } from '../util.js';\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /** @private */\n        _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);\n        /**\n         * @protected\n         * @type {LayerType}\n         */\n        _this.layer_ = layer;\n        return _this;\n    }\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    LayerRenderer.prototype.getFeatures = function (pixel) {\n        return abstract();\n    };\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, target) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n        return undefined;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }.bind(this));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {Array<import(\"../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|void} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) { };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {LayerType} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     * @abstract\n     */\n    LayerRenderer.prototype.handleFontsChanged = function () { };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Not available when the event is dispatched by the map. Only available\n         * when a Canvas renderer is used, null otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../has.js';\nimport { clear } from '../obj.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getFontParameters } from '../css.js';\nimport { toString } from '../transform.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n/**\n * @typedef Label\n * @property {number} width\n * @property {number} height\n * @property {Array<string|number>} contextInstructions\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {CanvasLineCap} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {CanvasLineJoin} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {CanvasLineCap} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {CanvasLineJoin} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {import(\"../size.js\").Size} [scale]\n * @property {Array<number>} [padding]\n */\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n/**\n * Declutter groups for support of multi geometries.\n * @typedef {Array<DeclutterGroup>} DeclutterGroups\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * @type {BaseObject}\n */\nexport var checkedFonts = new BaseObject();\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport var labelCache = new EventTarget();\nlabelCache.setSize = function () {\n    console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {string}\n */\nvar measureFont;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var registerFont = (function () {\n    var retries = 100;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    /**\n     * @param {string} fontStyle Css font-style\n     * @param {string} fontWeight Css font-weight\n     * @param {*} fontFamily Css font-family\n     * @return {boolean} Font with style and weight is available\n     */\n    function isAvailable(fontStyle, fontWeight, fontFamily) {\n        var available = true;\n        for (var i = 0; i < len; ++i) {\n            var referenceFont = referenceFonts[i];\n            referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);\n            if (fontFamily != referenceFont) {\n                var width = measureTextWidth(fontStyle +\n                    ' ' +\n                    fontWeight +\n                    ' ' +\n                    size +\n                    fontFamily +\n                    ',' +\n                    referenceFont, text);\n                // If width and referenceWidth are the same, then the fallback was used\n                // instead of the font we wanted, so the font is not available.\n                available = available && width != referenceWidth;\n            }\n        }\n        if (available) {\n            return true;\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        var fonts = checkedFonts.getKeys();\n        for (var i = 0, ii = fonts.length; i < ii; ++i) {\n            var font = fonts[i];\n            if (checkedFonts.get(font) < retries) {\n                if (isAvailable.apply(this, font.split('\\n'))) {\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    measureFont = undefined;\n                    checkedFonts.set(font, retries);\n                }\n                else {\n                    checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var font = getFontParameters(fontSpec);\n        if (!font) {\n            return;\n        }\n        var families = font.families;\n        for (var i = 0, ii = families.length; i < ii; ++i) {\n            var family = families[i];\n            var key = font.style + '\\n' + font.weight + '\\n' + family;\n            if (checkedFonts.get(key) === undefined) {\n                checkedFonts.set(key, retries, true);\n                if (!isAvailable(font.style, font.weight, family)) {\n                    checkedFonts.set(key, 0, true);\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    /**\n     * @type {HTMLDivElement}\n     */\n    var div;\n    var heights = textHeights;\n    return function (fontSpec) {\n        var height = heights[fontSpec];\n        if (height == undefined) {\n            if (WORKER_OFFSCREEN_CANVAS) {\n                var font = getFontParameters(fontSpec);\n                var metrics = measureText(fontSpec, 'Žg');\n                var lineHeight = isNaN(Number(font.lineHeight))\n                    ? 1.2\n                    : Number(font.lineHeight);\n                textHeights[fontSpec] =\n                    lineHeight *\n                        (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n            }\n            else {\n                if (!div) {\n                    div = document.createElement('div');\n                    div.innerHTML = 'M';\n                    div.style.margin = '0 !important';\n                    div.style.padding = '0 !important';\n                    div.style.position = 'absolute !important';\n                    div.style.left = '-99999px !important';\n                }\n                div.style.font = fontSpec;\n                document.body.appendChild(div);\n                height = div.offsetHeight;\n                heights[fontSpec] = height;\n                document.body.removeChild(div);\n            }\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    if (font != measureFont) {\n        measureContext.font = font;\n        measureFont = measureContext.font;\n    }\n    return measureContext.measureText(text);\n}\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    return measureText(font, text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = measureTextWidth(font, text);\n    cache[text] = width;\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(context, transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n    context.save();\n    if (opacity !== 1) {\n        context.globalAlpha *= opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    if ( /** @type {*} */(labelOrImage).contextInstructions) {\n        // label\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n    }\n    else if (scale[0] < 0 || scale[1] < 0) {\n        // flipped image\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, 0, 0, w, h);\n    }\n    else {\n        // if image not flipped translate and scale can be avoided\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, x, y, w * scale[0], h * scale[1]);\n    }\n    context.restore();\n}\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n    var contextInstructions = label.contextInstructions;\n    for (var i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n        if (Array.isArray(contextInstructions[i + 1])) {\n            context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n        }\n        else {\n            context[contextInstructions[i]] = contextInstructions[i + 1];\n        }\n    }\n}\n/**\n * @type {HTMLCanvasElement}\n * @private\n */\nvar createTransformStringCanvas = null;\n/**\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @return {string} CSS transform.\n */\nexport function createTransformString(transform) {\n    if (WORKER_OFFSCREEN_CANVAS) {\n        return toString(transform);\n    }\n    else {\n        if (!createTransformStringCanvas) {\n            createTransformStringCanvas = createCanvasContext2D(1, 1).canvas;\n        }\n        createTransformStringCanvas.style.transform = toString(transform);\n        return createTransformStringCanvas.style.transform;\n    }\n}\n//# sourceMappingURL=canvas.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { getBottomLeft, getBottomRight, getTopLeft, getTopRight, } from '../../extent.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.container = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform = createTransform();\n        /**\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = null;\n        /**\n         * @type {boolean}\n         */\n        _this.containerReused = false;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {string} transform CSS Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        var layerClassName = this.getLayer().getClassName();\n        var container, context;\n        if (target &&\n            target.style.opacity === '' &&\n            target.className === layerClassName) {\n            var canvas = target.firstElementChild;\n            if (canvas instanceof HTMLCanvasElement) {\n                context = canvas.getContext('2d');\n            }\n        }\n        if (context &&\n            (context.canvas.width === 0 ||\n                context.canvas.style.transform === transform)) {\n            // Container of the previous layer renderer can be used.\n            this.container = target;\n            this.context = context;\n            this.containerReused = true;\n        }\n        else if (this.containerReused) {\n            // Previously reused container cannot be used any more.\n            this.container = null;\n            this.context = null;\n            this.containerReused = false;\n        }\n        if (!this.container) {\n            container = document.createElement('div');\n            container.className = layerClassName;\n            var style = container.style;\n            style.position = 'absolute';\n            style.width = '100%';\n            style.height = '100%';\n            context = createCanvasContext2D();\n            var canvas = context.canvas;\n            container.appendChild(canvas);\n            style = canvas.style;\n            style.position = 'absolute';\n            style.left = '0';\n            style.transformOrigin = 'top left';\n            this.container = container;\n            this.context = context;\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n        var pixelRatio = frameState.pixelRatio;\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n        var rotation = frameState.viewState.rotation;\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        context.save();\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n        context.beginPath();\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n        context.clip();\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform, frameState, context);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (center, resolution, rotation, pixelRatio, width, height, offsetX) {\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / resolution;\n        var sy = -sx;\n        var dx2 = -center[0] + offsetX;\n        var dy2 = -center[1];\n        return composeTransform(this.tempTransform, dx1, dy1, sx, sy, -rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform, pixel.slice());\n        var context = this.context;\n        var data;\n        try {\n            var x = Math.round(renderPixel[0]);\n            var y = Math.round(renderPixel[1]);\n            var newCanvas = document.createElement('canvas');\n            var newContext = newCanvas.getContext('2d');\n            newCanvas.width = 1;\n            newCanvas.height = 1;\n            newContext.clearRect(0, 0, 1, 1);\n            newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n            data = newContext.getImageData(0, 0, 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /** @class */ (function () {\n    /**\n     * @param {number} minX Minimum X.\n     * @param {number} maxX Maximum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxY Maximum Y.\n     */\n    function TileRange(minX, maxX, minY, maxY) {\n        /**\n         * @type {number}\n         */\n        this.minX = minX;\n        /**\n         * @type {number}\n         */\n        this.maxX = maxX;\n        /**\n         * @type {number}\n         */\n        this.minY = minY;\n        /**\n         * @type {number}\n         */\n        this.maxY = maxY;\n    }\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {boolean} Contains tile coordinate.\n     */\n    TileRange.prototype.contains = function (tileCoord) {\n        return this.containsXY(tileCoord[1], tileCoord[2]);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Contains.\n     */\n    TileRange.prototype.containsTileRange = function (tileRange) {\n        return (this.minX <= tileRange.minX &&\n            tileRange.maxX <= this.maxX &&\n            this.minY <= tileRange.minY &&\n            tileRange.maxY <= this.maxY);\n    };\n    /**\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @return {boolean} Contains coordinate.\n     */\n    TileRange.prototype.containsXY = function (x, y) {\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Equals.\n     */\n    TileRange.prototype.equals = function (tileRange) {\n        return (this.minX == tileRange.minX &&\n            this.minY == tileRange.minY &&\n            this.maxX == tileRange.maxX &&\n            this.maxY == tileRange.maxY);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     */\n    TileRange.prototype.extend = function (tileRange) {\n        if (tileRange.minX < this.minX) {\n            this.minX = tileRange.minX;\n        }\n        if (tileRange.maxX > this.maxX) {\n            this.maxX = tileRange.maxX;\n        }\n        if (tileRange.minY < this.minY) {\n            this.minY = tileRange.minY;\n        }\n        if (tileRange.maxY > this.maxY) {\n            this.maxY = tileRange.maxY;\n        }\n    };\n    /**\n     * @return {number} Height.\n     */\n    TileRange.prototype.getHeight = function () {\n        return this.maxY - this.minY + 1;\n    };\n    /**\n     * @return {import(\"./size.js\").Size} Size.\n     */\n    TileRange.prototype.getSize = function () {\n        return [this.getWidth(), this.getHeight()];\n    };\n    /**\n     * @return {number} Width.\n     */\n    TileRange.prototype.getWidth = function () {\n        return this.maxX - this.minX + 1;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Intersects.\n     */\n    TileRange.prototype.intersects = function (tileRange) {\n        return (this.minX <= tileRange.maxX &&\n            this.maxX >= tileRange.minX &&\n            this.minY <= tileRange.maxY &&\n            this.maxY >= tileRange.minY);\n    };\n    return TileRange;\n}());\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n    if (tileRange !== undefined) {\n        tileRange.minX = minX;\n        tileRange.maxX = maxX;\n        tileRange.minY = minY;\n        tileRange.maxY = maxY;\n        return tileRange;\n    }\n    else {\n        return new TileRange(minX, maxX, minY, maxY);\n    }\n}\nexport default TileRange;\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=TileState.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, } from '../../transform.js';\nimport { assign } from '../../obj.js';\nimport { createEmpty, equals, getIntersection, getTopLeft, } from '../../extent.js';\nimport { createTransformString } from '../../render/canvas.js';\nimport { fromUserExtent } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {?import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedPixelRatio;\n        /**\n         * @protected\n         * @type {import(\"../../proj/Projection.js\").default}\n         */\n        _this.renderedProjection = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = this.getLayer();\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return (tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            (tileState == TileState.ERROR && !useInterimTilesOnError));\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState) {\n        return !!this.getLayer().getSource();\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        var layerExtent = layerState.extent && fromUserExtent(layerState.extent, projection);\n        if (layerExtent) {\n            extent = getIntersection(extent, fromUserExtent(layerState.extent, projection));\n        }\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\n        if (rotation) {\n            var size = Math.round(Math.sqrt(width * width + height * height));\n            width = size;\n            height = size;\n        }\n        var dx = (tileResolution * width) / 2 / tilePixelRatio;\n        var dy = (tileResolution * height) / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy,\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (!this.newTiles_ &&\n                            (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvasScale = tileResolution / viewResolution;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n        var canvasTransform = createTransformString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerExtent) {\n            this.clipUnrotated(context, frameState, layerExtent);\n        }\n        assign(context, tileSource.getContextOptions());\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var clips, clipZs, currentClip;\n        if (layerState.opacity === 1 &&\n            (!this.containerReused ||\n                tileSource.getOpaque(frameState.viewState.projection))) {\n            zs = zs.reverse();\n        }\n        else {\n            clips = [];\n            clipZs = [];\n        }\n        for (var i = zs.length - 1; i >= 0; --i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform, [\n                (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n                    tileResolution,\n                (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n                    tileResolution,\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[tileCoordKey]);\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var floatX = origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1;\n                var nextX = Math.round(floatX + dx_1);\n                var floatY = origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1;\n                var nextY = Math.round(floatY + dy_1);\n                var x = Math.round(floatX);\n                var y = Math.round(floatY);\n                var w = nextX - x;\n                var h = nextY - y;\n                var transition = z === currentZ;\n                var inTransition = transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n                if (!inTransition) {\n                    if (clips) {\n                        // Clip mask for regions in this tile that already filled by a higher z tile\n                        context.save();\n                        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n                        for (var i_1 = 0, ii = clips.length; i_1 < ii; ++i_1) {\n                            if (z !== currentZ && currentZ < clipZs[i_1]) {\n                                var clip = clips[i_1];\n                                context.beginPath();\n                                // counter-clockwise (outer ring) for current tile\n                                context.moveTo(currentClip[0], currentClip[1]);\n                                context.lineTo(currentClip[2], currentClip[3]);\n                                context.lineTo(currentClip[4], currentClip[5]);\n                                context.lineTo(currentClip[6], currentClip[7]);\n                                // clockwise (inner ring) for higher z tile\n                                context.moveTo(clip[6], clip[7]);\n                                context.lineTo(clip[4], clip[5]);\n                                context.lineTo(clip[2], clip[3]);\n                                context.lineTo(clip[0], clip[1]);\n                                context.clip();\n                            }\n                        }\n                        clips.push(currentClip);\n                        clipZs.push(currentZ);\n                    }\n                    else {\n                        context.clearRect(x, y, w, h);\n                    }\n                }\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, transition, layerState.opacity);\n                if (clips && !inTransition) {\n                    context.restore();\n                }\n                this.renderedTiles.push(tile);\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged =\n            !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.renderedPixelRatio = pixelRatio;\n        this.renderedProjection = projection;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    /**\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     * @param {number} opacity Opacity.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition, opacity) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n        var alpha = opacity * tileAlpha;\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (tileAlpha !== 1) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Image\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return tile.getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\n     * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var tileCount = 0;\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (currentZ - z <= preload) {\n                        ++tileCount;\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([\n                                    tile,\n                                    tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord),\n                                    tileResolution,\n                                ]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n        tileSource.updateCacheSize(tileCount, projection);\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /** @class */ (function (_super) {\n    __extends(TileLayer, _super);\n    /**\n     * @param {import(\"./BaseTile.js\").Options=} opt_options Tile layer options.\n     */\n    function TileLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    TileLayer.prototype.createRenderer = function () {\n        return new CanvasTileLayerRenderer(this);\n    };\n    return TileLayer;\n}(BaseTileLayer));\nexport default TileLayer;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = size;\n            opt_size[1] = size;\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\nimport { toSize } from '../size.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number|import(\"../size.js\").Size} scale\n * @property {Array<number>} displacement\n */\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function ImageStyle(options) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.opacity_ = options.opacity;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.displacement_ = options.displacement;\n    }\n    /**\n     * Clones the style.\n     * @return {ImageStyle} The cloned style.\n     * @api\n     */\n    ImageStyle.prototype.clone = function () {\n        var scale = this.getScale();\n        return new ImageStyle({\n            opacity: this.getOpacity(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice(),\n        });\n    };\n    /**\n     * Get the symbolizer opacity.\n     * @return {number} Opacity.\n     * @api\n     */\n    ImageStyle.prototype.getOpacity = function () {\n        return this.opacity_;\n    };\n    /**\n     * Determine whether the symbolizer rotates with the map.\n     * @return {boolean} Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the symoblizer rotation.\n     * @return {number} Rotation.\n     * @api\n     */\n    ImageStyle.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the symbolizer scale.\n     * @return {number|import(\"../size.js\").Size} Scale.\n     * @api\n     */\n    ImageStyle.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    ImageStyle.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the displacement of the shape\n     * @return {Array<number>} Shape's center displacement\n     * @api\n     */\n    ImageStyle.prototype.getDisplacement = function () {\n        return this.displacement_;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @abstract\n     * @return {Array<number>} Anchor.\n     */\n    ImageStyle.prototype.getAnchor = function () {\n        return abstract();\n    };\n    /**\n     * Get the image element for the symbolizer.\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getHitDetectionImage = function () {\n        return abstract();\n    };\n    /*\n     * Get the image pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * */\n    ImageStyle.prototype.getPixelRatio = function (pixelRatio) {\n        return 1;\n    };\n    /**\n     * @abstract\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    ImageStyle.prototype.getImageState = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    ImageStyle.prototype.getImageSize = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    ImageStyle.prototype.getHitDetectionImageSize = function () {\n        return abstract();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @abstract\n     * @return {Array<number>} Origin.\n     */\n    ImageStyle.prototype.getOrigin = function () {\n        return abstract();\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size.\n     */\n    ImageStyle.prototype.getSize = function () {\n        return abstract();\n    };\n    /**\n     * Set the opacity.\n     *\n     * @param {number} opacity Opacity.\n     * @api\n     */\n    ImageStyle.prototype.setOpacity = function (opacity) {\n        this.opacity_ = opacity;\n    };\n    /**\n     * Set whether to rotate the style with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number} rotation Rotation.\n     * @api\n     */\n    ImageStyle.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size} scale Scale.\n     * @api\n     */\n    ImageStyle.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale);\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    ImageStyle.prototype.listenImageChange = function (listener) {\n        abstract();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageStyle.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    ImageStyle.prototype.unlistenImageChange = function (listener) {\n        abstract();\n    };\n    return ImageStyle;\n}());\nexport default ImageStyle;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) {\n        // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) {\n        // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) {\n        // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n    if (NAMED_COLOR_RE_.test(s)) {\n        s = fromNamed(s);\n    }\n    return (HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0);\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n    if (Array.isArray(color)) {\n        return toString(color);\n    }\n    else {\n        return color;\n    }\n}\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/style/RegularShape\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { asColorLike } from '../colorlike.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { defaultFillStyle, defaultLineCap, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, } from '../render/canvas.js';\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n */\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} miterLimit\n */\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /** @class */ (function (_super) {\n    __extends(RegularShape, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RegularShape(options) {\n        var _this = this;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: 1,\n            rotateWithView: rotateWithView,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            scale: 1,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n        }) || this;\n        /**\n         * @private\n         * @type {Object<number, HTMLCanvasElement>}\n         */\n        _this.canvas_ = {};\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.hitDetectionCanvas_ = null;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.points_ = options.points;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.radius_ =\n            options.radius !== undefined ? options.radius : options.radius1;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.radius2_ = options.radius2;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.hitDetectionImageSize_ = null;\n        _this.render();\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {RegularShape} The cloned style.\n     * @api\n     */\n    RegularShape.prototype.clone = function () {\n        var style = new RegularShape({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            points: this.getPoints(),\n            radius: this.getRadius(),\n            radius2: this.getRadius2(),\n            angle: this.getAngle(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice(),\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    RegularShape.prototype.getAnchor = function () {\n        return this.anchor_;\n    };\n    /**\n     * Get the angle used in generating the shape.\n     * @return {number} Shape's rotation in radians.\n     * @api\n     */\n    RegularShape.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    /**\n     * Get the fill style for the shape.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    RegularShape.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * @return {HTMLCanvasElement} Image element.\n     */\n    RegularShape.prototype.getHitDetectionImage = function () {\n        if (!this.hitDetectionCanvas_) {\n            var renderOptions = this.createRenderOptions();\n            this.createHitDetectionCanvas_(renderOptions);\n        }\n        return this.hitDetectionCanvas_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    RegularShape.prototype.getImage = function (pixelRatio) {\n        if (!this.canvas_[pixelRatio || 1]) {\n            var renderOptions = this.createRenderOptions();\n            var context = createCanvasContext2D(renderOptions.size * pixelRatio || 1, renderOptions.size * pixelRatio || 1);\n            this.draw_(renderOptions, context, 0, 0, pixelRatio || 1);\n            this.canvas_[pixelRatio || 1] = context.canvas;\n        }\n        return this.canvas_[pixelRatio || 1];\n    };\n    /*\n     * Get the image pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * */\n    RegularShape.prototype.getPixelRatio = function (pixelRatio) {\n        return pixelRatio;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    RegularShape.prototype.getImageSize = function () {\n        return this.imageSize_;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    RegularShape.prototype.getHitDetectionImageSize = function () {\n        return this.hitDetectionImageSize_;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    RegularShape.prototype.getImageState = function () {\n        return ImageState.LOADED;\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    RegularShape.prototype.getOrigin = function () {\n        return this.origin_;\n    };\n    /**\n     * Get the number of points for generating the shape.\n     * @return {number} Number of points for stars and regular polygons.\n     * @api\n     */\n    RegularShape.prototype.getPoints = function () {\n        return this.points_;\n    };\n    /**\n     * Get the (primary) radius for the shape.\n     * @return {number} Radius.\n     * @api\n     */\n    RegularShape.prototype.getRadius = function () {\n        return this.radius_;\n    };\n    /**\n     * Get the secondary radius for the shape.\n     * @return {number|undefined} Radius2.\n     * @api\n     */\n    RegularShape.prototype.getRadius2 = function () {\n        return this.radius2_;\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @return {import(\"../size.js\").Size} Size.\n     * @api\n     */\n    RegularShape.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * Get the stroke style for the shape.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    RegularShape.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    RegularShape.prototype.listenImageChange = function (listener) { };\n    /**\n     * Load not yet loaded URI.\n     */\n    RegularShape.prototype.load = function () { };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    RegularShape.prototype.unlistenImageChange = function (listener) { };\n    /**\n     * @returns {RenderOptions}  The render options\n     * @protected\n     */\n    RegularShape.prototype.createRenderOptions = function () {\n        var lineCap = defaultLineCap;\n        var lineJoin = defaultLineJoin;\n        var miterLimit = 0;\n        var lineDash = null;\n        var lineDashOffset = 0;\n        var strokeStyle;\n        var strokeWidth = 0;\n        if (this.stroke_) {\n            strokeStyle = this.stroke_.getColor();\n            if (strokeStyle === null) {\n                strokeStyle = defaultStrokeStyle;\n            }\n            strokeStyle = asColorLike(strokeStyle);\n            strokeWidth = this.stroke_.getWidth();\n            if (strokeWidth === undefined) {\n                strokeWidth = defaultLineWidth;\n            }\n            lineDash = this.stroke_.getLineDash();\n            lineDashOffset = this.stroke_.getLineDashOffset();\n            lineJoin = this.stroke_.getLineJoin();\n            if (lineJoin === undefined) {\n                lineJoin = defaultLineJoin;\n            }\n            lineCap = this.stroke_.getLineCap();\n            if (lineCap === undefined) {\n                lineCap = defaultLineCap;\n            }\n            miterLimit = this.stroke_.getMiterLimit();\n            if (miterLimit === undefined) {\n                miterLimit = defaultMiterLimit;\n            }\n        }\n        var size = 2 * (this.radius_ + strokeWidth) + 1;\n        return {\n            strokeStyle: strokeStyle,\n            strokeWidth: strokeWidth,\n            size: size,\n            lineCap: lineCap,\n            lineDash: lineDash,\n            lineDashOffset: lineDashOffset,\n            lineJoin: lineJoin,\n            miterLimit: miterLimit,\n        };\n    };\n    /**\n     * @protected\n     */\n    RegularShape.prototype.render = function () {\n        var renderOptions = this.createRenderOptions();\n        var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.draw_(renderOptions, context, 0, 0, 1);\n        this.canvas_[1] = context.canvas;\n        // canvas.width and height are rounded to the closest integer\n        var size = context.canvas.width;\n        var imageSize = size;\n        var displacement = this.getDisplacement();\n        this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n        this.createHitDetectionCanvas_(renderOptions);\n        this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n        this.size_ = [size, size];\n        this.imageSize_ = [imageSize, imageSize];\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The rendering context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     * @param {number} pixelRatio The pixel ratio.\n     */\n    RegularShape.prototype.draw_ = function (renderOptions, context, x, y, pixelRatio) {\n        var i, angle0, radiusC;\n        // reset transform\n        context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            for (i = 0; i <= points; i++) {\n                angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            if (color === null) {\n                color = defaultFillStyle;\n            }\n            context.fillStyle = asColorLike(color);\n            context.fill();\n        }\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (context.setLineDash && renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineCap = renderOptions.lineCap;\n            context.lineJoin = renderOptions.lineJoin;\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n        context.closePath();\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     */\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n        this.hitDetectionCanvas_ = this.getImage(1);\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            // determine if fill is transparent (or pattern or gradient)\n            var opacity = 0;\n            if (typeof color === 'string') {\n                color = asArray(color);\n            }\n            if (color === null) {\n                opacity = 1;\n            }\n            else if (Array.isArray(color)) {\n                opacity = color.length === 4 ? color[3] : 1;\n            }\n            if (opacity === 0) {\n                // if a transparent fill style is set, create an extra hit-detection image\n                // with a default fill style\n                var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n                this.hitDetectionCanvas_ = context.canvas;\n                this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context, x, y) {\n        // move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            var i = void 0, radiusC = void 0, angle0 = void 0;\n            for (i = 0; i <= points; i++) {\n                angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        context.fillStyle = defaultFillStyle;\n        context.fill();\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.stroke();\n        }\n        context.closePath();\n    };\n    return RegularShape;\n}(ImageStyle));\nexport default RegularShape;\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n */\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /** @class */ (function (_super) {\n    __extends(CircleStyle, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function CircleStyle(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            points: Infinity,\n            fill: options.fill,\n            radius: options.radius,\n            stroke: options.stroke,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n        }) || this;\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {CircleStyle} The cloned style.\n     * @api\n     */\n    CircleStyle.prototype.clone = function () {\n        var style = new CircleStyle({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            radius: this.getRadius(),\n            displacement: this.getDisplacement().slice(),\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n     * Set the circle radius.\n     *\n     * @param {number} radius Circle radius.\n     * @api\n     */\n    CircleStyle.prototype.setRadius = function (radius) {\n        this.radius_ = radius;\n        this.render();\n    };\n    return CircleStyle;\n}(RegularShape));\nexport default CircleStyle;\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Fill\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Fill(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n    }\n    /**\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n     * @return {Fill} The cloned style.\n     * @api\n     */\n    Fill.prototype.clone = function () {\n        var color = this.getColor();\n        return new Fill({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n        });\n    };\n    /**\n     * Get the fill color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Fill.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Fill.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    return Fill;\n}());\nexport default Fill;\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Stroke(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n        /**\n         * @private\n         * @type {CanvasLineCap|undefined}\n         */\n        this.lineCap_ = options.lineCap;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.lineDashOffset_ = options.lineDashOffset;\n        /**\n         * @private\n         * @type {CanvasLineJoin|undefined}\n         */\n        this.lineJoin_ = options.lineJoin;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.miterLimit_ = options.miterLimit;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.width_ = options.width;\n    }\n    /**\n     * Clones the style.\n     * @return {Stroke} The cloned style.\n     * @api\n     */\n    Stroke.prototype.clone = function () {\n        var color = this.getColor();\n        return new Stroke({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n            lineCap: this.getLineCap(),\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n            lineDashOffset: this.getLineDashOffset(),\n            lineJoin: this.getLineJoin(),\n            miterLimit: this.getMiterLimit(),\n            width: this.getWidth(),\n        });\n    };\n    /**\n     * Get the stroke color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Stroke.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the line cap type for the stroke.\n     * @return {CanvasLineCap|undefined} Line cap.\n     * @api\n     */\n    Stroke.prototype.getLineCap = function () {\n        return this.lineCap_;\n    };\n    /**\n     * Get the line dash style for the stroke.\n     * @return {Array<number>} Line dash.\n     * @api\n     */\n    Stroke.prototype.getLineDash = function () {\n        return this.lineDash_;\n    };\n    /**\n     * Get the line dash offset for the stroke.\n     * @return {number|undefined} Line dash offset.\n     * @api\n     */\n    Stroke.prototype.getLineDashOffset = function () {\n        return this.lineDashOffset_;\n    };\n    /**\n     * Get the line join type for the stroke.\n     * @return {CanvasLineJoin|undefined} Line join.\n     * @api\n     */\n    Stroke.prototype.getLineJoin = function () {\n        return this.lineJoin_;\n    };\n    /**\n     * Get the miter limit for the stroke.\n     * @return {number|undefined} Miter limit.\n     * @api\n     */\n    Stroke.prototype.getMiterLimit = function () {\n        return this.miterLimit_;\n    };\n    /**\n     * Get the stroke width.\n     * @return {number|undefined} Width.\n     * @api\n     */\n    Stroke.prototype.getWidth = function () {\n        return this.width_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Stroke.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    /**\n     * Set the line cap.\n     *\n     * @param {CanvasLineCap|undefined} lineCap Line cap.\n     * @api\n     */\n    Stroke.prototype.setLineCap = function (lineCap) {\n        this.lineCap_ = lineCap;\n    };\n    /**\n     * Set the line dash.\n     *\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n     * property will have no visual effect in these browsers.\n     *\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n     *\n     * @param {Array<number>} lineDash Line dash.\n     * @api\n     */\n    Stroke.prototype.setLineDash = function (lineDash) {\n        this.lineDash_ = lineDash;\n    };\n    /**\n     * Set the line dash offset.\n     *\n     * @param {number|undefined} lineDashOffset Line dash offset.\n     * @api\n     */\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\n        this.lineDashOffset_ = lineDashOffset;\n    };\n    /**\n     * Set the line join.\n     *\n     * @param {CanvasLineJoin|undefined} lineJoin Line join.\n     * @api\n     */\n    Stroke.prototype.setLineJoin = function (lineJoin) {\n        this.lineJoin_ = lineJoin;\n    };\n    /**\n     * Set the miter limit.\n     *\n     * @param {number|undefined} miterLimit Miter limit.\n     * @api\n     */\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\n        this.miterLimit_ = miterLimit;\n    };\n    /**\n     * Set the width.\n     *\n     * @param {number|undefined} width Width.\n     * @api\n     */\n    Stroke.prototype.setWidth = function (width) {\n        this.width_ = width;\n    };\n    return Stroke;\n}());\nexport default Stroke;\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/style/Style\n */\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport { assert } from '../asserts.js';\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nvar Style = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Style options.\n     */\n    function Style(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n         */\n        this.geometry_ = null;\n        /**\n         * @private\n         * @type {!GeometryFunction}\n         */\n        this.geometryFunction_ = defaultGeometryFunction;\n        if (options.geometry !== undefined) {\n            this.setGeometry(options.geometry);\n        }\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {import(\"./Image.js\").default}\n         */\n        this.image_ = options.image !== undefined ? options.image : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"./Text.js\").default}\n         */\n        this.text_ = options.text !== undefined ? options.text : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zIndex_ = options.zIndex;\n    }\n    /**\n     * Clones the style.\n     * @return {Style} The cloned style.\n     * @api\n     */\n    Style.prototype.clone = function () {\n        var geometry = this.getGeometry();\n        if (geometry && typeof geometry === 'object') {\n            geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n        }\n        return new Style({\n            geometry: geometry,\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            image: this.getImage() ? this.getImage().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            text: this.getText() ? this.getText().clone() : undefined,\n            zIndex: this.getZIndex(),\n        });\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setRenderer} or the `renderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n     * and `image` options of the style will be ignored.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setRenderer = function (renderer) {\n        this.renderer_ = renderer;\n    };\n    /**\n     * Get the geometry to be rendered.\n     * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     * Feature property or geometry or function that returns the geometry that will\n     * be rendered with this style.\n     * @api\n     */\n    Style.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    /**\n     * Get the function used to generate a geometry for rendering.\n     * @return {!GeometryFunction} Function that is called with a feature\n     * and returns the geometry to render instead of the feature's geometry.\n     * @api\n     */\n    Style.prototype.getGeometryFunction = function () {\n        return this.geometryFunction_;\n    };\n    /**\n     * Get the fill style.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Style.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Set the fill style.\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Style.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Get the image style.\n     * @return {import(\"./Image.js\").default} Image style.\n     * @api\n     */\n    Style.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Set the image style.\n     * @param {import(\"./Image.js\").default} image Image style.\n     * @api\n     */\n    Style.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Get the stroke style.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Style.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Set the stroke style.\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Style.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Get the text style.\n     * @return {import(\"./Text.js\").default} Text style.\n     * @api\n     */\n    Style.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Set the text style.\n     * @param {import(\"./Text.js\").default} text Text style.\n     * @api\n     */\n    Style.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Get the z-index for the style.\n     * @return {number|undefined} ZIndex.\n     * @api\n     */\n    Style.prototype.getZIndex = function () {\n        return this.zIndex_;\n    };\n    /**\n     * Set a geometry that is rendered instead of the feature's geometry.\n     *\n     * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n     *     Feature property or geometry or function returning a geometry to render\n     *     for this style.\n     * @api\n     */\n    Style.prototype.setGeometry = function (geometry) {\n        if (typeof geometry === 'function') {\n            this.geometryFunction_ = geometry;\n        }\n        else if (typeof geometry === 'string') {\n            this.geometryFunction_ = function (feature) {\n                return /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry));\n            };\n        }\n        else if (!geometry) {\n            this.geometryFunction_ = defaultGeometryFunction;\n        }\n        else if (geometry !== undefined) {\n            this.geometryFunction_ = function () {\n                return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n            };\n        }\n        this.geometry_ = geometry;\n    };\n    /**\n     * Set the z-index.\n     *\n     * @param {number|undefined} zIndex ZIndex.\n     * @api\n     */\n    Style.prototype.setZIndex = function (zIndex) {\n        this.zIndex_ = zIndex;\n    };\n    return Style;\n}());\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n    var styleFunction;\n    if (typeof obj === 'function') {\n        styleFunction = obj;\n    }\n    else {\n        /**\n         * @type {Array<Style>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof ( /** @type {?} */(obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n            var style = /** @type {Style} */ (obj);\n            styles_1 = [style];\n        }\n        styleFunction = function () {\n            return styles_1;\n        };\n    }\n    return styleFunction;\n}\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n    // We don't use an immediately-invoked function\n    // and a closure so we don't get an error at script evaluation time in\n    // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n    // canvas.getContext('2d') at construction time, which will cause an.error\n    // in such browsers.)\n    if (!defaultStyles) {\n        var fill = new Fill({\n            color: 'rgba(255,255,255,0.4)',\n        });\n        var stroke = new Stroke({\n            color: '#3399CC',\n            width: 1.25,\n        });\n        defaultStyles = [\n            new Style({\n                image: new CircleStyle({\n                    fill: fill,\n                    stroke: stroke,\n                    radius: 5,\n                }),\n                fill: fill,\n                stroke: stroke,\n            }),\n        ];\n    }\n    return defaultStyles;\n}\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n    /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n    var styles = {};\n    var white = [255, 255, 255, 1];\n    var blue = [0, 153, 255, 1];\n    var width = 3;\n    styles[GeometryType.POLYGON] = [\n        new Style({\n            fill: new Fill({\n                color: [255, 255, 255, 0.5],\n            }),\n        }),\n    ];\n    styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n    styles[GeometryType.LINE_STRING] = [\n        new Style({\n            stroke: new Stroke({\n                color: white,\n                width: width + 2,\n            }),\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: blue,\n                width: width,\n            }),\n        }),\n    ];\n    styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n    styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\n    styles[GeometryType.POINT] = [\n        new Style({\n            image: new CircleStyle({\n                radius: width * 2,\n                fill: new Fill({\n                    color: blue,\n                }),\n                stroke: new Stroke({\n                    color: white,\n                    width: width / 2,\n                }),\n            }),\n            zIndex: Infinity,\n        }),\n    ];\n    styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n    styles[GeometryType.GEOMETRY_COLLECTION] = styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n    return styles;\n}\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n    return feature.getGeometry();\n}\nexport default Style;\n//# sourceMappingURL=Style.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport { assign } from '../obj.js';\nimport { createDefaultStyle, toFunction as toStyleFunction, } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    RENDER_ORDER: 'renderOrder',\n};\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nvar BaseVectorLayer = /** @class */ (function (_super) {\n    __extends(BaseVectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function BaseVectorLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.style;\n        delete baseOptions.renderBuffer;\n        delete baseOptions.updateWhileAnimating;\n        delete baseOptions.updateWhileInteracting;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.declutter_ =\n            options.declutter !== undefined ? options.declutter : false;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.renderBuffer_ =\n            options.renderBuffer !== undefined ? options.renderBuffer : 100;\n        /**\n         * User provided style.\n         * @type {import(\"../style/Style.js\").StyleLike}\n         * @private\n         */\n        _this.style_ = null;\n        /**\n         * Style function for use within the library.\n         * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n         * @private\n         */\n        _this.styleFunction_ = undefined;\n        _this.setStyle(options.style);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileAnimating_ =\n            options.updateWhileAnimating !== undefined\n                ? options.updateWhileAnimating\n                : false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileInteracting_ =\n            options.updateWhileInteracting !== undefined\n                ? options.updateWhileInteracting\n                : false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Declutter.\n     */\n    BaseVectorLayer.prototype.getDeclutter = function () {\n        return this.declutter_;\n    };\n    /**\n     * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n     * that resolves with an array of features. The array will either contain the topmost feature\n     * when a hit was detected, or it will be empty.\n     *\n     * The hit detection algorithm used for this method is optimized for performance, but is less\n     * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n     * is not considered, and icons are only represented by their bounding box instead of the exact\n     * image.\n     *\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n     * @api\n     */\n    BaseVectorLayer.prototype.getFeatures = function (pixel) {\n        return _super.prototype.getFeatures.call(this, pixel);\n    };\n    /**\n     * @return {number|undefined} Render buffer.\n     */\n    BaseVectorLayer.prototype.getRenderBuffer = function () {\n        return this.renderBuffer_;\n    };\n    /**\n     * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n     *     order.\n     */\n    BaseVectorLayer.prototype.getRenderOrder = function () {\n        return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER));\n    };\n    /**\n     * Get the style for features.  This returns whatever was passed to the `style`\n     * option at construction or to the `setStyle` method.\n     * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the style function.\n     * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     animating.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileAnimating = function () {\n        return this.updateWhileAnimating_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     interacting.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileInteracting = function () {\n        return this.updateWhileInteracting_;\n    };\n    /**\n     * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n     *     Render order.\n     */\n    BaseVectorLayer.prototype.setRenderOrder = function (renderOrder) {\n        this.set(Property.RENDER_ORDER, renderOrder);\n    };\n    /**\n     * Set the style for features.  This can be a single style object, an array\n     * of styles, or a function that takes a feature and resolution and returns\n     * an array of styles. If set to `null`, the layer has no style (a `null` style),\n     * so only features that have their own styles will be rendered in the layer. Call\n     * `setStyle()` without arguments to reset to the default style. See\n     * {@link module:ol/style} for information on the default style.\n     * @param {(import(\"../style/Style.js\").StyleLike|null)=} opt_style Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.setStyle = function (opt_style) {\n        this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n        this.styleFunction_ =\n            opt_style === null ? undefined : toStyleFunction(this.style_);\n        this.changed();\n    };\n    return BaseVectorLayer;\n}(Layer));\nexport default BaseVectorLayer;\n//# sourceMappingURL=BaseVector.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n/**\n * @enum {number}\n */\nvar Instruction = {\n    BEGIN_GEOMETRY: 0,\n    BEGIN_PATH: 1,\n    CIRCLE: 2,\n    CLOSE_PATH: 3,\n    CUSTOM: 4,\n    DRAW_CHARS: 5,\n    DRAW_IMAGE: 6,\n    END_GEOMETRY: 7,\n    FILL: 8,\n    MOVE_TO_LINE_TO: 9,\n    SET_FILL_STYLE: 10,\n    SET_STROKE_STYLE: 11,\n    STROKE: 12,\n};\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\nexport default Instruction;\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterGroup) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"./canvas.js\").DeclutterGroups=} opt_declutterGroups Declutter.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterGroups) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, coordinateRelationship } from '../../extent.js';\nimport { defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, } from '../canvas.js';\nimport { equals, reverseSubArray } from '../../array.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray, } from '../../geom/flat/inflate.js';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} [strokeStates] The stroke states (decluttering).\n */\nvar CanvasBuilder = /** @class */ (function (_super) {\n    __extends(CanvasBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.tolerance = tolerance;\n        /**\n         * @protected\n         * @const\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent = maxExtent;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.maxLineWidth = 0;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction1_ = null;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction2_ = null;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.bufferedMaxExtent_ = null;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = [];\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = [];\n        /**\n         * @private\n         * @type {import(\"../../coordinate.js\").Coordinate}\n         */\n        _this.tmpCoordinate_ = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = [];\n        /**\n         * @protected\n         * @type {import(\"../canvas.js\").FillStrokeState}\n         */\n        _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {Array<number>} dashArray Dash array.\n     * @return {Array<number>} Dash array with pixel ratio applied\n     */\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n        var pixelRatio = this.pixelRatio;\n        return pixelRatio == 1\n            ? dashArray\n            : dashArray.map(function (dash) {\n                return dash * pixelRatio;\n            });\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} closed Last input coordinate equals first.\n     * @param {boolean} skipFirst Skip first coordinate.\n     * @protected\n     * @return {number} My end.\n     */\n    CanvasBuilder.prototype.appendFlatCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n        var myEnd = this.coordinates.length;\n        var extent = this.getBufferedMaxExtent();\n        if (skipFirst) {\n            offset += stride;\n        }\n        var lastXCoord = flatCoordinates[offset];\n        var lastYCoord = flatCoordinates[offset + 1];\n        var nextCoord = this.tmpCoordinate_;\n        var skipped = true;\n        var i, lastRel, nextRel;\n        for (i = offset + stride; i < end; i += stride) {\n            nextCoord[0] = flatCoordinates[i];\n            nextCoord[1] = flatCoordinates[i + 1];\n            nextRel = coordinateRelationship(extent, nextCoord);\n            if (nextRel !== lastRel) {\n                if (skipped) {\n                    this.coordinates[myEnd++] = lastXCoord;\n                    this.coordinates[myEnd++] = lastYCoord;\n                }\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else if (nextRel === Relationship.INTERSECTING) {\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else {\n                skipped = true;\n            }\n            lastXCoord = nextCoord[0];\n            lastYCoord = nextCoord[1];\n            lastRel = nextRel;\n        }\n        // Last coordinate equals first or only one point to append:\n        if ((closed && skipped) || i === offset + stride) {\n            this.coordinates[myEnd++] = lastXCoord;\n            this.coordinates[myEnd++] = lastYCoord;\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @param {Array<number>} builderEnds Builder ends.\n     * @return {number} Offset.\n     */\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var builderEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n            builderEnds.push(builderEnd);\n            offset = end;\n        }\n        return offset;\n    };\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer) {\n        this.beginGeometry(geometry, feature);\n        var type = geometry.getType();\n        var stride = geometry.getStride();\n        var builderBegin = this.coordinates.length;\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\n        var offset;\n        if (type == GeometryType.MULTI_POLYGON) {\n            flatCoordinates = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getOrientedFlatCoordinates();\n            builderEndss = [];\n            var endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n            offset = 0;\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var myEnds = [];\n                offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n                builderEndss.push(myEnds);\n            }\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEndss,\n                geometry,\n                renderer,\n                inflateMultiCoordinatesArray,\n            ]);\n        }\n        else if (type == GeometryType.POLYGON ||\n            type == GeometryType.MULTI_LINE_STRING) {\n            builderEnds = [];\n            flatCoordinates =\n                type == GeometryType.POLYGON\n                    ? /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates()\n                    : geometry.getFlatCoordinates();\n            offset = this.drawCustomCoordinates_(flatCoordinates, 0, \n            /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(), stride, builderEnds);\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEnds,\n                geometry,\n                renderer,\n                inflateCoordinatesArray,\n            ]);\n        }\n        else if (type == GeometryType.LINE_STRING ||\n            type == GeometryType.MULTI_POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            builderEnd = this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEnd,\n                geometry,\n                renderer,\n                inflateCoordinates,\n            ]);\n        }\n        else if (type == GeometryType.POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n            builderEnd = this.coordinates.length;\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEnd,\n                geometry,\n                renderer,\n            ]);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @protected\n     * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.beginGeometry = function (geometry, feature) {\n        var extent = geometry.getExtent();\n        this.beginGeometryInstruction1_ = [\n            CanvasInstruction.BEGIN_GEOMETRY,\n            feature,\n            0,\n            extent,\n        ];\n        this.instructions.push(this.beginGeometryInstruction1_);\n        this.beginGeometryInstruction2_ = [\n            CanvasInstruction.BEGIN_GEOMETRY,\n            feature,\n            0,\n            extent,\n        ];\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n    };\n    /**\n     * @return {SerializableInstructions} the serializable instructions.\n     */\n    CanvasBuilder.prototype.finish = function () {\n        return {\n            instructions: this.instructions,\n            hitDetectionInstructions: this.hitDetectionInstructions,\n            coordinates: this.coordinates,\n        };\n    };\n    /**\n     * Reverse the hit detection instructions.\n     */\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n        var hitDetectionInstructions = this.hitDetectionInstructions;\n        // step 1 - reverse array\n        hitDetectionInstructions.reverse();\n        // step 2 - reverse instructions within geometry blocks\n        var i;\n        var n = hitDetectionInstructions.length;\n        var instruction;\n        var type;\n        var begin = -1;\n        for (i = 0; i < n; ++i) {\n            instruction = hitDetectionInstructions[i];\n            type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n            if (type == CanvasInstruction.END_GEOMETRY) {\n                begin = i;\n            }\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n                instruction[2] = i;\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\n                begin = -1;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var state = this.state;\n        if (fillStyle) {\n            var fillStyleColor = fillStyle.getColor();\n            state.fillStyle = asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle);\n        }\n        else {\n            state.fillStyle = undefined;\n        }\n        if (strokeStyle) {\n            var strokeStyleColor = strokeStyle.getColor();\n            state.strokeStyle = asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle);\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            state.lineCap =\n                strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            state.lineDash = strokeStyleLineDash\n                ? strokeStyleLineDash.slice()\n                : defaultLineDash;\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            state.lineDashOffset = strokeStyleLineDashOffset\n                ? strokeStyleLineDashOffset\n                : defaultLineDashOffset;\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            state.lineJoin =\n                strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin;\n            var strokeStyleWidth = strokeStyle.getWidth();\n            state.lineWidth =\n                strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            state.miterLimit =\n                strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit;\n            if (state.lineWidth > this.maxLineWidth) {\n                this.maxLineWidth = state.lineWidth;\n                // invalidate the buffered max extent cache\n                this.bufferedMaxExtent_ = null;\n            }\n        }\n        else {\n            state.strokeStyle = undefined;\n            state.lineCap = undefined;\n            state.lineDash = null;\n            state.lineDashOffset = undefined;\n            state.lineJoin = undefined;\n            state.lineWidth = undefined;\n            state.miterLimit = undefined;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Fill instruction.\n     */\n    CanvasBuilder.prototype.createFill = function (state) {\n        var fillStyle = state.fillStyle;\n        /** @type {Array<*>} */\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n        if (typeof fillStyle !== 'string') {\n            // Fill is a pattern or gradient - align it!\n            fillInstruction.push(true);\n        }\n        return fillInstruction;\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasBuilder.prototype.applyStroke = function (state) {\n        this.instructions.push(this.createStroke(state));\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Stroke instruction.\n     */\n    CanvasBuilder.prototype.createStroke = function (state) {\n        return [\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth * this.pixelRatio,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            this.applyPixelRatio(state.lineDash),\n            state.lineDashOffset * this.pixelRatio,\n        ];\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n     */\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n        var fillStyle = state.fillStyle;\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n            if (fillStyle !== undefined) {\n                this.instructions.push(createFill.call(this, state));\n            }\n            state.currentFillStyle = fillStyle;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n     */\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n        var strokeStyle = state.strokeStyle;\n        var lineCap = state.lineCap;\n        var lineDash = state.lineDash;\n        var lineDashOffset = state.lineDashOffset;\n        var lineJoin = state.lineJoin;\n        var lineWidth = state.lineWidth;\n        var miterLimit = state.miterLimit;\n        if (state.currentStrokeStyle != strokeStyle ||\n            state.currentLineCap != lineCap ||\n            (lineDash != state.currentLineDash &&\n                !equals(state.currentLineDash, lineDash)) ||\n            state.currentLineDashOffset != lineDashOffset ||\n            state.currentLineJoin != lineJoin ||\n            state.currentLineWidth != lineWidth ||\n            state.currentMiterLimit != miterLimit) {\n            if (strokeStyle !== undefined) {\n                applyStroke.call(this, state);\n            }\n            state.currentStrokeStyle = strokeStyle;\n            state.currentLineCap = lineCap;\n            state.currentLineDash = lineDash;\n            state.currentLineDashOffset = lineDashOffset;\n            state.currentLineJoin = lineJoin;\n            state.currentLineWidth = lineWidth;\n            state.currentMiterLimit = miterLimit;\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.endGeometry = function (feature) {\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\n        this.beginGeometryInstruction1_ = null;\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n        this.beginGeometryInstruction2_ = null;\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n        this.instructions.push(endGeometryInstruction);\n        this.hitDetectionInstructions.push(endGeometryInstruction);\n    };\n    /**\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\n     * provided to the constructor.  To account for symbolizers that may intersect\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\n     * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n     * @protected\n     */\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n        if (!this.bufferedMaxExtent_) {\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\n            if (this.maxLineWidth > 0) {\n                var width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n            }\n        }\n        return this.bufferedMaxExtent_;\n    };\n    return CanvasBuilder;\n}(VectorContext));\nexport default CanvasBuilder;\n//# sourceMappingURL=Builder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nvar CanvasImageBuilder = /** @class */ (function (_super) {\n    __extends(CanvasImageBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroups}\n         */\n        _this.declutterGroups_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.imagePixelRatio_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorY_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.height_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.opacity_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originY_ = undefined;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.rotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size|undefined}\n         */\n        _this.scale_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.width_ = undefined;\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} My end.\n     */\n    CanvasImageBuilder.prototype.drawCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n    };\n    /**\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(pointGeometry, feature);\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\n        var stride = pointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_ * this.imagePixelRatio_,\n            this.anchorY_ * this.imagePixelRatio_,\n            this.declutterGroups_,\n            Math.ceil(this.height_ * this.imagePixelRatio_),\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            [\n                (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n                (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n            ],\n            Math.ceil(this.width_ * this.imagePixelRatio_),\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_,\n            this.anchorY_,\n            this.declutterGroups_,\n            this.height_,\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            this.scale_,\n            this.width_,\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(multiPointGeometry, feature);\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n        var stride = multiPointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_ * this.imagePixelRatio_,\n            this.anchorY_ * this.imagePixelRatio_,\n            this.declutterGroups_,\n            Math.ceil(this.height_ * this.imagePixelRatio_),\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            [\n                (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n                (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n            ],\n            Math.ceil(this.width_ * this.imagePixelRatio_),\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_,\n            this.anchorY_,\n            this.declutterGroups_,\n            this.height_,\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            this.scale_,\n            this.width_,\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"./Builder.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasImageBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\n        this.anchorX_ = undefined;\n        this.anchorY_ = undefined;\n        this.hitDetectionImage_ = null;\n        this.image_ = null;\n        this.imagePixelRatio_ = undefined;\n        this.height_ = undefined;\n        this.scale_ = undefined;\n        this.opacity_ = undefined;\n        this.originX_ = undefined;\n        this.originY_ = undefined;\n        this.rotateWithView_ = undefined;\n        this.rotation_ = undefined;\n        this.width_ = undefined;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroups Declutter.\n     */\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, declutterGroups) {\n        var anchor = imageStyle.getAnchor();\n        var size = imageStyle.getSize();\n        var hitDetectionImage = imageStyle.getHitDetectionImage();\n        var image = imageStyle.getImage(this.pixelRatio);\n        var origin = imageStyle.getOrigin();\n        this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n        this.anchorX_ = anchor[0];\n        this.anchorY_ = anchor[1];\n        this.declutterGroups_ = declutterGroups;\n        this.hitDetectionImage_ = hitDetectionImage;\n        this.image_ = image;\n        this.height_ = size[1];\n        this.opacity_ = imageStyle.getOpacity();\n        this.originX_ = origin[0];\n        this.originY_ = origin[1];\n        this.rotateWithView_ = imageStyle.getRotateWithView();\n        this.rotation_ = imageStyle.getRotation();\n        this.scale_ = imageStyle.getScaleArray();\n        this.width_ = size[0];\n    };\n    return CanvasImageBuilder;\n}(CanvasBuilder));\nexport default CanvasImageBuilder;\n//# sourceMappingURL=ImageBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, strokeInstruction, } from './Instruction.js';\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\n    __extends(CanvasLineStringBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} end.\n     */\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n        var moveToLineToInstruction = [\n            CanvasInstruction.MOVE_TO_LINE_TO,\n            myBegin,\n            myEnd,\n        ];\n        this.instructions.push(moveToLineToInstruction);\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\n        return end;\n    };\n    /**\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(lineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            state.lineDash,\n            state.lineDashOffset,\n        ], beginPathInstruction);\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n        var stride = lineStringGeometry.getStride();\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(multiLineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            state.lineDash,\n            state.lineDashOffset,\n        ], beginPathInstruction);\n        var ends = multiLineStringGeometry.getEnds();\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n        var stride = multiLineStringGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, \n            /** @type {number} */ (ends[i]), stride);\n        }\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"./Builder.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasLineStringBuilder.prototype.finish = function () {\n        var state = this.state;\n        if (state.lastStroke != undefined &&\n            state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n        }\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n        if (state.lastStroke != undefined &&\n            state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n            state.lastStroke = this.coordinates.length;\n        }\n        state.lastStroke = 0;\n        _super.prototype.applyStroke.call(this, state);\n        this.instructions.push(beginPathInstruction);\n    };\n    return CanvasLineStringBuilder;\n}(CanvasBuilder));\nexport default CanvasLineStringBuilder;\n//# sourceMappingURL=LineStringBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, closePathInstruction, fillInstruction, strokeInstruction, } from './Instruction.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport { snap } from '../../geom/flat/simplify.js';\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\n    __extends(CanvasPolygonBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\n        var state = this.state;\n        var fill = state.fillStyle !== undefined;\n        var stroke = state.strokeStyle !== undefined;\n        var numEnds = ends.length;\n        this.instructions.push(beginPathInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction);\n        for (var i = 0; i < numEnds; ++i) {\n            var end = ends[i];\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n            var moveToLineToInstruction = [\n                CanvasInstruction.MOVE_TO_LINE_TO,\n                myBegin,\n                myEnd,\n            ];\n            this.instructions.push(moveToLineToInstruction);\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\n            if (stroke) {\n                // Performance optimization: only call closePath() when we have a stroke.\n                // Otherwise the ring is closed already (see appendFlatCoordinates above).\n                this.instructions.push(closePathInstruction);\n                this.hitDetectionInstructions.push(closePathInstruction);\n            }\n            offset = end;\n        }\n        if (fill) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (stroke) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        return offset;\n    };\n    /**\n     * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(circleGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\n        var stride = circleGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n        this.instructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n        if (state.fillStyle !== undefined) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(polygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var ends = polygonGeometry.getEnds();\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n        var stride = polygonGeometry.getStride();\n        this.drawFlatCoordinatess_(flatCoordinates, 0, \n        /** @type {Array<number>} */ (ends), stride);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(multiPolygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var endss = multiPolygonGeometry.getEndss();\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n        var stride = multiPolygonGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"./Builder.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasPolygonBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        // We want to preserve topology when drawing polygons.  Polygons are\n        // simplified using quantization and point elimination. However, we might\n        // have received a mix of quantized and non-quantized geometries, so ensure\n        // that all are quantized by quantizing all coordinates in the batch.\n        var tolerance = this.tolerance;\n        if (tolerance !== 0) {\n            var coordinates = this.coordinates;\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = snap(coordinates[i], tolerance);\n            }\n        }\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @private\n     */\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        if (fillStyle !== undefined) {\n            this.updateFillStyle(state, this.createFill);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.updateStrokeStyle(state, this.applyStroke);\n        }\n    };\n    return CanvasPolygonBuilder;\n}(CanvasBuilder));\nexport default CanvasPolygonBuilder;\n//# sourceMappingURL=PolygonBuilder.js.map","/**\n * @module ol/style/TextPlacement\n */\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n    POINT: 'point',\n    LINE: 'line',\n};\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n    var chunkStart = offset;\n    var chunkEnd = offset;\n    var chunkM = 0;\n    var m = 0;\n    var start = offset;\n    var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n    for (i = offset; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        if (x1 !== undefined) {\n            x23 = x2 - x1;\n            y23 = y2 - y1;\n            m23 = Math.sqrt(x23 * x23 + y23 * y23);\n            if (x12 !== undefined) {\n                m += m12;\n                acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n                if (acos > maxAngle) {\n                    if (m > chunkM) {\n                        chunkM = m;\n                        chunkStart = start;\n                        chunkEnd = i;\n                    }\n                    m = 0;\n                    start = i - stride;\n                }\n            }\n            m12 = m23;\n            x12 = x23;\n            y12 = y23;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    m += m23;\n    return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n//# sourceMappingURL=straightchunk.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultPadding, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, registerFont, } from '../canvas.js';\nimport { getUid } from '../../util.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {\n    'left': 0,\n    'end': 0,\n    'center': 0.5,\n    'right': 1,\n    'start': 1,\n    'top': 0,\n    'middle': 0.5,\n    'hanging': 0.2,\n    'alphabetic': 0.8,\n    'ideographic': 0.8,\n    'bottom': 1,\n};\nvar CanvasTextBuilder = /** @class */ (function (_super) {\n    __extends(CanvasTextBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroups}\n         */\n        _this.declutterGroups_;\n        /**\n         * @private\n         * @type {Array<HTMLCanvasElement>}\n         */\n        _this.labels_ = null;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.textRotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = {};\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = {};\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.textKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.fillKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.strokeKey_ = '';\n        return _this;\n    }\n    /**\n     * @return {import(\"./Builder.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasTextBuilder.prototype.finish = function () {\n        var instructions = _super.prototype.finish.call(this);\n        instructions.textStates = this.textStates;\n        instructions.fillStates = this.fillStates;\n        instructions.strokeStates = this.strokeStates;\n        return instructions;\n    };\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n        var fillState = this.textFillState_;\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n            return;\n        }\n        var begin = this.coordinates.length;\n        var geometryType = geometry.getType();\n        var flatCoordinates = null;\n        var end = 2;\n        var stride = geometry.getStride();\n        var i, ii;\n        if (textState.placement === TextPlacement.LINE) {\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                return;\n            }\n            var ends = void 0;\n            flatCoordinates = geometry.getFlatCoordinates();\n            if (geometryType == GeometryType.LINE_STRING) {\n                ends = [flatCoordinates.length];\n            }\n            else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n                ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n            }\n            else if (geometryType == GeometryType.POLYGON) {\n                ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n                    .getEnds()\n                    .slice(0, 1);\n            }\n            else if (geometryType == GeometryType.MULTI_POLYGON) {\n                var endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n                ends = [];\n                for (i = 0, ii = endss.length; i < ii; ++i) {\n                    ends.push(endss[i][0]);\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            var textAlign = textState.textAlign;\n            var flatOffset = 0;\n            var flatEnd = void 0;\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\n                if (textAlign == undefined) {\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                    flatOffset = range[0];\n                    flatEnd = range[1];\n                }\n                else {\n                    flatEnd = ends[o];\n                }\n                for (i = flatOffset; i < flatEnd; i += stride) {\n                    this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                }\n                end = this.coordinates.length;\n                flatOffset = ends[o];\n                var declutterGroup = this.declutterGroups_\n                    ? o === 0\n                        ? this.declutterGroups_[0]\n                        : [].concat(this.declutterGroups_[0])\n                    : null;\n                this.drawChars_(begin, end, declutterGroup);\n                begin = end;\n            }\n            this.endGeometry(feature);\n        }\n        else {\n            var geometryWidths = null;\n            if (!textState.overflow) {\n                geometryWidths = [];\n            }\n            switch (geometryType) {\n                case GeometryType.POINT:\n                case GeometryType.MULTI_POINT:\n                    flatCoordinates = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                    break;\n                case GeometryType.CIRCLE:\n                    flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                    stride = 2;\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.POLYGON:\n                    flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                    if (!textState.overflow) {\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\n                    }\n                    stride = 3;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                    flatCoordinates = [];\n                    for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                        if (!textState.overflow) {\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                        }\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                    }\n                    stride = 2;\n                    end = flatCoordinates.length;\n                    if (end == 0) {\n                        return;\n                    }\n                    break;\n                default:\n            }\n            end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n            this.saveTextStates_();\n            if (textState.backgroundFill || textState.backgroundStroke) {\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                if (textState.backgroundFill) {\n                    this.updateFillStyle(this.state, this.createFill);\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\n                }\n                if (textState.backgroundStroke) {\n                    this.updateStrokeStyle(this.state, this.applyStroke);\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            // adjust padding for negative scale\n            var padding = textState.padding;\n            if (padding != defaultPadding &&\n                (textState.scale[0] < 0 || textState.scale[1] < 0)) {\n                var p0 = textState.padding[0];\n                var p1 = textState.padding[1];\n                var p2 = textState.padding[2];\n                var p3 = textState.padding[3];\n                if (textState.scale[0] < 0) {\n                    p1 = -p1;\n                    p3 = -p3;\n                }\n                if (textState.scale[1] < 0) {\n                    p0 = -p0;\n                    p2 = -p2;\n                }\n                padding = [p0, p1, p2, p3];\n            }\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n            // render time.\n            var pixelRatio_1 = this.pixelRatio;\n            this.instructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                this.declutterGroups_,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [1, 1],\n                NaN,\n                padding == defaultPadding\n                    ? defaultPadding\n                    : padding.map(function (p) {\n                        return p * pixelRatio_1;\n                    }),\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            var scale = 1 / pixelRatio_1;\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                this.declutterGroups_,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [scale, scale],\n                NaN,\n                padding,\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            this.endGeometry(feature);\n        }\n    };\n    /**\n     * @private\n     */\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var fillState = this.textFillState_;\n        var strokeKey = this.strokeKey_;\n        if (strokeState) {\n            if (!(strokeKey in this.strokeStates)) {\n                this.strokeStates[strokeKey] = {\n                    strokeStyle: strokeState.strokeStyle,\n                    lineCap: strokeState.lineCap,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineWidth: strokeState.lineWidth,\n                    lineJoin: strokeState.lineJoin,\n                    miterLimit: strokeState.miterLimit,\n                    lineDash: strokeState.lineDash,\n                };\n            }\n        }\n        var textKey = this.textKey_;\n        if (!(textKey in this.textStates)) {\n            this.textStates[textKey] = {\n                font: textState.font,\n                textAlign: textState.textAlign || defaultTextAlign,\n                textBaseline: textState.textBaseline || defaultTextBaseline,\n                scale: textState.scale,\n            };\n        }\n        var fillKey = this.fillKey_;\n        if (fillState) {\n            if (!(fillKey in this.fillStates)) {\n                this.fillStates[fillKey] = {\n                    fillStyle: fillState.fillStyle,\n                };\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     */\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end, declutterGroup) {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var strokeKey = this.strokeKey_;\n        var textKey = this.textKey_;\n        var fillKey = this.fillKey_;\n        this.saveTextStates_();\n        var pixelRatio = this.pixelRatio;\n        var baseline = TEXT_ALIGN[textState.textBaseline];\n        var offsetY = this.textOffsetY_ * pixelRatio;\n        var text = this.text_;\n        var strokeWidth = strokeState\n            ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n            : 0;\n        this.instructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            declutterGroup,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            pixelRatio,\n            offsetY,\n            strokeKey,\n            strokeWidth * pixelRatio,\n            text,\n            textKey,\n            1,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            declutterGroup,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            1,\n            offsetY,\n            strokeKey,\n            strokeWidth,\n            text,\n            textKey,\n            1 / pixelRatio,\n        ]);\n    };\n    /**\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"../canvas.js\").DeclutterGroups} declutterGroups Declutter.\n     */\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, declutterGroups) {\n        var textState, fillState, strokeState;\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            this.declutterGroups_ = declutterGroups;\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                fillState = null;\n                this.textFillState_ = fillState;\n            }\n            else {\n                fillState = this.textFillState_;\n                if (!fillState) {\n                    fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                    this.textFillState_ = fillState;\n                }\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                strokeState = null;\n                this.textStrokeState_ = strokeState;\n            }\n            else {\n                strokeState = this.textStrokeState_;\n                if (!strokeState) {\n                    strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                    this.textStrokeState_ = strokeState;\n                }\n                var lineDash = textStrokeStyle.getLineDash();\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                var lineWidth = textStrokeStyle.getWidth();\n                var miterLimit = textStrokeStyle.getMiterLimit();\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                strokeState.lineDashOffset =\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                strokeState.lineWidth =\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\n                strokeState.miterLimit =\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n            }\n            textState = this.textState_;\n            var font = textStyle.getFont() || defaultFont;\n            registerFont(font);\n            var textScale = textStyle.getScaleArray();\n            textState.overflow = textStyle.getOverflow();\n            textState.font = font;\n            textState.maxAngle = textStyle.getMaxAngle();\n            textState.placement = textStyle.getPlacement();\n            textState.textAlign = textStyle.getTextAlign();\n            textState.textBaseline =\n                textStyle.getTextBaseline() || defaultTextBaseline;\n            textState.backgroundFill = textStyle.getBackgroundFill();\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\n            textState.padding = textStyle.getPadding() || defaultPadding;\n            textState.scale = textScale === undefined ? [1, 1] : textScale;\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            this.text_ = textStyle.getText() || '';\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n            this.textRotateWithView_ =\n                textRotateWithView === undefined ? false : textRotateWithView;\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n            this.strokeKey_ = strokeState\n                ? (typeof strokeState.strokeStyle == 'string'\n                    ? strokeState.strokeStyle\n                    : getUid(strokeState.strokeStyle)) +\n                    strokeState.lineCap +\n                    strokeState.lineDashOffset +\n                    '|' +\n                    strokeState.lineWidth +\n                    strokeState.lineJoin +\n                    strokeState.miterLimit +\n                    '[' +\n                    strokeState.lineDash.join() +\n                    ']'\n                : '';\n            this.textKey_ =\n                textState.font +\n                    textState.scale +\n                    (textState.textAlign || '?') +\n                    (textState.textBaseline || '?');\n            this.fillKey_ = fillState\n                ? typeof fillState.fillStyle == 'string'\n                    ? fillState.fillStyle\n                    : '|' + getUid(fillState.fillStyle)\n                : '';\n        }\n    };\n    return CanvasTextBuilder;\n}(CanvasBuilder));\nexport default CanvasTextBuilder;\n//# sourceMappingURL=TextBuilder.js.map","/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n    'Circle': PolygonBuilder,\n    'Default': Builder,\n    'Image': ImageBuilder,\n    'LineString': LineStringBuilder,\n    'Polygon': PolygonBuilder,\n    'Text': TextBuilder,\n};\nvar BuilderGroup = /** @class */ (function () {\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} declutter Decluttering enabled.\n     */\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio, declutter) {\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.declutter_ = declutter;\n        /**\n         * @type {import(\"../canvas.js\").DeclutterGroups}\n         * @private\n         */\n        this.declutterGroups_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.tolerance_ = tolerance;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n         */\n        this.buildersByZIndex_ = {};\n    }\n    /**\n     * @param {boolean} group Group with previous builder.\n     * @return {import(\"../canvas\").DeclutterGroups} The resulting instruction groups.\n     */\n    BuilderGroup.prototype.addDeclutter = function (group) {\n        /** @type {Array<*>} */\n        var declutter = null;\n        if (this.declutter_) {\n            if (group) {\n                declutter = this.declutterGroups_;\n                /** @type {number} */ (declutter[0][0])++;\n            }\n            else {\n                declutter = [[1]];\n                this.declutterGroups_ = declutter;\n            }\n        }\n        return declutter;\n    };\n    /**\n     * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n     */\n    BuilderGroup.prototype.finish = function () {\n        var builderInstructions = {};\n        for (var zKey in this.buildersByZIndex_) {\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\n            var builders = this.buildersByZIndex_[zKey];\n            for (var builderKey in builders) {\n                var builderInstruction = builders[builderKey].finish();\n                builderInstructions[zKey][builderKey] = builderInstruction;\n            }\n        }\n        return builderInstructions;\n    };\n    /**\n     * @param {number|undefined} zIndex Z index.\n     * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n     * @return {import(\"../VectorContext.js\").default} Replay.\n     */\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n        var replays = this.buildersByZIndex_[zIndexKey];\n        if (replays === undefined) {\n            replays = {};\n            this.buildersByZIndex_[zIndexKey] = replays;\n        }\n        var replay = replays[builderType];\n        if (replay === undefined) {\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n            replays[builderType] = replay;\n        }\n        return replay;\n    };\n    return BuilderGroup;\n}());\nexport default BuilderGroup;\n//# sourceMappingURL=BuilderGroup.js.map","/**\n * @module ol/render/canvas/BuilderType\n */\n/**\n * @enum {string}\n */\nexport default {\n    CIRCLE: 'Circle',\n    DEFAULT: 'Default',\n    IMAGE: 'Image',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    TEXT: 'Text',\n};\n//# sourceMappingURL=BuilderType.js.map","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/geom/flat/textpath\n */\nimport { lerp } from '../../math.js';\nimport { rotate } from './transform.js';\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache, rotation) {\n    var result = [];\n    // Keep text upright\n    var reverse;\n    if (rotation) {\n        var rotatedCoordinates = rotate(flatCoordinates, offset, end, stride, rotation, [flatCoordinates[offset], flatCoordinates[offset + 1]]);\n        reverse =\n            rotatedCoordinates[0] >\n                rotatedCoordinates[rotatedCoordinates.length - stride];\n    }\n    else {\n        reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n    }\n    var numChars = text.length;\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    offset += stride;\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var segmentM = 0;\n    var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    var angleChanged = false;\n    var index, previousAngle;\n    for (var i = 0; i < numChars; ++i) {\n        index = reverse ? numChars - i - 1 : i;\n        var char = text[index];\n        var charLength = scale * measureAndCacheTextWidth(font, char, cache);\n        var charM = startM + charLength / 2;\n        while (offset < end - stride && segmentM + segmentLength < charM) {\n            x1 = x2;\n            y1 = y2;\n            offset += stride;\n            x2 = flatCoordinates[offset];\n            y2 = flatCoordinates[offset + 1];\n            segmentM += segmentLength;\n            segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n        }\n        var segmentPos = charM - segmentM;\n        var angle = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            angle += angle > 0 ? -Math.PI : Math.PI;\n        }\n        if (previousAngle !== undefined) {\n            var delta = angle - previousAngle;\n            angleChanged = angleChanged || delta !== 0;\n            delta +=\n                delta > Math.PI ? -2 * Math.PI : delta < -Math.PI ? 2 * Math.PI : 0;\n            if (Math.abs(delta) > maxAngle) {\n                return null;\n            }\n        }\n        previousAngle = angle;\n        var interpolate = segmentPos / segmentLength;\n        var x = lerp(x1, x2, interpolate);\n        var y = lerp(y1, y2, interpolate);\n        result[index] = [x, y, charLength / 2, angle, char];\n        startM += charLength;\n    }\n    return angleChanged\n        ? result\n        : [[result[0][0], result[0][1], result[0][2], result[0][3], text]];\n}\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport RBush from 'rbush/rbush.js';\nimport { TEXT_ALIGN } from './TextBuilder.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../../has.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, setFromArray as transformSetFromArray, } from '../../transform.js';\nimport { createEmpty, createOrUpdate, getHeight, getWidth, intersects, } from '../../extent.js';\nimport { defaultPadding, defaultTextBaseline, drawImageOrLabel, } from '../canvas.js';\nimport { defaultTextAlign, measureAndCacheTextWidth, measureTextHeight, measureTextWidths, } from '../canvas.js';\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\nimport { equals } from '../../array.js';\nimport { lineStringLength } from '../../geom/flat/length.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} textStates The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} fillStates The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} strokeStates The stroke states (decluttering).\n */\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p4 = [];\nvar Executor = /** @class */ (function () {\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The replay can have overlapping geometries.\n     * @param {SerializableInstructions} instructions The serializable instructions\n     * @param {import(\"../../size.js\").Size} renderBuffer Render buffer (width/height) in pixels.\n     */\n    function Executor(resolution, pixelRatio, overlaps, instructions, renderBuffer) {\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        this.overlaps = overlaps;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        this.resolution = resolution;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.alignFill_;\n        /**\n         * @type {Array<*>}\n         */\n        this.declutterItems = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        this.instructions = instructions.instructions;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        this.coordinates = instructions.coordinates;\n        /**\n         * @private\n         * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n         */\n        this.coordinateCache_ = {};\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        this.renderBuffer_ = renderBuffer;\n        /**\n         * @private\n         * @type {!import(\"../../transform.js\").Transform}\n         */\n        this.renderedTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.pixelCoordinates_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.viewRotation_ = 0;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        this.fillStates = instructions.fillStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        this.strokeStates = instructions.strokeStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        this.textStates = instructions.textStates || {};\n        /**\n         * @private\n         * @type {Object<string, Object<string, number>>}\n         */\n        this.widths_ = {};\n        /**\n         * @private\n         * @type {Object<string, import(\"../canvas.js\").Label>}\n         */\n        this.labels_ = {};\n    }\n    /**\n     * @param {string} text Text.\n     * @param {string} textKey Text style key.\n     * @param {string} fillKey Fill style key.\n     * @param {string} strokeKey Stroke style key.\n     * @return {import(\"../canvas.js\").Label} Label.\n     */\n    Executor.prototype.createLabel = function (text, textKey, fillKey, strokeKey) {\n        var key = text + textKey + fillKey + strokeKey;\n        if (this.labels_[key]) {\n            return this.labels_[key];\n        }\n        var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n        var fillState = fillKey ? this.fillStates[fillKey] : null;\n        var textState = this.textStates[textKey];\n        var pixelRatio = this.pixelRatio;\n        var scale = [\n            textState.scale[0] * pixelRatio,\n            textState.scale[1] * pixelRatio,\n        ];\n        var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n        var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        var lines = text.split('\\n');\n        var numLines = lines.length;\n        var widths = [];\n        var width = measureTextWidths(textState.font, lines, widths);\n        var lineHeight = measureTextHeight(textState.font);\n        var height = lineHeight * numLines;\n        var renderWidth = width + strokeWidth;\n        var contextInstructions = [];\n        // make canvas 2 pixels wider to account for italic text width measurement errors\n        var w = (renderWidth + 2) * scale[0];\n        var h = (height + strokeWidth) * scale[1];\n        /** @type {import(\"../canvas.js\").Label} */\n        var label = {\n            width: w < 0 ? Math.floor(w) : Math.ceil(w),\n            height: h < 0 ? Math.floor(h) : Math.ceil(h),\n            contextInstructions: contextInstructions,\n        };\n        if (scale[0] != 1 || scale[1] != 1) {\n            contextInstructions.push('scale', scale);\n        }\n        contextInstructions.push('font', textState.font);\n        if (strokeKey) {\n            contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n            contextInstructions.push('lineWidth', strokeWidth);\n            contextInstructions.push('lineCap', strokeState.lineCap);\n            contextInstructions.push('lineJoin', strokeState.lineJoin);\n            contextInstructions.push('miterLimit', strokeState.miterLimit);\n            // eslint-disable-next-line\n            var Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n            if (Context.prototype.setLineDash) {\n                contextInstructions.push('setLineDash', [strokeState.lineDash]);\n                contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n            }\n        }\n        if (fillKey) {\n            contextInstructions.push('fillStyle', fillState.fillStyle);\n        }\n        contextInstructions.push('textBaseline', 'middle');\n        contextInstructions.push('textAlign', 'center');\n        var leftRight = 0.5 - align;\n        var x = align * renderWidth + leftRight * strokeWidth;\n        var i;\n        if (strokeKey) {\n            for (i = 0; i < numLines; ++i) {\n                contextInstructions.push('strokeText', [\n                    lines[i],\n                    x + leftRight * widths[i],\n                    0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n                ]);\n            }\n        }\n        if (fillKey) {\n            for (i = 0; i < numLines; ++i) {\n                contextInstructions.push('fillText', [\n                    lines[i],\n                    x + leftRight * widths[i],\n                    0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n                ]);\n            }\n        }\n        this.labels_[key] = label;\n        return label;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     * @param {boolean} declutter Declutter.\n     */\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction, declutter) {\n        context.beginPath();\n        context.moveTo.apply(context, p1);\n        context.lineTo.apply(context, p2);\n        context.lineTo.apply(context, p3);\n        context.lineTo.apply(context, p4);\n        context.lineTo.apply(context, p1);\n        if (fillInstruction) {\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n            if (declutter) {\n                context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (fillInstruction[1]);\n            }\n            this.fill_(context);\n        }\n        if (strokeInstruction) {\n            this.setStrokeStyle_(context, \n            /** @type {Array<*>} */ (strokeInstruction));\n            context.stroke();\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n     * @param {number} anchorX Anchor X.\n     * @param {number} anchorY Anchor Y.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {number} height Height.\n     * @param {number} opacity Opacity.\n     * @param {number} originX Origin X.\n     * @param {number} originY Origin Y.\n     * @param {number} rotation Rotation.\n     * @param {import(\"../../size.js\").Size} scale Scale.\n     * @param {boolean} snapToPixel Snap to pixel.\n     * @param {number} width Width.\n     * @param {Array<number>} padding Padding.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     * @return {boolean} The image or label was rendered.\n     */\n    Executor.prototype.replayImageOrLabel_ = function (context, contextScale, x, y, imageOrLabel, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, fillInstruction, strokeInstruction) {\n        var fillStroke = fillInstruction || strokeInstruction;\n        anchorX *= scale[0];\n        anchorY *= scale[1];\n        x -= anchorX;\n        y -= anchorY;\n        var w = width + originX > imageOrLabel.width\n            ? imageOrLabel.width - originX\n            : width;\n        var h = height + originY > imageOrLabel.height\n            ? imageOrLabel.height - originY\n            : height;\n        var boxW = padding[3] + w * scale[0] + padding[1];\n        var boxH = padding[0] + h * scale[1] + padding[2];\n        var boxX = x - padding[3];\n        var boxY = y - padding[0];\n        if (fillStroke || rotation !== 0) {\n            p1[0] = boxX;\n            p4[0] = boxX;\n            p1[1] = boxY;\n            p2[1] = boxY;\n            p2[0] = boxX + boxW;\n            p3[0] = p2[0];\n            p3[1] = boxY + boxH;\n            p4[1] = p3[1];\n        }\n        var transform = null;\n        if (rotation !== 0) {\n            var centerX = x + anchorX;\n            var centerY = y + anchorY;\n            transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n            applyTransform(tmpTransform, p1);\n            applyTransform(tmpTransform, p2);\n            applyTransform(tmpTransform, p3);\n            applyTransform(tmpTransform, p4);\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\n        }\n        else {\n            createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n        }\n        var renderBufferX = 0;\n        var renderBufferY = 0;\n        if (declutterGroup) {\n            var renderBuffer = this.renderBuffer_;\n            renderBuffer[0] = Math.max(renderBuffer[0], getWidth(tmpExtent));\n            renderBufferX = renderBuffer[0];\n            renderBuffer[1] = Math.max(renderBuffer[1], getHeight(tmpExtent));\n            renderBufferY = renderBuffer[1];\n        }\n        var canvas = context.canvas;\n        var strokePadding = strokeInstruction\n            ? (strokeInstruction[2] * scale[0]) / 2\n            : 0;\n        var intersects = tmpExtent[0] - strokePadding <=\n            (canvas.width + renderBufferX) / contextScale &&\n            tmpExtent[2] + strokePadding >= -renderBufferX / contextScale &&\n            tmpExtent[1] - strokePadding <=\n                (canvas.height + renderBufferY) / contextScale &&\n            tmpExtent[3] + strokePadding >= -renderBufferY / contextScale;\n        if (snapToPixel) {\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        if (declutterGroup) {\n            if (!intersects && declutterGroup[0] == 1) {\n                return false;\n            }\n            var declutterArgs = intersects\n                ? [\n                    context,\n                    transform ? transform.slice(0) : null,\n                    opacity,\n                    imageOrLabel,\n                    originX,\n                    originY,\n                    w,\n                    h,\n                    x,\n                    y,\n                    scale,\n                    tmpExtent.slice(),\n                ]\n                : null;\n            if (declutterArgs) {\n                if (fillStroke) {\n                    declutterArgs.push(fillInstruction, strokeInstruction, p1.slice(0), p2.slice(0), p3.slice(0), p4.slice(0));\n                }\n                declutterGroup.push(declutterArgs);\n            }\n        }\n        else if (intersects) {\n            if (fillStroke) {\n                this.replayTextBackground_(context, p1, p2, p3, p4, \n                /** @type {Array<*>} */ (fillInstruction), \n                /** @type {Array<*>} */ (strokeInstruction), false);\n            }\n            drawImageOrLabel(context, transform, opacity, imageOrLabel, originX, originY, w, h, x, y, scale);\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     */\n    Executor.prototype.fill_ = function (context) {\n        if (this.alignFill_) {\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\n            var repeatSize = 512 * this.pixelRatio;\n            context.save();\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\n            context.rotate(this.viewRotation_);\n        }\n        context.fill();\n        if (this.alignFill_) {\n            context.restore();\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {Array<*>} instruction Instruction.\n     */\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\n        context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n        context.lineWidth = /** @type {number} */ (instruction[2]);\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n        context.miterLimit = /** @type {number} */ (instruction[5]);\n        if (context.setLineDash) {\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {number} opacity Layer opacity.\n     * @param {?} declutterTree Declutter tree.\n     * @return {?} Declutter tree.\n     */\n    Executor.prototype.renderDeclutter = function (declutterGroup, feature, opacity, declutterTree) {\n        /** @type {Array<import(\"../../structs/RBush.js\").Entry>} */\n        var boxes = [];\n        for (var i = 1, ii = declutterGroup.length; i < ii; ++i) {\n            var declutterData = declutterGroup[i];\n            var box = declutterData[11];\n            boxes.push({\n                minX: box[0],\n                minY: box[1],\n                maxX: box[2],\n                maxY: box[3],\n                value: feature,\n            });\n        }\n        if (!declutterTree) {\n            declutterTree = new RBush(9);\n        }\n        var collides = false;\n        for (var i = 0, ii = boxes.length; i < ii; ++i) {\n            if (declutterTree.collides(boxes[i])) {\n                collides = true;\n                break;\n            }\n        }\n        if (!collides) {\n            declutterTree.load(boxes);\n            for (var j = 1, jj = declutterGroup.length; j < jj; ++j) {\n                var declutterData = /** @type {Array} */ (declutterGroup[j]);\n                var context = declutterData[0];\n                var currentAlpha = context.globalAlpha;\n                if (currentAlpha !== opacity) {\n                    context.globalAlpha = opacity;\n                }\n                if (declutterData.length > 12) {\n                    this.replayTextBackground_(declutterData[0], declutterData[14], declutterData[15], declutterData[16], declutterData[17], declutterData[12], declutterData[13], true);\n                }\n                drawImageOrLabel.apply(undefined, declutterData);\n                if (currentAlpha !== opacity) {\n                    context.globalAlpha = currentAlpha;\n                }\n            }\n        }\n        declutterGroup.length = 1;\n        return declutterTree;\n    };\n    /**\n     * @private\n     * @param {string} text The text to draw.\n     * @param {string} textKey The key of the text state.\n     * @param {string} strokeKey The key for the stroke state.\n     * @param {string} fillKey The key for the fill state.\n     * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n     */\n    Executor.prototype.drawLabelWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\n        var textState = this.textStates[textKey];\n        var label = this.createLabel(text, textKey, fillKey, strokeKey);\n        var strokeState = this.strokeStates[strokeKey];\n        var pixelRatio = this.pixelRatio;\n        var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        // Remove the 2 pixels we added in createLabel() for the anchor\n        var width = label.width / pixelRatio - 2 * textState.scale[0];\n        var anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n        var anchorY = (baseline * label.height) / pixelRatio +\n            2 * (0.5 - baseline) * strokeWidth;\n        return {\n            label: label,\n            anchorX: anchorX,\n            anchorY: anchorY,\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {Array<*>} instructions Instructions array.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T|undefined} featureCallback Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.execute_ = function (context, contextScale, transform, instructions, snapToPixel, featureCallback, opt_hitExtent) {\n        this.declutterItems.length = 0;\n        /** @type {Array<number>} */\n        var pixelCoordinates;\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n            pixelCoordinates = this.pixelCoordinates_;\n        }\n        else {\n            if (!this.pixelCoordinates_) {\n                this.pixelCoordinates_ = [];\n            }\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n            transformSetFromArray(this.renderedTransform_, transform);\n        }\n        var i = 0; // instruction index\n        var ii = instructions.length; // end of instructions\n        var d = 0; // data index\n        var dd; // end of per-instruction data\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, declutterGroups, image, text, textKey;\n        var strokeKey, fillKey;\n        var pendingFill = 0;\n        var pendingStroke = 0;\n        var lastFillInstruction = null;\n        var lastStrokeInstruction = null;\n        var coordinateCache = this.coordinateCache_;\n        var viewRotation = this.viewRotation_;\n        var viewRotationFromTransform = Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n        var state = /** @type {import(\"../../render.js\").State} */ ({\n            context: context,\n            pixelRatio: this.pixelRatio,\n            resolution: this.resolution,\n            rotation: viewRotation,\n        });\n        // When the batch size gets too big, performance decreases. 200 is a good\n        // balance between batch size and number of fill/stroke instructions.\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n        var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n        var x, y;\n        while (i < ii) {\n            var instruction = instructions[i];\n            var type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n            switch (type) {\n                case CanvasInstruction.BEGIN_GEOMETRY:\n                    feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                    if (!feature.getGeometry()) {\n                        i = /** @type {number} */ (instruction[2]);\n                    }\n                    else if (opt_hitExtent !== undefined &&\n                        !intersects(opt_hitExtent, instruction[3])) {\n                        i = /** @type {number} */ (instruction[2]) + 1;\n                    }\n                    else {\n                        ++i;\n                    }\n                    break;\n                case CanvasInstruction.BEGIN_PATH:\n                    if (pendingFill > batchSize) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                    }\n                    if (pendingStroke > batchSize) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    if (!pendingFill && !pendingStroke) {\n                        context.beginPath();\n                        prevX = NaN;\n                        prevY = NaN;\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.CIRCLE:\n                    d = /** @type {number} */ (instruction[1]);\n                    var x1 = pixelCoordinates[d];\n                    var y1 = pixelCoordinates[d + 1];\n                    var x2 = pixelCoordinates[d + 2];\n                    var y2 = pixelCoordinates[d + 3];\n                    var dx = x2 - x1;\n                    var dy = y2 - y1;\n                    var r = Math.sqrt(dx * dx + dy * dy);\n                    context.moveTo(x1 + r, y1);\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n                    ++i;\n                    break;\n                case CanvasInstruction.CLOSE_PATH:\n                    context.closePath();\n                    ++i;\n                    break;\n                case CanvasInstruction.CUSTOM:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = instruction[2];\n                    var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n                    var renderer = instruction[4];\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\n                    state.geometry = geometry;\n                    state.feature = feature;\n                    if (!(i in coordinateCache)) {\n                        coordinateCache[i] = [];\n                    }\n                    var coords = coordinateCache[i];\n                    if (fn) {\n                        fn(pixelCoordinates, d, dd, 2, coords);\n                    }\n                    else {\n                        coords[0] = pixelCoordinates[d];\n                        coords[1] = pixelCoordinates[d + 1];\n                        coords.length = 2;\n                    }\n                    renderer(coords, state);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_IMAGE:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\n                    anchorX = /** @type {number} */ (instruction[4]);\n                    anchorY = /** @type {number} */ (instruction[5]);\n                    declutterGroups = featureCallback ? null : instruction[6];\n                    var height = /** @type {number} */ (instruction[7]);\n                    var opacity = /** @type {number} */ (instruction[8]);\n                    var originX = /** @type {number} */ (instruction[9]);\n                    var originY = /** @type {number} */ (instruction[10]);\n                    var rotateWithView = /** @type {boolean} */ (instruction[11]);\n                    var rotation = /** @type {number} */ (instruction[12]);\n                    var scale = /** @type {import(\"../../size.js\").Size} */ (instruction[13]);\n                    var width = /** @type {number} */ (instruction[14]);\n                    if (!image && instruction.length >= 19) {\n                        // create label images\n                        text = /** @type {string} */ (instruction[18]);\n                        textKey = /** @type {string} */ (instruction[19]);\n                        strokeKey = /** @type {string} */ (instruction[20]);\n                        fillKey = /** @type {string} */ (instruction[21]);\n                        var labelWithAnchor = this.drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey);\n                        image = labelWithAnchor.label;\n                        instruction[3] = image;\n                        var textOffsetX = /** @type {number} */ (instruction[22]);\n                        anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n                        instruction[4] = anchorX;\n                        var textOffsetY = /** @type {number} */ (instruction[23]);\n                        anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n                        instruction[5] = anchorY;\n                        height = image.height;\n                        instruction[7] = height;\n                        width = image.width;\n                        instruction[14] = width;\n                    }\n                    var geometryWidths = void 0;\n                    if (instruction.length > 24) {\n                        geometryWidths = /** @type {number} */ (instruction[24]);\n                    }\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\n                    if (instruction.length > 16) {\n                        padding = /** @type {Array<number>} */ (instruction[15]);\n                        backgroundFill = /** @type {boolean} */ (instruction[16]);\n                        backgroundStroke = /** @type {boolean} */ (instruction[17]);\n                    }\n                    else {\n                        padding = defaultPadding;\n                        backgroundFill = false;\n                        backgroundStroke = false;\n                    }\n                    if (rotateWithView && viewRotationFromTransform) {\n                        // Canvas is expected to be rotated to reverse view rotation.\n                        rotation += viewRotation;\n                    }\n                    else if (!rotateWithView && !viewRotationFromTransform) {\n                        // Canvas is not rotated, images need to be rotated back to be north-up.\n                        rotation -= viewRotation;\n                    }\n                    var widthIndex = 0;\n                    var declutterGroupIndex = 0;\n                    for (; d < dd; d += 2) {\n                        if (geometryWidths &&\n                            geometryWidths[widthIndex++] < width / this.pixelRatio) {\n                            continue;\n                        }\n                        if (declutterGroups) {\n                            var index = Math.floor(declutterGroupIndex);\n                            declutterGroup =\n                                declutterGroups.length < index + 1\n                                    ? [declutterGroups[0][0]]\n                                    : declutterGroups[index];\n                        }\n                        var rendered = this.replayImageOrLabel_(context, contextScale, pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, backgroundFill\n                            ? /** @type {Array<*>} */ (lastFillInstruction)\n                            : null, backgroundStroke\n                            ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                            : null);\n                        if (rendered &&\n                            declutterGroup &&\n                            declutterGroups[declutterGroups.length - 1] !== declutterGroup) {\n                            declutterGroups.push(declutterGroup);\n                        }\n                        if (declutterGroup) {\n                            if (declutterGroup.length - 1 === declutterGroup[0]) {\n                                this.declutterItems.push(this, declutterGroup, feature);\n                            }\n                            declutterGroupIndex += 1 / declutterGroup[0];\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_CHARS:\n                    var begin = /** @type {number} */ (instruction[1]);\n                    var end = /** @type {number} */ (instruction[2]);\n                    var baseline = /** @type {number} */ (instruction[3]);\n                    declutterGroup = featureCallback ? null : instruction[4];\n                    var overflow = /** @type {number} */ (instruction[5]);\n                    fillKey = /** @type {string} */ (instruction[6]);\n                    var maxAngle = /** @type {number} */ (instruction[7]);\n                    var measurePixelRatio = /** @type {number} */ (instruction[8]);\n                    var offsetY = /** @type {number} */ (instruction[9]);\n                    strokeKey = /** @type {string} */ (instruction[10]);\n                    var strokeWidth = /** @type {number} */ (instruction[11]);\n                    text = /** @type {string} */ (instruction[12]);\n                    textKey = /** @type {string} */ (instruction[13]);\n                    var pixelRatioScale = [\n                        /** @type {number} */ (instruction[14]),\n                        /** @type {number} */ (instruction[14]),\n                    ];\n                    var textState = this.textStates[textKey];\n                    var font = textState.font;\n                    var textScale = [\n                        textState.scale[0] * measurePixelRatio,\n                        textState.scale[1] * measurePixelRatio,\n                    ];\n                    var cachedWidths = void 0;\n                    if (font in this.widths_) {\n                        cachedWidths = this.widths_[font];\n                    }\n                    else {\n                        cachedWidths = {};\n                        this.widths_[font] = cachedWidths;\n                    }\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n                    var textLength = Math.abs(textScale[0]) *\n                        measureAndCacheTextWidth(font, text, cachedWidths);\n                    if (overflow || textLength <= pathLength) {\n                        var textAlign = this.textStates[textKey].textAlign;\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, Math.abs(textScale[0]), measureAndCacheTextWidth, font, cachedWidths, viewRotationFromTransform ? 0 : this.viewRotation_);\n                        if (parts) {\n                            var rendered = false;\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\n                            if (strokeKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.createLabel(chars, textKey, '', strokeKey);\n                                    anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                                    anchorY =\n                                        baseline * label.height +\n                                            ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                                                textScale[0] -\n                                            offsetY;\n                                    rendered =\n                                        this.replayImageOrLabel_(context, contextScale, \n                                        /** @type {number} */ (part[0]), \n                                        /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                        /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null) || rendered;\n                                }\n                            }\n                            if (fillKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.createLabel(chars, textKey, fillKey, '');\n                                    anchorX = /** @type {number} */ (part[2]);\n                                    anchorY = baseline * label.height - offsetY;\n                                    rendered =\n                                        this.replayImageOrLabel_(context, contextScale, \n                                        /** @type {number} */ (part[0]), \n                                        /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                        /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null) || rendered;\n                                }\n                            }\n                            if (rendered) {\n                                this.declutterItems.push(this, declutterGroup, feature);\n                            }\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.END_GEOMETRY:\n                    if (featureCallback !== undefined) {\n                        feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                        var result = featureCallback(feature);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.FILL:\n                    if (batchSize) {\n                        pendingFill++;\n                    }\n                    else {\n                        this.fill_(context);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.MOVE_TO_LINE_TO:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    x = pixelCoordinates[d];\n                    y = pixelCoordinates[d + 1];\n                    roundX = (x + 0.5) | 0;\n                    roundY = (y + 0.5) | 0;\n                    if (roundX !== prevX || roundY !== prevY) {\n                        context.moveTo(x, y);\n                        prevX = roundX;\n                        prevY = roundY;\n                    }\n                    for (d += 2; d < dd; d += 2) {\n                        x = pixelCoordinates[d];\n                        y = pixelCoordinates[d + 1];\n                        roundX = (x + 0.5) | 0;\n                        roundY = (y + 0.5) | 0;\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n                            context.lineTo(x, y);\n                            prevX = roundX;\n                            prevY = roundY;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_FILL_STYLE:\n                    lastFillInstruction = instruction;\n                    this.alignFill_ = instruction[2];\n                    if (pendingFill) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                        if (pendingStroke) {\n                            context.stroke();\n                            pendingStroke = 0;\n                        }\n                    }\n                    context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_STROKE_STYLE:\n                    lastStrokeInstruction = instruction;\n                    if (pendingStroke) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n                    ++i;\n                    break;\n                case CanvasInstruction.STROKE:\n                    if (batchSize) {\n                        pendingStroke++;\n                    }\n                    else {\n                        context.stroke();\n                    }\n                    ++i;\n                    break;\n                default:\n                    ++i; // consume the instruction anyway, to avoid an infinite loop\n                    break;\n            }\n        }\n        if (pendingFill) {\n            this.fill_(context);\n        }\n        if (pendingStroke) {\n            context.stroke();\n        }\n        return undefined;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     */\n    Executor.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel) {\n        this.viewRotation_ = viewRotation;\n        this.execute_(context, contextScale, transform, this.instructions, snapToPixel, undefined, undefined);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T=} opt_featureCallback\n     *     Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, opt_featureCallback, opt_hitExtent) {\n        this.viewRotation_ = viewRotation;\n        return this.execute_(context, 1, transform, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n    };\n    return Executor;\n}());\nexport default Executor;\n//# sourceMappingURL=Executor.js.map","/**\n * @module ol/render/canvas/ExecutorGroup\n */\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { isEmpty } from '../../obj.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nvar ORDER = [\n    BuilderType.POLYGON,\n    BuilderType.CIRCLE,\n    BuilderType.LINE_STRING,\n    BuilderType.IMAGE,\n    BuilderType.TEXT,\n    BuilderType.DEFAULT,\n];\nvar ExecutorGroup = /** @class */ (function () {\n    /**\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n     * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\n     * should be set here, unless the target context does not exceet that extent (which\n     * can be the case when rendering to tiles).\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\n     * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Builder.js\").SerializableInstructions>>} allInstructions\n     * The serializable instructions.\n     * @param {number=} opt_renderBuffer Optional rendering buffer.\n     */\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, allInstructions, opt_renderBuffer) {\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overlaps_ = overlaps;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.renderBuffer_ = opt_renderBuffer;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n         */\n        this.executorsByZIndex_ = {};\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        this.hitDetectionContext_ = null;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        this.hitDetectionTransform_ = createTransform();\n        this.createExecutors_(allInstructions);\n    }\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    ExecutorGroup.prototype.clip = function (context, transform) {\n        var flatClipCoords = this.getClipCoords(transform);\n        context.beginPath();\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n        context.clip();\n    };\n    /**\n     * Create executors and populate them using the provided instructions.\n     * @private\n     * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Builder.js\").SerializableInstructions>>} allInstructions The serializable instructions\n     */\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n        for (var zIndex in allInstructions) {\n            var executors = this.executorsByZIndex_[zIndex];\n            if (executors === undefined) {\n                executors = {};\n                this.executorsByZIndex_[zIndex] = executors;\n            }\n            var instructionByZindex = allInstructions[zIndex];\n            var renderBuffer = [this.renderBuffer_ || 0, this.renderBuffer_ || 0];\n            for (var builderType in instructionByZindex) {\n                var instructions = instructionByZindex[builderType];\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, instructions, renderBuffer);\n            }\n        }\n    };\n    /**\n     * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n     * @return {boolean} Has executors of the provided types.\n     */\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\n        for (var zIndex in this.executorsByZIndex_) {\n            var candidates = this.executorsByZIndex_[zIndex];\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\n                if (executors[i] in candidates) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T} callback Feature callback.\n     * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, callback, declutteredFeatures) {\n        hitTolerance = Math.round(hitTolerance);\n        var contextSize = hitTolerance * 2 + 1;\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n        if (!this.hitDetectionContext_) {\n            this.hitDetectionContext_ = createCanvasContext2D(contextSize, contextSize);\n        }\n        var context = this.hitDetectionContext_;\n        if (context.canvas.width !== contextSize ||\n            context.canvas.height !== contextSize) {\n            context.canvas.width = contextSize;\n            context.canvas.height = contextSize;\n        }\n        else {\n            context.clearRect(0, 0, contextSize, contextSize);\n        }\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        var hitExtent;\n        if (this.renderBuffer_ !== undefined) {\n            hitExtent = createEmpty();\n            extendCoordinate(hitExtent, coordinate);\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n        }\n        var mask = getCircleArray(hitTolerance);\n        var builderType;\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function featureCallback(feature) {\n            var imageData = context.getImageData(0, 0, contextSize, contextSize)\n                .data;\n            for (var i_1 = 0; i_1 < contextSize; i_1++) {\n                for (var j_1 = 0; j_1 < contextSize; j_1++) {\n                    if (mask[i_1][j_1]) {\n                        if (imageData[(j_1 * contextSize + i_1) * 4 + 3] > 0) {\n                            var result_1 = void 0;\n                            if (!(declutteredFeatures &&\n                                (builderType == BuilderType.IMAGE ||\n                                    builderType == BuilderType.TEXT)) ||\n                                declutteredFeatures.indexOf(feature) !== -1) {\n                                result_1 = callback(feature);\n                            }\n                            if (result_1) {\n                                return result_1;\n                            }\n                            else {\n                                context.clearRect(0, 0, contextSize, contextSize);\n                                return undefined;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var i, j, executors, executor, result;\n        for (i = zs.length - 1; i >= 0; --i) {\n            var zIndexKey = zs[i].toString();\n            executors = this.executorsByZIndex_[zIndexKey];\n            for (j = ORDER.length - 1; j >= 0; --j) {\n                builderType = ORDER[j];\n                executor = executors[builderType];\n                if (executor !== undefined) {\n                    result = executor.executeHitDetection(context, transform, rotation, featureCallback, hitExtent);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @return {Array<number>} Clip coordinates.\n     */\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\n        var maxExtent = this.maxExtent_;\n        if (!maxExtent) {\n            return null;\n        }\n        var minX = maxExtent[0];\n        var minY = maxExtent[1];\n        var maxX = maxExtent[2];\n        var maxY = maxExtent[3];\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n        return flatClipCoords;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    ExecutorGroup.prototype.isEmpty = function () {\n        return isEmpty(this.executorsByZIndex_);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n     * @param {Array<import(\"./BuilderType.js\").default>=} opt_builderTypes Ordered replay types to replay.\n     *     Default is {@link module:ol/render/replay~ORDER}\n     * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n     */\n    ExecutorGroup.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_builderTypes, opt_declutterReplays) {\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        // setup clipping so that the parts of over-simplified geometries are not\n        // visible outside the current extent when panning\n        if (this.maxExtent_) {\n            context.save();\n            this.clip(context, transform);\n        }\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n        var i, ii, j, jj, replays, replay;\n        for (i = 0, ii = zs.length; i < ii; ++i) {\n            var zIndexKey = zs[i].toString();\n            replays = this.executorsByZIndex_[zIndexKey];\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n                var builderType = builderTypes[j];\n                replay = replays[builderType];\n                if (replay !== undefined) {\n                    if (opt_declutterReplays &&\n                        (builderType == BuilderType.IMAGE ||\n                            builderType == BuilderType.TEXT)) {\n                        var declutter = opt_declutterReplays[zIndexKey];\n                        if (!declutter) {\n                            opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n                        }\n                        else {\n                            declutter.push(replay, transform.slice(0));\n                        }\n                    }\n                    else {\n                        replay.execute(context, contextScale, transform, viewRotation, snapToPixel);\n                    }\n                }\n            }\n        }\n        if (this.maxExtent_) {\n            context.restore();\n        }\n    };\n    return ExecutorGroup;\n}());\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n    0: [[true]],\n};\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n    var i;\n    var radius = Math.floor(array.length / 2);\n    if (x >= radius) {\n        for (i = radius; i < x; i++) {\n            array[i][y] = true;\n        }\n    }\n    else if (x < radius) {\n        for (i = x + 1; i < radius; i++) {\n            array[i][y] = true;\n        }\n    }\n}\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n    if (circleArrayCache[radius] !== undefined) {\n        return circleArrayCache[radius];\n    }\n    var arraySize = radius * 2 + 1;\n    var arr = new Array(arraySize);\n    for (var i = 0; i < arraySize; i++) {\n        arr[i] = new Array(arraySize);\n    }\n    var x = radius;\n    var y = 0;\n    var error = 0;\n    while (x >= y) {\n        fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n        y++;\n        error += 1 + 2 * y;\n        if (2 * (error - x) + 1 > 0) {\n            x -= 1;\n            error += 1 - 2 * x;\n        }\n    }\n    circleArrayCache[radius] = arr;\n    return arr;\n}\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} opacity Opacity.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n * @param {Array<import(\"../../PluggableMap.js\").DeclutterItems>} declutterItems Declutter items.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, opacity, snapToPixel, declutterItems) {\n    var zs = Object.keys(declutterReplays)\n        .map(Number)\n        .sort(numberSafeCompareFunction);\n    for (var z = 0, zz = zs.length; z < zz; ++z) {\n        var executorData = declutterReplays[zs[z].toString()];\n        var currentExecutor = void 0;\n        for (var i = 0, ii = executorData.length; i < ii;) {\n            var executor = executorData[i++];\n            var transform = executorData[i++];\n            executor.execute(context, 1, transform, rotation, snapToPixel);\n            if (executor !== currentExecutor && executor.declutterItems.length > 0) {\n                currentExecutor = executor;\n                declutterItems.push({\n                    items: executor.declutterItems,\n                    opacity: opacity,\n                });\n            }\n        }\n    }\n}\nexport default ExecutorGroup;\n//# sourceMappingURL=ExecutorGroup.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1,\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, } from '../canvas.js';\nimport { equals } from '../../array.js';\nimport { intersects } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImmediateRenderer, _super);\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {number=} opt_squaredTolerance Optional squared tolerance for simplification.\n     * @param {import(\"../../proj.js\").TransformFunction=} opt_userTransform Transform from user to view projection.\n     */\n    function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation, opt_squaredTolerance, opt_userTransform) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context_ = context;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.transform_ = transform;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = viewRotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.squaredTolerance_ = opt_squaredTolerance;\n        /**\n         * @private\n         * @type {import(\"../../proj.js\").TransformFunction}\n         */\n        _this.userTransform_ = opt_userTransform;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.contextFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.contextStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.contextTextState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.fillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.strokeState_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorY_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageHeight_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOpacity_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.imageRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.imageScale_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageWidth_ = 0;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.textRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.textScale_ = [0, 0];\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = [];\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpLocalTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.image_) {\n            return;\n        }\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, 2, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var localTransform = this.tmpLocalTransform_;\n        var alpha = context.globalAlpha;\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha * this.imageOpacity_;\n        }\n        var rotation = this.imageRotation_;\n        if (this.imageRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n            var x = pixelCoordinates[i] - this.imageAnchorX_;\n            var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n            if (rotation !== 0 ||\n                this.imageScale_[0] != 1 ||\n                this.imageScale_[1] != 1) {\n                var centerX = x + this.imageAnchorX_;\n                var centerY = y + this.imageAnchorY_;\n                composeTransform(localTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n                context.setTransform.apply(context, localTransform);\n                context.translate(centerX, centerY);\n                context.scale(this.imageScale_[0], this.imageScale_[1]);\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, -this.imageAnchorX_, -this.imageAnchorY_, this.imageWidth_, this.imageHeight_);\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n            }\n        }\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha;\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.textState_ || this.text_ === '') {\n            return;\n        }\n        if (this.textFillState_) {\n            this.setContextFillState_(this.textFillState_);\n        }\n        if (this.textStrokeState_) {\n            this.setContextStrokeState_(this.textStrokeState_);\n        }\n        this.setContextTextState_(this.textState_);\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var rotation = this.textRotation_;\n        if (this.textRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (; offset < end; offset += stride) {\n            var x = pixelCoordinates[offset] + this.textOffsetX_;\n            var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n            if (rotation !== 0 ||\n                this.textScale_[0] != 1 ||\n                this.textScale_[1] != 1) {\n                var localTransform = composeTransform(this.tmpLocalTransform_, x, y, 1, 1, rotation, -x, -y);\n                context.setTransform.apply(context, localTransform);\n                context.translate(x, y);\n                context.scale(this.textScale_[0], this.textScale_[1]);\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, 0, 0);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, 0, 0);\n                }\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, x, y);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, x, y);\n                }\n            }\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} close Close.\n     * @private\n     * @return {number} end End.\n     */\n    CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n        var context = this.context_;\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n        var length = pixelCoordinates.length;\n        if (close) {\n            length -= 2;\n        }\n        for (var i = 2; i < length; i += 2) {\n            context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n        }\n        if (close) {\n            context.closePath();\n        }\n        return end;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n        }\n        return offset;\n    };\n    /**\n     * Render a circle geometry into the canvas.  Rendering is immediate and uses\n     * the current fill and stroke styles.\n     *\n     * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.fillState_ || this.strokeState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n            var dx = pixelCoordinates[2] - pixelCoordinates[0];\n            var dy = pixelCoordinates[3] - pixelCoordinates[1];\n            var radius = Math.sqrt(dx * dx + dy * dy);\n            var context = this.context_;\n            context.beginPath();\n            context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            this.drawText_(geometry.getCenter(), 0, 2, 2);\n        }\n    };\n    /**\n     * Set the rendering style.  Note that since this is an immediate rendering API,\n     * any `zIndex` on the provided style will be ignored.\n     *\n     * @param {import(\"../../style/Style.js\").default} style The rendering style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.setStyle = function (style) {\n        this.setFillStrokeStyle(style.getFill(), style.getStroke());\n        this.setImageStyle(style.getImage());\n        this.setTextStyle(style.getText());\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    CanvasImmediateRenderer.prototype.setTransform = function (transform) {\n        this.transform_ = transform;\n    };\n    /**\n     * Render a geometry into the canvas.  Call\n     * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n     *\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\n        var type = geometry.getType();\n        switch (type) {\n            case GeometryType.POINT:\n                this.drawPoint(\n                /** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n                break;\n            case GeometryType.LINE_STRING:\n                this.drawLineString(\n                /** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.POLYGON:\n                this.drawPolygon(\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POINT:\n                this.drawMultiPoint(\n                /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_LINE_STRING:\n                this.drawMultiLineString(\n                /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POLYGON:\n                this.drawMultiPolygon(\n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.GEOMETRY_COLLECTION:\n                this.drawGeometryCollection(\n                /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n                break;\n            case GeometryType.CIRCLE:\n                this.drawCircle(\n                /** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n                break;\n            default:\n        }\n    };\n    /**\n     * Render a feature into the canvas.  Note that any `zIndex` on the provided\n     * style will be ignored - features are rendered immediately in the order that\n     * this method is called.  If you need `zIndex` support, you should be using an\n     * {@link module:ol/layer/Vector~VectorLayer} instead.\n     *\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {import(\"../../style/Style.js\").default} style Style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\n        var geometry = style.getGeometryFunction()(feature);\n        if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        this.setStyle(style);\n        this.drawGeometry(geometry);\n    };\n    /**\n     * Render a GeometryCollection to the canvas.  Rendering is immediate and\n     * uses the current styles appropriate for each geometry in the collection.\n     *\n     * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n     */\n    CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            this.drawGeometry(geometries[i]);\n        }\n    };\n    /**\n     * Render a Point geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n     * uses the current style.\n     *\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a LineString into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            context.beginPath();\n            this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoint = geometry.getFlatMidpoint();\n            this.drawText_(flatMidpoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n     * and uses the current style.\n     *\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var geometryExtent = geometry.getExtent();\n        if (!intersects(this.extent_, geometryExtent)) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (geometry.getEnds());\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n            }\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoints = geometry.getFlatMidpoints();\n            this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n        }\n    };\n    /**\n     * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            context.beginPath();\n            this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, \n            /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoint = geometry.getFlatInteriorPoint();\n            this.drawText_(flatInteriorPoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n     * uses the current style.\n     * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            var flatCoordinates = geometry.getOrientedFlatCoordinates();\n            var offset = 0;\n            var endss = geometry.getEndss();\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var ends = endss[i];\n                offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n            }\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoints = geometry.getFlatInteriorPoints();\n            this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\n        var context = this.context_;\n        var contextFillState = this.contextFillState_;\n        if (!contextFillState) {\n            context.fillStyle = fillState.fillStyle;\n            this.contextFillState_ = {\n                fillStyle: fillState.fillStyle,\n            };\n        }\n        else {\n            if (contextFillState.fillStyle != fillState.fillStyle) {\n                contextFillState.fillStyle = fillState.fillStyle;\n                context.fillStyle = fillState.fillStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\n        var context = this.context_;\n        var contextStrokeState = this.contextStrokeState_;\n        if (!contextStrokeState) {\n            context.lineCap = strokeState.lineCap;\n            if (context.setLineDash) {\n                context.setLineDash(strokeState.lineDash);\n                context.lineDashOffset = strokeState.lineDashOffset;\n            }\n            context.lineJoin = strokeState.lineJoin;\n            context.lineWidth = strokeState.lineWidth;\n            context.miterLimit = strokeState.miterLimit;\n            context.strokeStyle = strokeState.strokeStyle;\n            this.contextStrokeState_ = {\n                lineCap: strokeState.lineCap,\n                lineDash: strokeState.lineDash,\n                lineDashOffset: strokeState.lineDashOffset,\n                lineJoin: strokeState.lineJoin,\n                lineWidth: strokeState.lineWidth,\n                miterLimit: strokeState.miterLimit,\n                strokeStyle: strokeState.strokeStyle,\n            };\n        }\n        else {\n            if (contextStrokeState.lineCap != strokeState.lineCap) {\n                contextStrokeState.lineCap = strokeState.lineCap;\n                context.lineCap = strokeState.lineCap;\n            }\n            if (context.setLineDash) {\n                if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n                    context.setLineDash((contextStrokeState.lineDash = strokeState.lineDash));\n                }\n                if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n                    contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n                contextStrokeState.lineJoin = strokeState.lineJoin;\n                context.lineJoin = strokeState.lineJoin;\n            }\n            if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n                contextStrokeState.lineWidth = strokeState.lineWidth;\n                context.lineWidth = strokeState.lineWidth;\n            }\n            if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n                contextStrokeState.miterLimit = strokeState.miterLimit;\n                context.miterLimit = strokeState.miterLimit;\n            }\n            if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n                contextStrokeState.strokeStyle = strokeState.strokeStyle;\n                context.strokeStyle = strokeState.strokeStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").TextState} textState Text state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\n        var context = this.context_;\n        var contextTextState = this.contextTextState_;\n        var textAlign = textState.textAlign\n            ? textState.textAlign\n            : defaultTextAlign;\n        if (!contextTextState) {\n            context.font = textState.font;\n            context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            this.contextTextState_ = {\n                font: textState.font,\n                textAlign: textAlign,\n                textBaseline: textState.textBaseline,\n            };\n        }\n        else {\n            if (contextTextState.font != textState.font) {\n                contextTextState.font = textState.font;\n                context.font = textState.font;\n            }\n            if (contextTextState.textAlign != textAlign) {\n                contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n                context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            }\n            if (contextTextState.textBaseline != textState.textBaseline) {\n                contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n                context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            }\n        }\n    };\n    /**\n     * Set the fill and stroke style for subsequent draw operations.  To clear\n     * either fill or stroke styles, pass null for the appropriate parameter.\n     *\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        if (!fillStyle) {\n            this.fillState_ = null;\n        }\n        else {\n            var fillStyleColor = fillStyle.getColor();\n            this.fillState_ = {\n                fillStyle: asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle),\n            };\n        }\n        if (!strokeStyle) {\n            this.strokeState_ = null;\n        }\n        else {\n            var strokeStyleColor = strokeStyle.getColor();\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            var strokeStyleWidth = strokeStyle.getWidth();\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            this.strokeState_ = {\n                lineCap: strokeStyleLineCap !== undefined\n                    ? strokeStyleLineCap\n                    : defaultLineCap,\n                lineDash: strokeStyleLineDash ? strokeStyleLineDash : defaultLineDash,\n                lineDashOffset: strokeStyleLineDashOffset\n                    ? strokeStyleLineDashOffset\n                    : defaultLineDashOffset,\n                lineJoin: strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin,\n                lineWidth: this.pixelRatio_ *\n                    (strokeStyleWidth !== undefined\n                        ? strokeStyleWidth\n                        : defaultLineWidth),\n                miterLimit: strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit,\n                strokeStyle: asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle),\n            };\n        }\n    };\n    /**\n     * Set the image style for subsequent draw operations.  Pass null to remove\n     * the image style.\n     *\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     */\n    CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\n        if (!imageStyle) {\n            this.image_ = null;\n        }\n        else {\n            var imageSize = imageStyle.getSize();\n            if (!imageSize) {\n                this.image_ = null;\n            }\n            else {\n                var imageAnchor = imageStyle.getAnchor();\n                // FIXME pixel ratio\n                var imageImage = imageStyle.getImage(1);\n                var imageOrigin = imageStyle.getOrigin();\n                var imageScale = imageStyle.getScaleArray();\n                this.imageAnchorX_ = imageAnchor[0];\n                this.imageAnchorY_ = imageAnchor[1];\n                this.imageHeight_ = imageSize[1];\n                this.image_ = imageImage;\n                this.imageOpacity_ = imageStyle.getOpacity();\n                this.imageOriginX_ = imageOrigin[0];\n                this.imageOriginY_ = imageOrigin[1];\n                this.imageRotateWithView_ = imageStyle.getRotateWithView();\n                this.imageRotation_ = imageStyle.getRotation();\n                this.imageScale_ = [\n                    this.pixelRatio_ * imageScale[0],\n                    this.pixelRatio_ * imageScale[1],\n                ];\n                this.imageWidth_ = imageSize[0];\n            }\n        }\n    };\n    /**\n     * Set the text style for subsequent draw operations.  Pass null to\n     * remove the text style.\n     *\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     */\n    CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                this.textFillState_ = null;\n            }\n            else {\n                var textFillStyleColor = textFillStyle.getColor();\n                this.textFillState_ = {\n                    fillStyle: asColorLike(textFillStyleColor ? textFillStyleColor : defaultFillStyle),\n                };\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                this.textStrokeState_ = null;\n            }\n            else {\n                var textStrokeStyleColor = textStrokeStyle.getColor();\n                var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n                var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n                var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n                var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n                var textStrokeStyleWidth = textStrokeStyle.getWidth();\n                var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n                this.textStrokeState_ = {\n                    lineCap: textStrokeStyleLineCap !== undefined\n                        ? textStrokeStyleLineCap\n                        : defaultLineCap,\n                    lineDash: textStrokeStyleLineDash\n                        ? textStrokeStyleLineDash\n                        : defaultLineDash,\n                    lineDashOffset: textStrokeStyleLineDashOffset\n                        ? textStrokeStyleLineDashOffset\n                        : defaultLineDashOffset,\n                    lineJoin: textStrokeStyleLineJoin !== undefined\n                        ? textStrokeStyleLineJoin\n                        : defaultLineJoin,\n                    lineWidth: textStrokeStyleWidth !== undefined\n                        ? textStrokeStyleWidth\n                        : defaultLineWidth,\n                    miterLimit: textStrokeStyleMiterLimit !== undefined\n                        ? textStrokeStyleMiterLimit\n                        : defaultMiterLimit,\n                    strokeStyle: asColorLike(textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle),\n                };\n            }\n            var textFont = textStyle.getFont();\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            var textScale = textStyle.getScaleArray();\n            var textText = textStyle.getText();\n            var textTextAlign = textStyle.getTextAlign();\n            var textTextBaseline = textStyle.getTextBaseline();\n            this.textState_ = {\n                font: textFont !== undefined ? textFont : defaultFont,\n                textAlign: textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n                textBaseline: textTextBaseline !== undefined\n                    ? textTextBaseline\n                    : defaultTextBaseline,\n            };\n            this.text_ = textText !== undefined ? textText : '';\n            this.textOffsetX_ =\n                textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n            this.textOffsetY_ =\n                textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n            this.textRotateWithView_ =\n                textRotateWithView !== undefined ? textRotateWithView : false;\n            this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n            this.textScale_ = [\n                this.pixelRatio_ * textScale[0],\n                this.pixelRatio_ * textScale[1],\n            ];\n        }\n    };\n    return CanvasImmediateRenderer;\n}(VectorContext));\nexport default CanvasImmediateRenderer;\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Anchor is a fraction\n     * @api\n     */\n    FRACTION: 'fraction',\n    /**\n     * Anchor is in pixels\n     * @api\n     */\n    PIXELS: 'pixels',\n};\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/IconOrigin\n */\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Origin is at bottom left\n     * @api\n     */\n    BOTTOM_LEFT: 'bottom-left',\n    /**\n     * Origin is at bottom right\n     * @api\n     */\n    BOTTOM_RIGHT: 'bottom-right',\n    /**\n     * Origin is at top left\n     * @api\n     */\n    TOP_LEFT: 'top-left',\n    /**\n     * Origin is at top right\n     * @api\n     */\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=IconOrigin.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n         * @type {!Object<string, import(\"./IconImage.js\").default>}\n         * @private\n         */\n        this.cache_ = {};\n        /**\n         * @type {number}\n         * @private\n         */\n        this.cacheSize_ = 0;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @return {import(\"./IconImage.js\").default} Icon image.\n     */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n     */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n     * Set the cache size of the icon cache. Default is `32`. Change this value when\n     * your map uses more than 32 different icon images and you are not caching icon\n     * styles on the application level.\n     * @param {number} maxCacheSize Cache max size.\n     * @api\n     */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * @abstract\n */\nvar ImageBase = /** @class */ (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./ImageState.js\").default} state State.\n     */\n    function ImageBase(extent, resolution, pixelRatio, state) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @protected\n         * @type {number|undefined}\n         */\n        _this.resolution = resolution;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    ImageBase.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    ImageBase.prototype.getExtent = function () {\n        return this.extent;\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    ImageBase.prototype.getImage = function () {\n        return abstract();\n    };\n    /**\n     * @return {number} PixelRatio.\n     */\n    ImageBase.prototype.getPixelRatio = function () {\n        return this.pixelRatio_;\n    };\n    /**\n     * @return {number} Resolution.\n     */\n    ImageBase.prototype.getResolution = function () {\n        return /** @type {number} */ (this.resolution);\n    };\n    /**\n     * @return {import(\"./ImageState.js\").default} State.\n     */\n    ImageBase.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageBase.prototype.load = function () {\n        abstract();\n    };\n    return ImageBase;\n}(EventTarget));\nexport default ImageBase;\n//# sourceMappingURL=ImageBase.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { IMAGE_DECODE } from './has.js';\nimport { getHeight } from './extent.js';\nimport { listenOnce, unlistenByKey } from './events.js';\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */ (function (_super) {\n    __extends(ImageWrapper, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {LoadFunction} imageLoadFunction Image load function.\n     */\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = ImageState.IDLE;\n        /**\n         * @private\n         * @type {LoadFunction}\n         */\n        _this.imageLoadFunction_ = imageLoadFunction;\n        return _this;\n    }\n    /**\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageWrapper.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageError_ = function () {\n        this.state = ImageState.ERROR;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageLoad_ = function () {\n        if (this.resolution === undefined) {\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        }\n        this.state = ImageState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @api\n     */\n    ImageWrapper.prototype.load = function () {\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.imageLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     */\n    ImageWrapper.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageWrapper;\n}(ImageBase));\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n    var img = /** @type {HTMLImageElement} */ (image);\n    if (img.src && IMAGE_DECODE) {\n        var promise = img.decode();\n        var listening_1 = true;\n        var unlisten = function () {\n            listening_1 = false;\n        };\n        promise\n            .then(function () {\n            if (listening_1) {\n                loadHandler();\n            }\n        })\n            .catch(function (error) {\n            if (listening_1) {\n                // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n                //        https://bugs.webkit.org/show_bug.cgi?id=198527\n                if (error.name === 'EncodingError' &&\n                    error.message === 'Invalid image type.') {\n                    loadHandler();\n                }\n                else {\n                    errorHandler();\n                }\n            }\n        });\n        return unlisten;\n    }\n    var listenerKeys = [\n        listenOnce(img, EventType.LOAD, loadHandler),\n        listenOnce(img, EventType.ERROR, errorHandler),\n    ];\n    return function unlisten() {\n        listenerKeys.forEach(unlistenByKey);\n    };\n}\nexport default ImageWrapper;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/IconImage\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\nimport { listenImage } from '../Image.js';\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar taintedTestContext = null;\nvar IconImage = /** @class */ (function (_super) {\n    __extends(IconImage, _super);\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n     * @param {string|undefined} src Src.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../ImageState.js\").default} imageState Image state.\n     * @param {import(\"../color.js\").Color} color Color.\n     */\n    function IconImage(image, src, size, crossOrigin, imageState, color) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = !image ? new Image() : image;\n        if (crossOrigin !== null) {\n            /** @type {HTMLImageElement} */ (_this.image_).crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {Object<number, HTMLCanvasElement>}\n         */\n        _this.canvas_ = {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = color;\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"../ImageState.js\").default}\n         */\n        _this.imageState_ = imageState;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = size;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         */\n        _this.tainted_;\n        return _this;\n    }\n    /**\n     * @private\n     * @return {boolean} The image canvas is tainted.\n     */\n    IconImage.prototype.isTainted_ = function () {\n        if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n            if (!taintedTestContext) {\n                taintedTestContext = createCanvasContext2D(1, 1);\n            }\n            taintedTestContext.drawImage(this.image_, 0, 0);\n            try {\n                taintedTestContext.getImageData(0, 0, 1, 1);\n                this.tainted_ = false;\n            }\n            catch (e) {\n                taintedTestContext = null;\n                this.tainted_ = true;\n            }\n        }\n        return this.tainted_ === true;\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.dispatchChangeEvent_ = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageError_ = function () {\n        this.imageState_ = ImageState.ERROR;\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageLoad_ = function () {\n        this.imageState_ = ImageState.LOADED;\n        if (this.size_) {\n            this.image_.width = this.size_[0];\n            this.image_.height = this.size_[1];\n        }\n        else {\n            this.size_ = [this.image_.width, this.image_.height];\n        }\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     */\n    IconImage.prototype.getImage = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Image or Canvas element.\n     */\n    IconImage.prototype.getPixelRatio = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? pixelRatio : 1;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    IconImage.prototype.getImageState = function () {\n        return this.imageState_;\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    IconImage.prototype.getHitDetectionImage = function () {\n        if (!this.hitDetectionImage_) {\n            if (this.isTainted_()) {\n                var width = this.size_[0];\n                var height = this.size_[1];\n                var context = createCanvasContext2D(width, height);\n                context.fillRect(0, 0, width, height);\n                this.hitDetectionImage_ = context.canvas;\n            }\n            else {\n                this.hitDetectionImage_ = this.image_;\n            }\n        }\n        return this.hitDetectionImage_;\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    IconImage.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {string|undefined} Image src.\n     */\n    IconImage.prototype.getSrc = function () {\n        return this.src_;\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    IconImage.prototype.load = function () {\n        if (this.imageState_ == ImageState.IDLE) {\n            this.imageState_ = ImageState.LOADING;\n            try {\n                /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n            }\n            catch (e) {\n                this.handleImageError_();\n            }\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @private\n     */\n    IconImage.prototype.replaceColor_ = function (pixelRatio) {\n        if (!this.color_ || this.canvas_[pixelRatio]) {\n            return;\n        }\n        var canvas = document.createElement('canvas');\n        this.canvas_[pixelRatio] = canvas;\n        canvas.width = Math.ceil(this.image_.width * pixelRatio);\n        canvas.height = Math.ceil(this.image_.height * pixelRatio);\n        var ctx = canvas.getContext('2d');\n        ctx.scale(pixelRatio, pixelRatio);\n        ctx.drawImage(this.image_, 0, 0);\n        if (this.isTainted_()) {\n            // If reading from the canvas throws a SecurityError the same effect can be\n            // achieved with globalCompositeOperation.\n            // This could be used as the default, but it is not fully supported by all\n            // browsers. E. g. Internet Explorer 11 does not support the multiply\n            // operation and the resulting image shape will be completelly filled with\n            // the provided color.\n            // So this is only used as a fallback. It is still better than having no icon\n            // at all.\n            var c = this.color_;\n            ctx.globalCompositeOperation = 'multiply';\n            ctx.fillStyle = 'rgb(' + c[0] + ',' + c[1] + ',' + c[2] + ')';\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n            ctx.globalCompositeOperation = 'destination-in';\n            ctx.drawImage(this.image_, 0, 0);\n            return;\n        }\n        var imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        var data = imgData.data;\n        var r = this.color_[0] / 255.0;\n        var g = this.color_[1] / 255.0;\n        var b = this.color_[2] / 255.0;\n        for (var i = 0, ii = data.length; i < ii; i += 4) {\n            data[i] *= r;\n            data[i + 1] *= g;\n            data[i + 2] *= b;\n        }\n        ctx.putImageData(imgData, 0, 0);\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    IconImage.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return IconImage;\n}(EventTarget));\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n    var iconImage = iconImageCache.get(src, crossOrigin, color);\n    if (!iconImage) {\n        iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n        iconImageCache.set(src, crossOrigin, color, iconImage);\n    }\n    return iconImage;\n}\nexport default IconImage;\n//# sourceMappingURL=IconImage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { assert } from '../asserts.js';\nimport { get as getIconImage } from './IconImage.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /** @class */ (function (_super) {\n    __extends(Icon, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Icon(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        /**\n         * @type {number}\n         */\n        var opacity = options.opacity !== undefined ? options.opacity : 1;\n        /**\n         * @type {number}\n         */\n        var rotation = options.rotation !== undefined ? options.rotation : 0;\n        /**\n         * @type {number|import(\"../size.js\").Size}\n         */\n        var scale = options.scale !== undefined ? options.scale : 1;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: opacity,\n            rotation: rotation,\n            scale: scale,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n            rotateWithView: rotateWithView,\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.normalizedAnchor_ = null;\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.anchorOrigin_ =\n            options.anchorOrigin !== undefined\n                ? options.anchorOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorXUnits_ =\n            options.anchorXUnits !== undefined\n                ? options.anchorXUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorYUnits_ =\n            options.anchorYUnits !== undefined\n                ? options.anchorYUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        var image = options.img !== undefined ? options.img : null;\n        /**\n         * @type {import(\"../size.js\").Size}\n         */\n        var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n        /**\n         * @type {string|undefined}\n         */\n        var src = options.src;\n        assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n        assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n        if ((src === undefined || src.length === 0) && image) {\n            src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n        }\n        assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n        /**\n         * @type {import(\"../ImageState.js\").default}\n         */\n        var imageState = options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = options.color !== undefined ? asArray(options.color) : null;\n        /**\n         * @private\n         * @type {import(\"./IconImage.js\").default}\n         */\n        _this.iconImage_ = getIconImage(image, \n        /** @type {string} */ (src), imgSize, _this.crossOrigin_, imageState, _this.color_);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.offsetOrigin_ =\n            options.offsetOrigin !== undefined\n                ? options.offsetOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = options.size !== undefined ? options.size : null;\n        return _this;\n    }\n    /**\n     * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n     * @return {Icon} The cloned style.\n     * @api\n     */\n    Icon.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Icon({\n            anchor: this.anchor_.slice(),\n            anchorOrigin: this.anchorOrigin_,\n            anchorXUnits: this.anchorXUnits_,\n            anchorYUnits: this.anchorYUnits_,\n            crossOrigin: this.crossOrigin_,\n            color: this.color_ && this.color_.slice\n                ? this.color_.slice()\n                : this.color_ || undefined,\n            src: this.getSrc(),\n            offset: this.offset_.slice(),\n            offsetOrigin: this.offsetOrigin_,\n            size: this.size_ !== null ? this.size_.slice() : undefined,\n            opacity: this.getOpacity(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n        });\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    Icon.prototype.getAnchor = function () {\n        if (this.normalizedAnchor_) {\n            return this.normalizedAnchor_;\n        }\n        var anchor = this.anchor_;\n        var size = this.getSize();\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n            this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n            if (!size) {\n                return null;\n            }\n            anchor = this.anchor_.slice();\n            if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[0] *= size[0];\n            }\n            if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[1] *= size[1];\n            }\n        }\n        if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n            if (!size) {\n                return null;\n            }\n            if (anchor === this.anchor_) {\n                anchor = this.anchor_.slice();\n            }\n            if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[0] = -anchor[0] + size[0];\n            }\n            if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[1] = -anchor[1] + size[1];\n            }\n        }\n        this.normalizedAnchor_ = anchor;\n        return this.normalizedAnchor_;\n    };\n    /**\n     * Set the anchor point. The anchor determines the center point for the\n     * symbolizer.\n     *\n     * @param {Array<number>} anchor Anchor.\n     * @api\n     */\n    Icon.prototype.setAnchor = function (anchor) {\n        this.anchor_ = anchor;\n        this.normalizedAnchor_ = null;\n    };\n    /**\n     * Get the icon color.\n     * @return {import(\"../color.js\").Color} Color.\n     * @api\n     */\n    Icon.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    Icon.prototype.getImage = function (pixelRatio) {\n        return this.iconImage_.getImage(pixelRatio);\n    };\n    /**\n     * Get the pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} The pixel ration of the image.\n     * @api\n     */\n    Icon.prototype.getPixelRatio = function (pixelRatio) {\n        return this.iconImage_.getPixelRatio(pixelRatio);\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    Icon.prototype.getImageSize = function () {\n        return this.iconImage_.getSize();\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    Icon.prototype.getHitDetectionImageSize = function () {\n        return this.getImageSize();\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    Icon.prototype.getImageState = function () {\n        return this.iconImage_.getImageState();\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    Icon.prototype.getHitDetectionImage = function () {\n        return this.iconImage_.getHitDetectionImage();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    Icon.prototype.getOrigin = function () {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        var offset = this.offset_;\n        var displacement = this.getDisplacement();\n        if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n            var size = this.getSize();\n            var iconImageSize = this.iconImage_.getSize();\n            if (!size || !iconImageSize) {\n                return null;\n            }\n            offset = offset.slice();\n            if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[0] = iconImageSize[0] - size[0] - offset[0];\n            }\n            if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[1] = iconImageSize[1] - size[1] - offset[1];\n            }\n        }\n        offset[0] += displacement[0];\n        offset[1] += displacement[1];\n        this.origin_ = offset;\n        return this.origin_;\n    };\n    /**\n     * Get the image URL.\n     * @return {string|undefined} Image src.\n     * @api\n     */\n    Icon.prototype.getSrc = function () {\n        return this.iconImage_.getSrc();\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     * @api\n     */\n    Icon.prototype.getSize = function () {\n        return !this.size_ ? this.iconImage_.getSize() : this.size_;\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.listenImageChange = function (listener) {\n        this.iconImage_.addEventListener(EventType.CHANGE, listener);\n    };\n    /**\n     * Load not yet loaded URI.\n     * When rendering a feature with an icon style, the vector renderer will\n     * automatically call this method. However, you might want to call this\n     * method yourself for preloading or other purposes.\n     * @api\n     */\n    Icon.prototype.load = function () {\n        this.iconImage_.load();\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.unlistenImageChange = function (listener) {\n        this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n    };\n    return Icon;\n}(ImageStyle));\nexport default Icon;\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport { getUid } from '../util.js';\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n    'Point': renderPointGeometry,\n    'LineString': renderLineStringGeometry,\n    'Polygon': renderPolygonGeometry,\n    'MultiPoint': renderMultiPointGeometry,\n    'MultiLineString': renderMultiLineStringGeometry,\n    'MultiPolygon': renderMultiPolygonGeometry,\n    'GeometryCollection': renderGeometryCollectionGeometry,\n    'Circle': renderCircleGeometry,\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n    var tolerance = getTolerance(resolution, pixelRatio);\n    return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n    return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        circleReplay.drawCircle(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, opt_transform) {\n    var loading = false;\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        var imageState = imageStyle.getImageState();\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n            imageStyle.unlistenImageChange(listener);\n        }\n        else {\n            if (imageState == ImageState.IDLE) {\n                imageStyle.load();\n            }\n            imageState = imageStyle.getImageState();\n            imageStyle.listenImageChange(listener);\n            loading = true;\n        }\n    }\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform);\n    return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n        return;\n    }\n    var simplifiedGeometry = geometry.simplifyTransformed(squaredTolerance, opt_transform);\n    var renderer = style.getRenderer();\n    if (renderer) {\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n    }\n    else {\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n    if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n        var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            renderGeometry(replayGroup, geometries[i], style, feature);\n        }\n        return;\n    }\n    var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n    replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n        geometryRenderer(replayGroup, geometries[i], style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawMultiLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (strokeStyle || fillStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawMultiPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawMultiPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n//# sourceMappingURL=vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup, { replayDeclutter, } from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport { apply, makeInverse, makeScale, toString as transformToString, } from '../../transform.js';\nimport { buffer, containsExtent, createEmpty, getWidth, intersects as intersectsExtent, wrapX as wrapExtentX, } from '../../extent.js';\nimport { createHitDetectionImageData, hitDetect, } from '../../render/canvas/hitdetect.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature, } from '../vector.js';\nimport { fromUserExtent, getTransformFromProjections, getUserProjection, toUserExtent, } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { wrapX as wrapCoordinateX } from '../../coordinate.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n     */\n    function CanvasVectorLayerRenderer(vectorLayer) {\n        var _this = _super.call(this, vectorLayer) || this;\n        /** @private */\n        _this.boundHandleStyleImageChange_ = _this.handleStyleImageChange_.bind(_this);\n        /**\n         * @type {boolean}\n         */\n        _this.animatingOrInteracting_;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @type {ImageData}\n         */\n        _this.hitDetectionImageData_ = null;\n        /**\n         * @type {Array<import(\"../../Feature.js\").default>}\n         */\n        _this.renderedFeatures_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRotation_;\n        /**\n         * @private\n         * @type {import(\"../../coordinate\").Coordinate}\n         */\n        _this.renderedCenter_ = null;\n        /**\n         * @private\n         * @type {import(\"../../proj/Projection\").default}\n         */\n        _this.renderedProjection_ = null;\n        /**\n         * @private\n         * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n         */\n        _this.renderedRenderOrder_ = null;\n        /**\n         * @private\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.replayGroup_ = null;\n        /**\n         * A new replay group had to be created by `prepareFrame()`\n         * @type {boolean}\n         */\n        _this.replayGroupChanged = true;\n        /**\n         * Clipping to be performed by `renderFrame()`\n         * @type {boolean}\n         */\n        _this.clipping = true;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {string} transform CSS Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasVectorLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        if (opacity < 1) {\n            target = null;\n        }\n        _super.prototype.useContainer.call(this, target, transform, opacity);\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var pixelRatio = frameState.pixelRatio;\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        // set forward and inverse pixel transforms\n        makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        var canvasTransform = transformToString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        var replayGroup = this.replayGroup_;\n        if (!replayGroup || replayGroup.isEmpty()) {\n            if (!this.containerReused && canvas.width > 0) {\n                canvas.width = 0;\n            }\n            return this.container;\n        }\n        // resize and clear\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        this.preRender(context, frameState);\n        var extent = frameState.extent;\n        var viewState = frameState.viewState;\n        var center = viewState.center;\n        var resolution = viewState.resolution;\n        var projection = viewState.projection;\n        var rotation = viewState.rotation;\n        var projectionExtent = projection.getExtent();\n        var vectorSource = this.getLayer().getSource();\n        // clipped rendering if layer extent is set\n        var clipped = false;\n        if (layerState.extent && this.clipping) {\n            var layerExtent = fromUserExtent(layerState.extent, projection);\n            clipped =\n                !containsExtent(layerExtent, frameState.extent) &&\n                    intersectsExtent(layerExtent, frameState.extent);\n            if (clipped) {\n                this.clipUnrotated(context, frameState, layerExtent);\n            }\n        }\n        var viewHints = frameState.viewHints;\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var transform = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, 0);\n        var declutterReplays = this.getLayer().getDeclutter() ? {} : null;\n        replayGroup.execute(context, 1, transform, rotation, snapToPixel, undefined, declutterReplays);\n        if (vectorSource.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)) {\n            var startX = extent[0];\n            var worldWidth = getWidth(projectionExtent);\n            var world = 0;\n            var offsetX = void 0;\n            while (startX < projectionExtent[0]) {\n                --world;\n                offsetX = worldWidth * world;\n                var transform_1 = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, offsetX);\n                replayGroup.execute(context, 1, transform_1, rotation, snapToPixel, undefined, declutterReplays);\n                startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n                ++world;\n                offsetX = worldWidth * world;\n                var transform_2 = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, offsetX);\n                replayGroup.execute(context, 1, transform_2, rotation, snapToPixel, undefined, declutterReplays);\n                startX -= worldWidth;\n            }\n        }\n        if (declutterReplays) {\n            var viewHints_1 = frameState.viewHints;\n            var hifi = !(viewHints_1[ViewHint.ANIMATING] || viewHints_1[ViewHint.INTERACTING]);\n            replayDeclutter(declutterReplays, context, rotation, 1, hifi, frameState.declutterItems);\n        }\n        if (clipped) {\n            context.restore();\n        }\n        this.postRender(context, frameState);\n        var opacity = layerState.opacity;\n        var container = this.container;\n        if (opacity !== parseFloat(container.style.opacity)) {\n            container.style.opacity = opacity === 1 ? '' : String(opacity);\n        }\n        if (this.renderedRotation_ !== viewState.rotation) {\n            this.renderedRotation_ = viewState.rotation;\n            this.hitDetectionImageData_ = null;\n        }\n        return this.container;\n    };\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n     */\n    CanvasVectorLayerRenderer.prototype.getFeatures = function (pixel) {\n        return new Promise(function (resolve, reject) {\n            if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n                var size = [this.context.canvas.width, this.context.canvas.height];\n                apply(this.pixelTransform, size);\n                var center = this.renderedCenter_;\n                var resolution = this.renderedResolution_;\n                var rotation = this.renderedRotation_;\n                var projection = this.renderedProjection_;\n                var extent = this.renderedExtent_;\n                var layer = this.getLayer();\n                var transforms = [];\n                var width = size[0] / 2;\n                var height = size[1] / 2;\n                transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, 0).slice());\n                var source = layer.getSource();\n                var projectionExtent = projection.getExtent();\n                if (source.getWrapX() &&\n                    projection.canWrapX() &&\n                    !containsExtent(projectionExtent, extent)) {\n                    var startX = extent[0];\n                    var worldWidth = getWidth(projectionExtent);\n                    var world = 0;\n                    var offsetX = void 0;\n                    while (startX < projectionExtent[0]) {\n                        --world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, offsetX).slice());\n                        startX += worldWidth;\n                    }\n                    world = 0;\n                    startX = extent[2];\n                    while (startX > projectionExtent[2]) {\n                        ++world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, offsetX).slice());\n                        startX -= worldWidth;\n                    }\n                }\n                this.hitDetectionImageData_ = createHitDetectionImageData(size, transforms, this.renderedFeatures_, layer.getStyleFunction(), extent, resolution, rotation);\n            }\n            resolve(hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_));\n        }.bind(this));\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|void} Callback result.\n     * @template T\n     */\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) {\n        if (!this.replayGroup_) {\n            return undefined;\n        }\n        else {\n            var resolution = frameState.viewState.resolution;\n            var rotation = frameState.viewState.rotation;\n            var layer_1 = this.getLayer();\n            /** @type {!Object<string, boolean>} */\n            var features_1 = {};\n            var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, \n            /**\n             * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n             * @return {?} Callback result.\n             */\n            function (feature) {\n                var key = getUid(feature);\n                if (!(key in features_1)) {\n                    features_1[key] = true;\n                    return callback(feature, layer_1);\n                }\n            }, layer_1.getDeclutter() ? declutteredFeatures : null);\n            return result;\n        }\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     */\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.replayGroup_) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var vectorLayer = this.getLayer();\n        var vectorSource = vectorLayer.getSource();\n        if (!vectorSource) {\n            return false;\n        }\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n        if ((!this.dirty_ && !updateWhileAnimating && animating) ||\n            (!updateWhileInteracting && interacting)) {\n            this.animatingOrInteracting_ = true;\n            return true;\n        }\n        this.animatingOrInteracting_ = false;\n        var frameStateExtent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var resolution = viewState.resolution;\n        var pixelRatio = frameState.pixelRatio;\n        var vectorLayerRevision = vectorLayer.getRevision();\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n        if (vectorLayerRenderOrder === undefined) {\n            vectorLayerRenderOrder = defaultRenderOrder;\n        }\n        var center = viewState.center.slice();\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n        var loadExtents = [extent.slice()];\n        var projectionExtent = projection.getExtent();\n        if (vectorSource.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, frameState.extent)) {\n            // For the replay group, we need an extent that intersects the real world\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\n            // to +540°, we add at least 1 world width on each side of the projection\n            // extent. If the viewport is wider than the world, we need to add half of\n            // the viewport width to make sure we cover the whole viewport.\n            var worldWidth = getWidth(projectionExtent);\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n            extent[0] = projectionExtent[0] - gutter;\n            extent[2] = projectionExtent[2] + gutter;\n            wrapCoordinateX(center, projection);\n            var loadExtent = wrapExtentX(loadExtents[0], projection);\n            // If the extent crosses the date line, we load data for both edges of the worlds\n            if (loadExtent[0] < projectionExtent[0] &&\n                loadExtent[2] < projectionExtent[2]) {\n                loadExtents.push([\n                    loadExtent[0] + worldWidth,\n                    loadExtent[1],\n                    loadExtent[2] + worldWidth,\n                    loadExtent[3],\n                ]);\n            }\n            else if (loadExtent[0] > projectionExtent[0] &&\n                loadExtent[2] > projectionExtent[2]) {\n                loadExtents.push([\n                    loadExtent[0] - worldWidth,\n                    loadExtent[1],\n                    loadExtent[2] - worldWidth,\n                    loadExtent[3],\n                ]);\n            }\n        }\n        if (!this.dirty_ &&\n            this.renderedResolution_ == resolution &&\n            this.renderedRevision_ == vectorLayerRevision &&\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n            containsExtent(this.renderedExtent_, extent)) {\n            this.replayGroupChanged = false;\n            return true;\n        }\n        this.replayGroup_ = null;\n        this.dirty_ = false;\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio, vectorLayer.getDeclutter());\n        var userProjection = getUserProjection();\n        var userTransform;\n        if (userProjection) {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                vectorSource.loadFeatures(toUserExtent(loadExtents[i], projection), resolution, userProjection);\n            }\n            userTransform = getTransformFromProjections(userProjection, projection);\n        }\n        else {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n            }\n        }\n        var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        var render = function (feature) {\n            var styles;\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n            if (styleFunction) {\n                styles = styleFunction(feature, resolution);\n            }\n            if (styles) {\n                var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup, userTransform);\n                this.dirty_ = this.dirty_ || dirty;\n            }\n        }.bind(this);\n        var userExtent = toUserExtent(extent, projection);\n        /** @type {Array<import(\"../../Feature.js\").default>} */\n        var features = vectorSource.getFeaturesInExtent(userExtent);\n        if (vectorLayerRenderOrder) {\n            features.sort(vectorLayerRenderOrder);\n        }\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            render(features[i]);\n        }\n        this.renderedFeatures_ = features;\n        var replayGroupInstructions = replayGroup.finish();\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), replayGroupInstructions, vectorLayer.getRenderBuffer());\n        this.renderedResolution_ = resolution;\n        this.renderedRevision_ = vectorLayerRevision;\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\n        this.renderedExtent_ = extent;\n        this.renderedCenter_ = center;\n        this.renderedProjection_ = projection;\n        this.replayGroup_ = executorGroup;\n        this.hitDetectionImageData_ = null;\n        this.replayGroupChanged = true;\n        return true;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {number} squaredTolerance Squared render tolerance.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n     * @param {import(\"../../proj.js\").TransformFunction=} opt_transform Transform from user to view projection.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, builderGroup, opt_transform) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading =\n                    renderFeature(builderGroup, feature, styles[i], squaredTolerance, this.boundHandleStyleImageChange_, opt_transform) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, squaredTolerance, this.boundHandleStyleImageChange_, opt_transform);\n        }\n        return loading;\n    };\n    return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasVectorLayerRenderer;\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/render/canvas/hitdetet\n */\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport { Icon } from '../../style.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { intersects } from '../../extent.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(size, transforms, features, styleFunction, extent, resolution, rotation) {\n    var width = size[0] / 2;\n    var height = size[1] / 2;\n    var context = createCanvasContext2D(width, height);\n    context.imageSmoothingEnabled = false;\n    var canvas = context.canvas;\n    var renderer = new CanvasImmediateRenderer(context, 0.5, extent, null, rotation);\n    var featureCount = features.length;\n    // Stretch hit detection index to use the whole available color range\n    var indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n    var featuresByZIndex = {};\n    for (var i = 1; i <= featureCount; ++i) {\n        var feature = features[i - 1];\n        var featureStyleFunction = feature.getStyleFunction() || styleFunction;\n        if (!styleFunction) {\n            continue;\n        }\n        var styles = featureStyleFunction(feature, resolution);\n        if (!styles) {\n            continue;\n        }\n        if (!Array.isArray(styles)) {\n            styles = [styles];\n        }\n        var index = i * indexFactor;\n        var color = '#' + ('000000' + index.toString(16)).slice(-6);\n        for (var j = 0, jj = styles.length; j < jj; ++j) {\n            var originalStyle = styles[j];\n            var style = originalStyle.clone();\n            var fill = style.getFill();\n            if (fill) {\n                fill.setColor(color);\n            }\n            var stroke = style.getStroke();\n            if (stroke) {\n                stroke.setColor(color);\n            }\n            style.setText(undefined);\n            var image = originalStyle.getImage();\n            if (image) {\n                var imgSize = image.getImageSize();\n                if (!imgSize) {\n                    continue;\n                }\n                var canvas_1 = document.createElement('canvas');\n                canvas_1.width = imgSize[0];\n                canvas_1.height = imgSize[1];\n                var imgContext = canvas_1.getContext('2d', { alpha: false });\n                imgContext.fillStyle = color;\n                var img = imgContext.canvas;\n                imgContext.fillRect(0, 0, img.width, img.height);\n                var width_1 = imgSize ? imgSize[0] : img.width;\n                var height_1 = imgSize ? imgSize[1] : img.height;\n                var iconContext = createCanvasContext2D(width_1, height_1);\n                iconContext.drawImage(img, 0, 0);\n                style.setImage(new Icon({\n                    img: img,\n                    imgSize: imgSize,\n                    anchor: image.getAnchor(),\n                    anchorXUnits: IconAnchorUnits.PIXELS,\n                    anchorYUnits: IconAnchorUnits.PIXELS,\n                    offset: image.getOrigin(),\n                    size: image.getSize(),\n                    opacity: image.getOpacity(),\n                    scale: image.getScale(),\n                    rotation: image.getRotation(),\n                    rotateWithView: image.getRotateWithView(),\n                }));\n            }\n            var zIndex = Number(style.getZIndex());\n            var byGeometryType = featuresByZIndex[zIndex];\n            if (!byGeometryType) {\n                byGeometryType = {};\n                featuresByZIndex[zIndex] = byGeometryType;\n                byGeometryType[GeometryType.POLYGON] = [];\n                byGeometryType[GeometryType.CIRCLE] = [];\n                byGeometryType[GeometryType.LINE_STRING] = [];\n                byGeometryType[GeometryType.POINT] = [];\n            }\n            var geometry = style.getGeometryFunction()(feature);\n            if (geometry && intersects(extent, geometry.getExtent())) {\n                byGeometryType[geometry.getType().replace('Multi', '')].push(geometry, style);\n            }\n        }\n    }\n    var zIndexKeys = Object.keys(featuresByZIndex)\n        .map(Number)\n        .sort(numberSafeCompareFunction);\n    for (var i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n        var byGeometryType = featuresByZIndex[zIndexKeys[i]];\n        for (var type in byGeometryType) {\n            var geomAndStyle = byGeometryType[type];\n            for (var j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n                renderer.setStyle(geomAndStyle[j + 1]);\n                for (var k = 0, kk = transforms.length; k < kk; ++k) {\n                    renderer.setTransform(transforms[k]);\n                    renderer.drawGeometry(geomAndStyle[j]);\n                }\n            }\n        }\n    }\n    return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n    var resultFeatures = [];\n    if (imageData) {\n        var index = (Math.round(pixel[0] / 2) + Math.round(pixel[1] / 2) * imageData.width) *\n            4;\n        var r = imageData.data[index];\n        var g = imageData.data[index + 1];\n        var b = imageData.data[index + 2];\n        var i = b + 256 * (g + 256 * r);\n        var indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n        if (i && i % indexFactor === 0) {\n            resultFeatures.push(features[i / indexFactor - 1]);\n        }\n    }\n    return resultFeatures;\n}\n//# sourceMappingURL=hitdetect.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nvar VectorLayer = /** @class */ (function (_super) {\n    __extends(VectorLayer, _super);\n    /**\n     * @param {import(\"./BaseVector.js\").Options=} opt_options Options.\n     */\n    function VectorLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     */\n    VectorLayer.prototype.createRenderer = function () {\n        return new CanvasVectorLayerRenderer(this);\n    };\n    return VectorLayer;\n}(BaseVectorLayer));\nexport default VectorLayer;\n//# sourceMappingURL=Vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport { abstract } from './util.js';\nimport { easeIn } from './easing.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /** @class */ (function (_super) {\n    __extends(Tile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {Options=} opt_options Tile options.\n     */\n    function Tile(tileCoord, state, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.tileCoord = tileCoord;\n        /**\n         * @protected\n         * @type {import(\"./TileState.js\").default}\n         */\n        _this.state = state;\n        /**\n         * An \"interim\" tile for this tile. The interim tile may be used while this\n         * one is loading, for \"smooth\" transitions when changing params/dimensions\n         * on the source.\n         * @type {Tile}\n         */\n        _this.interimTile = null;\n        /**\n         * The tile is available at the highest possible resolution. Subclasses can\n         * set this to `false` initially. Tile load listeners will not be\n         * unregistered before this is set to `true` and a `#changed()` is called.\n         * @type {boolean}\n         */\n        _this.hifi = true;\n        /**\n         * A key assigned to the tile. This is used by the tile source to determine\n         * if this tile can effectively be used, or if a new tile should be created\n         * and this one be used as an interim tile for this new tile.\n         * @type {string}\n         */\n        _this.key = '';\n        /**\n         * The duration for the opacity transition.\n         * @type {number}\n         */\n        _this.transition_ =\n            options.transition === undefined ? 250 : options.transition;\n        /**\n         * Lookup of start times for rendering transitions.  If the start time is\n         * equal to -1, the transition is complete.\n         * @type {Object<string, number>}\n         */\n        _this.transitionStarts_ = {};\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    Tile.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Called by the tile cache when the tile is removed from the cache due to expiry\n     */\n    Tile.prototype.release = function () { };\n    /**\n     * @return {string} Key.\n     */\n    Tile.prototype.getKey = function () {\n        return this.key + '/' + this.tileCoord;\n    };\n    /**\n     * Get the interim tile most suitable for rendering using the chain of interim\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\n     * such tile exists, the original tile is returned.\n     * @return {!Tile} Best tile for rendering.\n     */\n    Tile.prototype.getInterimTile = function () {\n        if (!this.interimTile) {\n            //empty chain\n            return this;\n        }\n        var tile = this.interimTile;\n        // find the first loaded tile and return it. Since the chain is sorted in\n        // decreasing order of creation time, there is no need to search the remainder\n        // of the list (all those tiles correspond to older requests and will be\n        // cleaned up by refreshInterimChain)\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                // Show tile immediately instead of fading it in after loading, because\n                // the interim tile is in place already\n                this.transition_ = 0;\n                return tile;\n            }\n            tile = tile.interimTile;\n        } while (tile);\n        // we can not find a better tile\n        return this;\n    };\n    /**\n     * Goes through the chain of interim tiles and discards sections of the chain\n     * that are no longer relevant.\n     */\n    Tile.prototype.refreshInterimChain = function () {\n        if (!this.interimTile) {\n            return;\n        }\n        var tile = this.interimTile;\n        var prev = /** @type {Tile} */ (this);\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                //we have a loaded tile, we can discard the rest of the list\n                //we would could abort any LOADING tile request\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\n                tile.interimTile = null;\n                break;\n            }\n            else if (tile.getState() == TileState.LOADING) {\n                //keep this LOADING tile any loaded tiles later in the chain are\n                //older than this tile, so we're still interested in the request\n                prev = tile;\n            }\n            else if (tile.getState() == TileState.IDLE) {\n                //the head of the list is the most current tile, we don't need\n                //to start any other requests for this chain\n                prev.interimTile = tile.interimTile;\n            }\n            else {\n                prev = tile;\n            }\n            tile = prev.interimTile;\n        } while (tile);\n    };\n    /**\n     * Get the tile coordinate for this tile.\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n     * @api\n     */\n    Tile.prototype.getTileCoord = function () {\n        return this.tileCoord;\n    };\n    /**\n     * @return {import(\"./TileState.js\").default} State.\n     */\n    Tile.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n     * the tile queue and will block other requests.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @api\n     */\n    Tile.prototype.setState = function (state) {\n        if (this.state !== TileState.ERROR && this.state > state) {\n            throw new Error('Tile load sequence violation');\n        }\n        this.state = state;\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @abstract\n     * @api\n     */\n    Tile.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * Get the alpha value for rendering.\n     * @param {string} id An id for the renderer.\n     * @param {number} time The render frame time.\n     * @return {number} A number between 0 and 1.\n     */\n    Tile.prototype.getAlpha = function (id, time) {\n        if (!this.transition_) {\n            return 1;\n        }\n        var start = this.transitionStarts_[id];\n        if (!start) {\n            start = time;\n            this.transitionStarts_[id] = start;\n        }\n        else if (start === -1) {\n            return 1;\n        }\n        var delta = time - start + 1000 / 60; // avoid rendering at 0\n        if (delta >= this.transition_) {\n            return 1;\n        }\n        return easeIn(delta / this.transition_);\n    };\n    /**\n     * Determine if a tile is in an alpha transition.  A tile is considered in\n     * transition if tile.getAlpha() has not yet been called or has been called\n     * and returned 1.\n     * @param {string} id An id for the renderer.\n     * @return {boolean} The tile is in transition.\n     */\n    Tile.prototype.inTransition = function (id) {\n        if (!this.transition_) {\n            return false;\n        }\n        return this.transitionStarts_[id] !== -1;\n    };\n    /**\n     * Mark a transition as complete.\n     * @param {string} id An id for the renderer.\n     */\n    Tile.prototype.endTransition = function (id) {\n        if (this.transition_) {\n            this.transitionStarts_[id] = -1;\n        }\n    };\n    return Tile;\n}(EventTarget));\nexport default Tile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenImage } from './Image.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * @return {string} Key.\n     */\n    ImageTile.prototype.getKey = function () {\n        return this.src_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.tileLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/reproj\n */\nimport { IMAGE_SMOOTHING_DISABLED } from './source/common.js';\nimport { assign } from './obj.js';\nimport { containsCoordinate, createEmpty, extend, forEachCorner, getCenter, getHeight, getTopLeft, getWidth, } from './extent.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { getPointResolution, transform } from './proj.js';\nimport { solveLinearSystem } from './math.js';\nvar brokenDiagonalRendering_;\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(u1, v1);\n    ctx.lineTo(u2, v2);\n    ctx.closePath();\n    ctx.save();\n    ctx.clip();\n    ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n    ctx.restore();\n}\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n    // the values ought to be close to the rgba(210, 0, 0, 0.75)\n    return (Math.abs(data[offset * 4] - 210) > 2 ||\n        Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2);\n}\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n    if (brokenDiagonalRendering_ === undefined) {\n        var ctx = document.createElement('canvas').getContext('2d');\n        ctx.globalCompositeOperation = 'lighter';\n        ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n        drawTestTriangle(ctx, 4, 5, 4, 0);\n        drawTestTriangle(ctx, 4, 5, 0, 5);\n        var data = ctx.getImageData(0, 0, 3, 3).data;\n        brokenDiagonalRendering_ =\n            verifyBrokenDiagonalRendering(data, 0) ||\n                verifyBrokenDiagonalRendering(data, 4) ||\n                verifyBrokenDiagonalRendering(data, 8);\n    }\n    return brokenDiagonalRendering_;\n}\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(sourceProj, targetProj, targetExtent, targetResolution) {\n    var targetCenter = getCenter(targetExtent);\n    var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n        forEachCorner(targetExtent, function (corner) {\n            sourceResolution = calculateSourceResolution(sourceProj, targetProj, corner, targetResolution);\n            return isFinite(sourceResolution) && sourceResolution > 0;\n        });\n    }\n    return sourceResolution;\n}\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @param {object=} opt_contextOptions Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges, opt_contextOptions) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    assign(context, opt_contextOptions);\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    function pixelRound(value) {\n        return Math.round(value * pixelRatio) / pixelRatio;\n    }\n    context.globalCompositeOperation = 'lighter';\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution), Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution));\n    assign(stitchContext, opt_contextOptions);\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        // This test should never fail -- but it does. Need to find a fix the upstream condition\n        if (src.image.width > 0 && src.image.height > 0) {\n            stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n        }\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        // Make sure that everything is on pixel boundaries\n        var u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n        var v0 = pixelRound(-(target[0][1] - targetTopLeft[1]) / targetResolution);\n        var u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n        var v1 = pixelRound(-(target[1][1] - targetTopLeft[1]) / targetResolution);\n        var u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n        var v2 = pixelRound(-(target[2][1] - targetTopLeft[1]) / targetResolution);\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0],\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        if (isBrokenDiagonalRendering() ||\n            opt_contextOptions === IMAGE_SMOOTHING_DISABLED) {\n            // Make sure that all lines are horizontal or vertical\n            context.moveTo(u1, v1);\n            // This is the diagonal line. Do it in 4 steps\n            var steps = 4;\n            var ud = u0 - u1;\n            var vd = v0 - v1;\n            for (var step = 0; step < steps; step++) {\n                // Go horizontally\n                context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound((step * vd) / (steps - 1)));\n                // Go vertically\n                if (step != steps - 1) {\n                    context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound(((step + 1) * vd) / (steps - 1)));\n                }\n            }\n            // We are almost at u0r, v0r\n            context.lineTo(u2, v2);\n        }\n        else {\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n        }\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.globalCompositeOperation = 'source-over';\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getArea, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects, } from '../extent.js';\nimport { getTransform } from '../proj.js';\nimport { log2, modulo } from '../math.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold, opt_destinationResolution) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ =\n            this.sourceProj_.canWrapX() &&\n                !!maxSourceExtent &&\n                !!this.sourceProj_.getExtent() &&\n                getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n            ? getWidth(this.sourceProj_.getExtent())\n            : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent()\n            ? getWidth(this.targetProj_.getExtent())\n            : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        /*\n         * The maxSubdivision controls how many splittings of the target area can\n         * be done. The idea here is to do a linear mapping of the target areas\n         * but the actual overal reprojection (can be) extremely non-linear. The\n         * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n         * tile size. However this function is also called to remap canvas rendered\n         * layers which can be much larger. This calculation increases the maxSubdivision\n         * value by the right factor so that each 256x256 pixel area has\n         * MAX_SUBDIVISION divisions.\n         */\n        var maxSubdivision = MAX_SUBDIVISION +\n            (opt_destinationResolution\n                ? Math.max(0, Math.ceil(log2(getArea(targetExtent) /\n                    (opt_destinationResolution *\n                        opt_destinationResolution *\n                        256 *\n                        256))))\n                : 0);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, maxSubdivision);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) -\n                    leftBound_1 >\n                    this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [\n                        [triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]],\n                    ];\n                    if (newTriangle[0][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if (newTriangle[1][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if (newTriangle[2][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if (maxX - minX < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c],\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_\n            ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n            : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 &&\n            sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision =\n                    targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision =\n                    sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (isFinite(sourceQuadExtent[0]) &&\n                isFinite(sourceQuadExtent[1]) &&\n                isFinite(sourceQuadExtent[2]) &&\n                isFinite(sourceQuadExtent[3])) {\n                if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                    // whole quad outside source projection extent -> ignore\n                    return;\n                }\n            }\n        }\n        var isNotFinite = 0;\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) ||\n                !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) ||\n                !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) ||\n                !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) ||\n                !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    // It might be the case that only 1 of the points is infinite. In this case\n                    // we can draw a single triangle with the other three points\n                    isNotFinite =\n                        (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n                            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n                            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n                            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n                    if (isNotFinite != 1 &&\n                        isNotFinite != 2 &&\n                        isNotFinite != 4 &&\n                        isNotFinite != 8) {\n                        return;\n                    }\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) /\n                        2;\n                    dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        // Exactly zero or one of *Src is not finite\n        // The triangles must have the diagonal line as the first side\n        // This is to allow easy code in reproj.s to make it straight for broken\n        // browsers that can't handle diagonal clipping\n        if ((isNotFinite & 0xb) == 0) {\n            this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        }\n        if ((isNotFinite & 0xe) == 0) {\n            this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n        }\n        if (isNotFinite) {\n            // Try the other two triangles\n            if ((isNotFinite & 0xd) == 0) {\n                this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n            }\n            if ((isNotFinite & 0x7) == 0) {\n                this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n            }\n        }\n    };\n    /**\n     * Calculates extent of the 'source' coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/source/common\n */\n/**\n * Default WMS version.\n * @type {string}\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport var IMAGE_SMOOTHING_DISABLED = {\n    imageSmoothingEnabled: false,\n    msImageSmoothingEnabled: false,\n};\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Tile\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport { calculateSourceExtentResolution, render as renderReprojected, } from '../reproj.js';\nimport { clamp } from '../math.js';\nimport { getArea, getIntersection } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /** @class */ (function (_super) {\n    __extends(ReprojTile, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n     * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} gutter Gutter of the source tiles.\n     * @param {FunctionType} getTileFunction\n     *     Function returning source tiles (z, x, y, pixelRatio).\n     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n     * @param {boolean=} opt_renderEdges Render reprojection edges.\n     * @param {object=} opt_contextOptions Properties to set on the canvas context.\n     */\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges, opt_contextOptions) {\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n        /**\n         * @private\n         * @type {object}\n         */\n        _this.contextOptions_ = opt_contextOptions;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = gutter;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.targetTileGrid_ = targetTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n        /**\n         * @private\n         * @type {!Array<import(\"../Tile.js\").default>}\n         */\n        _this.sourceTiles_ = [];\n        /**\n         * @private\n         * @type {?Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.sourcesListenerKeys_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourceZ_ = 0;\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\n        var limitedTargetExtent = maxTargetExtent\n            ? getIntersection(targetExtent, maxTargetExtent)\n            : targetExtent;\n        if (getArea(limitedTargetExtent) === 0) {\n            // Tile is completely outside range -> EMPTY\n            // TODO: is it actually correct that the source even creates the tile ?\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var sourceProjExtent = sourceProj.getExtent();\n        if (sourceProjExtent) {\n            if (!maxSourceExtent) {\n                maxSourceExtent = sourceProjExtent;\n            }\n            else {\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n            }\n        }\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\n        var sourceResolution = calculateSourceExtentResolution(sourceProj, targetProj, limitedTargetExtent, targetResolution);\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n            // invalid sourceResolution -> EMPTY\n            // probably edges of the projections when no extent is defined\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels, targetResolution);\n        if (_this.triangulation_.getTriangles().length === 0) {\n            // no valid triangles -> EMPTY\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\n        if (maxSourceExtent) {\n            if (sourceProj.canWrapX()) {\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n            }\n            else {\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n            }\n        }\n        if (!getArea(sourceExtent)) {\n            _this.state = TileState.EMPTY;\n        }\n        else {\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\n                    if (tile) {\n                        _this.sourceTiles_.push(tile);\n                    }\n                }\n            }\n            if (_this.sourceTiles_.length === 0) {\n                _this.state = TileState.EMPTY;\n            }\n        }\n        return _this;\n    }\n    /**\n     * Get the HTML Canvas element for this tile.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    ReprojTile.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.reproject_ = function () {\n        var sources = [];\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n            if (tile && tile.getState() == TileState.LOADED) {\n                sources.push({\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n                    image: tile.getImage(),\n                });\n            }\n        }.bind(this));\n        this.sourceTiles_.length = 0;\n        if (sources.length === 0) {\n            this.state = TileState.ERROR;\n        }\n        else {\n            var z = this.wrappedTileCoord_[0];\n            var size = this.targetTileGrid_.getTileSize(z);\n            var width = typeof size === 'number' ? size : size[0];\n            var height = typeof size === 'number' ? size : size[1];\n            var targetResolution = this.targetTileGrid_.getResolution(z);\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_, this.contextOptions_);\n            this.state = TileState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    ReprojTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            var leftToLoad_1 = 0;\n            this.sourcesListenerKeys_ = [];\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE || state == TileState.LOADING) {\n                    leftToLoad_1++;\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\n                        var state = tile.getState();\n                        if (state == TileState.LOADED ||\n                            state == TileState.ERROR ||\n                            state == TileState.EMPTY) {\n                            unlistenByKey(sourceListenKey_1);\n                            leftToLoad_1--;\n                            if (leftToLoad_1 === 0) {\n                                this.unlistenSources_();\n                                this.reproject_();\n                            }\n                        }\n                    }, this);\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\n                }\n            }.bind(this));\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE) {\n                    tile.load();\n                }\n            });\n            if (leftToLoad_1 === 0) {\n                setTimeout(this.reproject_.bind(this), 0);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.unlistenSources_ = function () {\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\n        this.sourcesListenerKeys_ = null;\n    };\n    return ReprojTile;\n}(Tile));\nexport default ReprojTile;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/structs/LRUCache\n */\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nvar LRUCache = /** @class */ (function () {\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        /**\n         * Desired max cache size after expireCache(). If set to 0, no cache entries\n         * will be pruned at all.\n         * @type {number}\n         */\n        this.highWaterMark =\n            opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.newest_ = null;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache<T>): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*=} opt_options Options (reserverd for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value,\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}());\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/tilecoord\n */\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n    if (opt_tileCoord !== undefined) {\n        opt_tileCoord[0] = z;\n        opt_tileCoord[1] = x;\n        opt_tileCoord[2] = y;\n        return opt_tileCoord;\n    }\n    else {\n        return [z, x, y];\n    }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n    return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n    return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n    var z = tileCoord[0];\n    var x = tileCoord[1];\n    var y = tileCoord[2];\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n        return false;\n    }\n    var extent = tileGrid.getExtent();\n    var tileRange;\n    if (!extent) {\n        tileRange = tileGrid.getFullTileRange(z);\n    }\n    else {\n        tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    }\n    if (!tileRange) {\n        return true;\n    }\n    else {\n        return tileRange.containsXY(x, y);\n    }\n}\n//# sourceMappingURL=tilecoord.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /** @class */ (function (_super) {\n    __extends(TileCache, _super);\n    function TileCache() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileCache.prototype.expireCache = function (usedTiles) {\n        while (this.canExpireCache()) {\n            var tile = this.peekLast();\n            if (tile.getKey() in usedTiles) {\n                break;\n            }\n            else {\n                this.pop().release();\n            }\n        }\n    };\n    /**\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\n     */\n    TileCache.prototype.pruneExceptNewestZ = function () {\n        if (this.getCount() === 0) {\n            return;\n        }\n        var key = this.peekFirstKey();\n        var tileCoord = fromKey(key);\n        var z = tileCoord[0];\n        this.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z) {\n                this.remove(getKey(tile.tileCoord));\n                tile.release();\n            }\n        }.bind(this));\n    };\n    return TileCache;\n}(LRUCache));\nexport default TileCache;\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror',\n};\n//# sourceMappingURL=TileEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ =\n            options.attributionsCollapsible !== undefined\n                ? options.attributionsCollapsible\n                : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {import(\"./State.js\").default}\n         */\n        _this.state_ =\n            options.state !== undefined ? options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {import(\"./State.js\").default} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    Source.prototype.getContextOptions = function () {\n        return undefined;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {import(\"./State.js\").default} state State.\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, { createOrUpdate as createOrUpdateTileRange, } from '../TileRange.js';\nimport { DEFAULT_TILE_SIZE } from './common.js';\nimport { assert } from '../asserts.js';\nimport { clamp } from '../math.js';\nimport { createOrUpdate, getTopLeft } from '../extent.js';\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\nimport { isSorted, linearFindNearest } from '../array.js';\nimport { toSize } from '../size.js';\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = /** @class */ (function () {\n    /**\n     * @param {Options} options Tile grid options.\n     */\n    function TileGrid(options) {\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n        /**\n         * @private\n         * @type {!Array<number>}\n         */\n        this.resolutions_ = options.resolutions;\n        assert(isSorted(this.resolutions_, function (a, b) {\n            return b - a;\n        }, true), 17); // `resolutions` must be sorted in descending order\n        // check if we've got a consistent zoom factor and origin\n        var zoomFactor;\n        if (!options.origins) {\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n                if (!zoomFactor) {\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n                }\n                else {\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n                        zoomFactor = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zoomFactor_ = zoomFactor;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.maxZoom = this.resolutions_.length - 1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        this.origin_ = options.origin !== undefined ? options.origin : null;\n        /**\n         * @private\n         * @type {Array<import(\"../coordinate.js\").Coordinate>}\n         */\n        this.origins_ = null;\n        if (options.origins !== undefined) {\n            this.origins_ = options.origins;\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n        }\n        var extent = options.extent;\n        if (extent !== undefined && !this.origin_ && !this.origins_) {\n            this.origin_ = getTopLeft(extent);\n        }\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\n        /**\n         * @private\n         * @type {Array<number|import(\"../size.js\").Size>}\n         */\n        this.tileSizes_ = null;\n        if (options.tileSizes !== undefined) {\n            this.tileSizes_ = options.tileSizes;\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n        }\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.tileSize_ =\n            options.tileSize !== undefined\n                ? options.tileSize\n                : !this.tileSizes_\n                    ? DEFAULT_TILE_SIZE\n                    : null;\n        assert((!this.tileSize_ && this.tileSizes_) ||\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = extent !== undefined ? extent : null;\n        /**\n         * @private\n         * @type {Array<import(\"../TileRange.js\").default>}\n         */\n        this.fullTileRanges_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.tmpSize_ = [0, 0];\n        if (options.sizes !== undefined) {\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n                return tileRange;\n            }, this);\n        }\n        else if (extent) {\n            this.calculateTileRanges_(extent);\n        }\n    }\n    /**\n     * Call a function with each tile coordinate for a given extent and zoom level.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} zoom Integer zoom level.\n     * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n                callback([zoom, i, j]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {boolean} Callback succeeded.\n     */\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\n        var tileRange, x, y;\n        var tileCoordExtent = null;\n        var z = tileCoord[0] - 1;\n        if (this.zoomFactor_ === 2) {\n            x = tileCoord[1];\n            y = tileCoord[2];\n        }\n        else {\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n        }\n        while (z >= this.minZoom) {\n            if (this.zoomFactor_ === 2) {\n                x = Math.floor(x / 2);\n                y = Math.floor(y / 2);\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n            }\n            else {\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n            }\n            if (callback(z, tileRange)) {\n                return true;\n            }\n            --z;\n        }\n        return false;\n    };\n    /**\n     * Get the extent for this tile grid, if it was configured.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the maximum zoom level for the grid.\n     * @return {number} Max zoom.\n     * @api\n     */\n    TileGrid.prototype.getMaxZoom = function () {\n        return this.maxZoom;\n    };\n    /**\n     * Get the minimum zoom level for the grid.\n     * @return {number} Min zoom.\n     * @api\n     */\n    TileGrid.prototype.getMinZoom = function () {\n        return this.minZoom;\n    };\n    /**\n     * Get the origin for the grid at the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {import(\"../coordinate.js\").Coordinate} Origin.\n     * @api\n     */\n    TileGrid.prototype.getOrigin = function (z) {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        else {\n            return this.origins_[z];\n        }\n    };\n    /**\n     * Get the resolution for the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {number} Resolution.\n     * @api\n     */\n    TileGrid.prototype.getResolution = function (z) {\n        return this.resolutions_[z];\n    };\n    /**\n     * Get the list of resolutions for the tile grid.\n     * @return {Array<number>} Resolutions.\n     * @api\n     */\n    TileGrid.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\n        if (tileCoord[0] < this.maxZoom) {\n            if (this.zoomFactor_ === 2) {\n                var minX = tileCoord[1] * 2;\n                var minY = tileCoord[2] * 2;\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n            }\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n        }\n        return null;\n    };\n    /**\n     * Get the extent for a tile range.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get a tile range for the given extent and integer zoom level.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\n        var tileCoord = tmpTileCoord;\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n        var minX = tileCoord[1];\n        var minY = tileCoord[2];\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n     */\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        return [\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n        ];\n    };\n    /**\n     * Get the extent of a tile coordinate.\n     *\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n        var maxX = minX + tileSize[0] * resolution;\n        var maxY = minY + tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get the tile coordinate for the given map coordinate and resolution.  This\n     * method considers that coordinates that intersect tile boundaries should be\n     * assigned the higher tile coordinate.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n    };\n    /**\n     * Note that this method should not be called for resolutions that correspond\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {number} resolution Resolution (for a non-integer zoom level).\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n        var z = this.getZForResolution(resolution);\n        var scale = resolution / this.getResolution(z);\n        var origin = this.getOrigin(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = (scale * xFromOrigin) / tileSize[0];\n        var tileCoordY = (scale * yFromOrigin) / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n     * they should have separate implementations.  This method is for integer zoom\n     * levels.  The other method should only be called for resolutions corresponding\n     * to non-integer zoom levels.\n     * @param {number} x Map x coordinate.\n     * @param {number} y Map y coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = xFromOrigin / tileSize[0];\n        var tileCoordY = yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Get a tile coordinate given a map coordinate and zoom level.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} z Zoom level.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {number} Tile resolution.\n     */\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\n        return this.resolutions_[tileCoord[0]];\n    };\n    /**\n     * Get the tile size for a zoom level. The type of the return value matches the\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n     * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n     * @param {number} z Z.\n     * @return {number|import(\"../size.js\").Size} Tile size.\n     * @api\n     */\n    TileGrid.prototype.getTileSize = function (z) {\n        if (this.tileSize_) {\n            return this.tileSize_;\n        }\n        else {\n            return this.tileSizes_[z];\n        }\n    };\n    /**\n     * @param {number} z Zoom level.\n     * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n     */\n    TileGrid.prototype.getFullTileRange = function (z) {\n        if (!this.fullTileRanges_) {\n            return null;\n        }\n        else {\n            return this.fullTileRanges_[z];\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number=} opt_direction If 0, the nearest resolution will be used.\n     *     If 1, the nearest lower resolution will be used. If -1, the nearest\n     *     higher resolution will be used. Default is 0.\n     * @return {number} Z.\n     * @api\n     */\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n        return clamp(z, this.minZoom, this.maxZoom);\n    };\n    /**\n     * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n     * @private\n     */\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\n        var length = this.resolutions_.length;\n        var fullTileRanges = new Array(length);\n        for (var z = this.minZoom; z < length; ++z) {\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n        }\n        this.fullTileRanges_ = fullTileRanges;\n    };\n    return TileGrid;\n}());\nexport default TileGrid;\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { METERS_PER_UNIT, get as getProjection } from './proj.js';\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth, } from './extent.js';\nimport { toSize } from './size.js';\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n    var tileGrid = projection.getDefaultTileGrid();\n    if (!tileGrid) {\n        tileGrid = createForProjection(projection);\n        projection.setDefaultTileGrid(tileGrid);\n    }\n    return tileGrid;\n}\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n    var z = tileCoord[0];\n    var center = tileGrid.getTileCoordCenter(tileCoord);\n    var projectionExtent = extentFromProjection(projection);\n    if (!containsCoordinate(projectionExtent, center)) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n        center[0] += worldWidth * worldsAway;\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\n    }\n    else {\n        return tileCoord;\n    }\n}\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n    return new TileGrid({\n        extent: extent,\n        origin: getCorner(extent, corner),\n        resolutions: resolutions,\n        tileSize: opt_tileSize,\n    });\n}\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n    var xyzOptions = opt_options || {};\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n    var gridOptions = {\n        extent: extent,\n        minZoom: xyzOptions.minZoom,\n        tileSize: xyzOptions.tileSize,\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize, xyzOptions.maxResolution),\n    };\n    return new TileGrid(gridOptions);\n}\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number=} opt_maxResolution Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize, opt_maxResolution) {\n    var maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n    var height = getHeight(extent);\n    var width = getWidth(extent);\n    var tileSize = toSize(opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE);\n    var maxResolution = opt_maxResolution > 0\n        ? opt_maxResolution\n        : Math.max(width / tileSize[0], height / tileSize[1]);\n    var length = maxZoom + 1;\n    var resolutions = new Array(length);\n    for (var z = 0; z < length; ++z) {\n        resolutions[z] = maxResolution / Math.pow(2, z);\n    }\n    return resolutions;\n}\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n    var extent = extentFromProjection(projection);\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n    projection = getProjection(projection);\n    var extent = projection.getExtent();\n    if (!extent) {\n        var half = (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n        extent = createOrUpdate(-half, -half, half, half);\n    }\n    return extent;\n}\n//# sourceMappingURL=tilegrid.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport { abstract } from '../util.js';\nimport { equivalent } from '../proj.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection, wrapX, } from '../tilegrid.js';\nimport { scale as scaleSize, toSize } from '../size.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ =\n            options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n        /**\n         * @protected\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var tileSize = [256, 256];\n        var tileGrid = options.tileGrid;\n        if (tileGrid) {\n            toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n        }\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(options.cacheSize || 0);\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = { transition: options.transition };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number}\n         */\n        _this.zDirection = options.zDirection ? options.zDirection : 0;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = callback(tile) !== false;\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @return {Array<number>} Resolutions.\n     */\n    TileSource.prototype.getResolutions = function () {\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        var thisProj = this.getProjection();\n        if (thisProj && !equivalent(thisProj, projection)) {\n            return null;\n        }\n        else {\n            return this.tileCache;\n        }\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ? opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Increases the cache size if needed\n     * @param {number} tileCount Minimum number of tiles needed.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.updateCacheSize = function (tileCount, projection) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCount > tileCache.highWaterMark) {\n            tileCache.highWaterMark = tileCount;\n        }\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n    var zRegEx = /\\{z\\}/g;\n    var xRegEx = /\\{x\\}/g;\n    var yRegEx = /\\{y\\}/g;\n    var dashYRegEx = /\\{-y\\}/g;\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            return template\n                .replace(zRegEx, tileCoord[0].toString())\n                .replace(xRegEx, tileCoord[1].toString())\n                .replace(yRegEx, tileCoord[2].toString())\n                .replace(dashYRegEx, function () {\n                var z = tileCoord[0];\n                var range = tileGrid.getFullTileRange(z);\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n                var y = range.getHeight() - tileCoord[2] - 1;\n                return y.toString();\n            });\n        }\n    });\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n    var len = templates.length;\n    var tileUrlFunctions = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n    }\n    return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n    if (tileUrlFunctions.length === 1) {\n        return tileUrlFunctions[0];\n    }\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var h = tileCoordHash(tileCoord);\n            var index = modulo(h, tileUrlFunctions.length);\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n        }\n    });\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n    var urls = [];\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n    if (match) {\n        // char range\n        var startCharCode = match[1].charCodeAt(0);\n        var stopCharCode = match[2].charCodeAt(0);\n        var charCode = void 0;\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n        }\n        return urls;\n    }\n    match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n    if (match) {\n        // number range\n        var stop_1 = parseInt(match[2], 10);\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n            urls.push(url.replace(match[0], i.toString()));\n        }\n        return urls;\n    }\n    urls.push(url);\n    return urls;\n}\n//# sourceMappingURL=tileurlfunction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileState from '../TileState.js';\nimport { createFromTemplates, expandUrl } from '../tileurlfunction.js';\nimport { getKeyZXY } from '../tilecoord.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ =\n            _this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        if (options.tileUrlFunction) {\n            _this.tileUrlFunction = options.tileUrlFunction.bind(_this);\n        }\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type =\n                tileState == TileState.ERROR\n                    ? TileEventType.TILELOADERROR\n                    : tileState == TileState.LOADED\n                        ? TileEventType.TILELOADEND\n                        : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string=} key Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = expandUrl(url);\n        this.urls = urls;\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    UrlTile.prototype.tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n        return undefined;\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { IMAGE_SMOOTHING_DISABLED } from './common.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction\n                ? options.tileLoadFunction\n                : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass =\n            options.tileClass !== undefined ? options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {object|undefined}\n         */\n        _this.contextOptions_ =\n            options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    TileImage.prototype.getContextOptions = function () {\n        return this.contextOptions_;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileImage.prototype.getKey = function () {\n        return (_super.prototype.getKey.call(this) +\n            (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : ''));\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n            }\n            return this.tileGridForProjection[projKey];\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord\n            ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n            : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n        return tile;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = cache.get(tileCoordKey);\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_, this.contextOptions_);\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options=} opt_options XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var projection = options.projection !== undefined ? options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined\n            ? options.tileGrid\n            : createXYZ({\n                extent: extentFromProjection(projection),\n                maxResolution: options.maxResolution,\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize,\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            imageSmoothing: options.imageSmoothing,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        return _this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/OSM\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport XYZ from './XYZ.js';\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n    '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n    'contributors.';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /** @class */ (function (_super) {\n    __extends(OSM, _super);\n    /**\n     * @param {Options=} [opt_options] Open Street Map options.\n     */\n    function OSM(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var attributions;\n        if (options.attributions !== undefined) {\n            attributions = options.attributions;\n        }\n        else {\n            attributions = [ATTRIBUTION];\n        }\n        var crossOrigin = options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n        var url = options.url !== undefined\n            ? options.url\n            : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n        _this = _super.call(this, {\n            attributions: attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: crossOrigin,\n            imageSmoothing: options.imageSmoothing,\n            opaque: options.opaque !== undefined ? options.opaque : true,\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            url: url,\n            wrapX: options.wrapX,\n            attributionsCollapsible: false,\n        }) || this;\n        return _this;\n    }\n    return OSM;\n}(XYZ));\nexport default OSM;\n//# sourceMappingURL=OSM.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove',\n};\n//# sourceMappingURL=CollectionEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {import(\"./CollectionEventType.js\").default} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number=} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush/rbush.js';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /** @class */ (function () {\n    /**\n     * @param {number=} opt_maxEntries Max entries.\n     */\n    function RBush(opt_maxEntries) {\n        /**\n         * @private\n         */\n        this.rbush_ = new RBush_(opt_maxEntries);\n        /**\n         * A mapping between the objects added to this rbush wrapper\n         * and the objects that are actually added to the internal rbush.\n         * @private\n         * @type {Object<string, Entry>}\n         */\n        this.items_ = {};\n    }\n    /**\n     * Insert a value into the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.insert = function (extent, value) {\n        /** @type {Entry} */\n        var item = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n            value: value,\n        };\n        this.rbush_.insert(item);\n        this.items_[getUid(value)] = item;\n    };\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n    RBush.prototype.load = function (extents, values) {\n        var items = new Array(values.length);\n        for (var i = 0, l = values.length; i < l; i++) {\n            var extent = extents[i];\n            var value = values[i];\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value,\n            };\n            items[i] = item;\n            this.items_[getUid(value)] = item;\n        }\n        this.rbush_.load(items);\n    };\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n    RBush.prototype.remove = function (value) {\n        var uid = getUid(value);\n        // get the object in which the value was wrapped when adding to the\n        // internal rbush. then use that object to do the removal.\n        var item = this.items_[uid];\n        delete this.items_[uid];\n        return this.rbush_.remove(item) !== null;\n    };\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.update = function (extent, value) {\n        var item = this.items_[getUid(value)];\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n        if (!equals(bbox, extent)) {\n            this.remove(value);\n            this.insert(extent, value);\n        }\n    };\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n    RBush.prototype.getAll = function () {\n        var items = this.rbush_.all();\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n    RBush.prototype.getInExtent = function (extent) {\n        /** @type {Entry} */\n        var bbox = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n        };\n        var items = this.rbush_.search(bbox);\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach = function (callback) {\n        return this.forEach_(this.getAll(), callback);\n    };\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEachInExtent = function (extent, callback) {\n        return this.forEach_(this.getInExtent(extent), callback);\n    };\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(T): *} callback Callback.\n     * @private\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach_ = function (values, callback) {\n        var result;\n        for (var i = 0, l = values.length; i < l; i++) {\n            result = callback(values[i]);\n            if (result) {\n                return result;\n            }\n        }\n        return result;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    RBush.prototype.isEmpty = function () {\n        return isEmpty(this.items_);\n    };\n    /**\n     * Remove all values from the RBush.\n     */\n    RBush.prototype.clear = function () {\n        this.rbush_.clear();\n        this.items_ = {};\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    RBush.prototype.getExtent = function (opt_extent) {\n        var data = this.rbush_.toJSON();\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n    };\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n    RBush.prototype.concat = function (rbush) {\n        this.rbush_.load(rbush.rbush_.all());\n        for (var i in rbush.items_) {\n            this.items_[i] = rbush.items_[i];\n        }\n    };\n    return RBush;\n}());\nexport default RBush;\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/VectorEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a feature is added to the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n     * @api\n     */\n    ADDFEATURE: 'addfeature',\n    /**\n     * Triggered when a feature is updated.\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n     * @api\n     */\n    CHANGEFEATURE: 'changefeature',\n    /**\n     * Triggered when the clear method is called on the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\n     * @api\n     */\n    CLEAR: 'clear',\n    /**\n     * Triggered when a feature is removed from the source.\n     * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n     * @api\n     */\n    REMOVEFEATURE: 'removefeature',\n};\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/loadingstrategy\n */\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n    return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n    return [extent];\n}\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n        var z = tileGrid.getZForResolution(resolution);\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /** @type {Array<import(\"./extent.js\").Extent>} */\n        var extents = [];\n        /** @type {import(\"./tilecoord.js\").TileCoord} */\n        var tileCoord = [z, 0, 0];\n        for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n            for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n                extents.push(tileGrid.getTileCoordExtent(tileCoord));\n            }\n        }\n        return extents;\n    });\n}\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/format/FormatType\n */\n/**\n * @enum {string}\n */\nexport default {\n    ARRAY_BUFFER: 'arraybuffer',\n    JSON: 'json',\n    TEXT: 'text',\n    XML: 'xml',\n};\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport { VOID } from './functions.js';\n/**\n *\n * @type {boolean}\n * @private\n */\nvar withCredentials = false;\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default): void} FeatureLoader\n * @api\n */\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent): void|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>): void} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default): void|function(this:import(\"./source/Vector\").default): void} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (extent, resolution, projection) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', typeof url === 'function' ? url(extent, resolution, projection) : url, true);\n        if (format.getType() == FormatType.ARRAY_BUFFER) {\n            xhr.responseType = 'arraybuffer';\n        }\n        xhr.withCredentials = withCredentials;\n        /**\n         * @param {Event} event Event.\n         * @private\n         */\n        xhr.onload = function (event) {\n            // status will be 0 for file:// urls\n            if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n                var type = format.getType();\n                /** @type {Document|Node|Object|string|undefined} */\n                var source = void 0;\n                if (type == FormatType.JSON || type == FormatType.TEXT) {\n                    source = xhr.responseText;\n                }\n                else if (type == FormatType.XML) {\n                    source = xhr.responseXML;\n                    if (!source) {\n                        source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n                    }\n                }\n                else if (type == FormatType.ARRAY_BUFFER) {\n                    source = /** @type {ArrayBuffer} */ (xhr.response);\n                }\n                if (source) {\n                    success.call(this, format.readFeatures(source, {\n                        extent: extent,\n                        featureProjection: projection,\n                    }), format.readProjection(source));\n                }\n                else {\n                    failure.call(this);\n                }\n            }\n            else {\n                failure.call(this);\n            }\n        }.bind(this);\n        /**\n         * @private\n         */\n        xhr.onerror = function () {\n            failure.call(this);\n        }.bind(this);\n        xhr.send();\n    });\n}\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n    return loadFeaturesXhr(url, format, \n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (features, dataProjection) {\n        var sourceOrTile = /** @type {?} */ (this);\n        if (typeof sourceOrTile.addFeatures === 'function') {\n            /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n        }\n    }, \n    /* FIXME handle error */ VOID);\n}\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n    withCredentials = xhrWithCredentials;\n}\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { assert } from '../asserts.js';\nimport { containsExtent, equals } from '../extent.js';\nimport { extend } from '../array.js';\nimport { getUid } from '../util.js';\nimport { getValues, isEmpty } from '../obj.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { xhr } from '../featureloader.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default<Geometry>=} opt_feature Feature.\n     */\n    function VectorSourceEvent(type, opt_feature) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The feature being added or removed.\n         * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options=} opt_options Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: undefined,\n            state: SourceState.READY,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, \n            /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ =\n            options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features by uid (using getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.uidIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features = options.features;\n        }\n        else if (options.features) {\n            collection = options.features;\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * Note: this also applies if an {@link module:ol/Collection} is used for features,\n     * meaning that if a feature with a duplicate id is added in the collection, it will\n     * be removed from it right away.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            if (this.featuresCollection_) {\n                this.featuresCollection_.remove(feature);\n            }\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this),\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        if (valid) {\n            assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n            this.uidIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n            this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        this.addEventListener(VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        this.addEventListener(VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        collection.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        collection.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.uidIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get all features on the source in random order.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray();\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * When `useSpatialIndex` is set to false, this method will return all\n     * features.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.getInExtent(extent);\n        }\n        else if (this.featuresCollection_) {\n            return this.featuresCollection_.getArray();\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>):boolean=} opt_filter Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get a feature by its internal unique identifier (using `getUid`).\n     *\n     * @param {string} uid Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n     */\n    VectorSource.prototype.getFeatureByUid = function (uid) {\n        var feature = this.uidIndex_[uid];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (this.idIndex_[sid] !== feature) {\n                this.removeFromIdIndex_(feature);\n                this.idIndex_[sid] = feature;\n            }\n        }\n        else {\n            this.removeFromIdIndex_(feature);\n            this.uidIndex_[featureKey] = feature;\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.uidIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution);\n        this.loading = false;\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection);\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n                this_1.loading = this_1.loader_ !== VOID;\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n    };\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        this.removeFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        delete this.uidIndex_[featureKey];\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport { toSize } from '../size.js';\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Text(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.font_ = options.font;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size|undefined}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.text_ = options.text;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textAlign_ = options.textAlign;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textBaseline_ = options.textBaseline;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ =\n            options.fill !== undefined\n                ? options.fill\n                : new Fill({ color: DEFAULT_FILL_COLOR });\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxAngle_ =\n            options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n        /**\n         * @private\n         * @type {import(\"./TextPlacement.js\").default|string}\n         */\n        this.placement_ =\n            options.placement !== undefined ? options.placement : TextPlacement.POINT;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overflow_ = !!options.overflow;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.backgroundFill_ = options.backgroundFill\n            ? options.backgroundFill\n            : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.backgroundStroke_ = options.backgroundStroke\n            ? options.backgroundStroke\n            : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.padding_ = options.padding === undefined ? null : options.padding;\n    }\n    /**\n     * Clones the style.\n     * @return {Text} The cloned style.\n     * @api\n     */\n    Text.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Text({\n            font: this.getFont(),\n            placement: this.getPlacement(),\n            maxAngle: this.getMaxAngle(),\n            overflow: this.getOverflow(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            text: this.getText(),\n            textAlign: this.getTextAlign(),\n            textBaseline: this.getTextBaseline(),\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            offsetX: this.getOffsetX(),\n            offsetY: this.getOffsetY(),\n            backgroundFill: this.getBackgroundFill()\n                ? this.getBackgroundFill().clone()\n                : undefined,\n            backgroundStroke: this.getBackgroundStroke()\n                ? this.getBackgroundStroke().clone()\n                : undefined,\n            padding: this.getPadding(),\n        });\n    };\n    /**\n     * Get the `overflow` configuration.\n     * @return {boolean} Let text overflow the length of the path they follow.\n     * @api\n     */\n    Text.prototype.getOverflow = function () {\n        return this.overflow_;\n    };\n    /**\n     * Get the font name.\n     * @return {string|undefined} Font.\n     * @api\n     */\n    Text.prototype.getFont = function () {\n        return this.font_;\n    };\n    /**\n     * Get the maximum angle between adjacent characters.\n     * @return {number} Angle in radians.\n     * @api\n     */\n    Text.prototype.getMaxAngle = function () {\n        return this.maxAngle_;\n    };\n    /**\n     * Get the label placement.\n     * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n     * @api\n     */\n    Text.prototype.getPlacement = function () {\n        return this.placement_;\n    };\n    /**\n     * Get the x-offset for the text.\n     * @return {number} Horizontal text offset.\n     * @api\n     */\n    Text.prototype.getOffsetX = function () {\n        return this.offsetX_;\n    };\n    /**\n     * Get the y-offset for the text.\n     * @return {number} Vertical text offset.\n     * @api\n     */\n    Text.prototype.getOffsetY = function () {\n        return this.offsetY_;\n    };\n    /**\n     * Get the fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Determine whether the text rotates with the map.\n     * @return {boolean|undefined} Rotate with map.\n     * @api\n     */\n    Text.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the text rotation.\n     * @return {number|undefined} Rotation.\n     * @api\n     */\n    Text.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the text scale.\n     * @return {number|import(\"../size.js\").Size|undefined} Scale.\n     * @api\n     */\n    Text.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    Text.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Get the text to be rendered.\n     * @return {string|undefined} Text.\n     * @api\n     */\n    Text.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Get the text alignment.\n     * @return {string|undefined} Text align.\n     * @api\n     */\n    Text.prototype.getTextAlign = function () {\n        return this.textAlign_;\n    };\n    /**\n     * Get the text baseline.\n     * @return {string|undefined} Text baseline.\n     * @api\n     */\n    Text.prototype.getTextBaseline = function () {\n        return this.textBaseline_;\n    };\n    /**\n     * Get the background fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getBackgroundFill = function () {\n        return this.backgroundFill_;\n    };\n    /**\n     * Get the background stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getBackgroundStroke = function () {\n        return this.backgroundStroke_;\n    };\n    /**\n     * Get the padding for the text.\n     * @return {Array<number>} Padding.\n     * @api\n     */\n    Text.prototype.getPadding = function () {\n        return this.padding_;\n    };\n    /**\n     * Set the `overflow` property.\n     *\n     * @param {boolean} overflow Let text overflow the path that it follows.\n     * @api\n     */\n    Text.prototype.setOverflow = function (overflow) {\n        this.overflow_ = overflow;\n    };\n    /**\n     * Set the font.\n     *\n     * @param {string|undefined} font Font.\n     * @api\n     */\n    Text.prototype.setFont = function (font) {\n        this.font_ = font;\n    };\n    /**\n     * Set the maximum angle between adjacent characters.\n     *\n     * @param {number} maxAngle Angle in radians.\n     * @api\n     */\n    Text.prototype.setMaxAngle = function (maxAngle) {\n        this.maxAngle_ = maxAngle;\n    };\n    /**\n     * Set the x offset.\n     *\n     * @param {number} offsetX Horizontal text offset.\n     * @api\n     */\n    Text.prototype.setOffsetX = function (offsetX) {\n        this.offsetX_ = offsetX;\n    };\n    /**\n     * Set the y offset.\n     *\n     * @param {number} offsetY Vertical text offset.\n     * @api\n     */\n    Text.prototype.setOffsetY = function (offsetY) {\n        this.offsetY_ = offsetY;\n    };\n    /**\n     * Set the text placement.\n     *\n     * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n     * @api\n     */\n    Text.prototype.setPlacement = function (placement) {\n        this.placement_ = placement;\n    };\n    /**\n     * Set whether to rotate the text with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    Text.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number|undefined} rotation Rotation.\n     * @api\n     */\n    Text.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n     * @api\n     */\n    Text.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n    };\n    /**\n     * Set the stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Set the text.\n     *\n     * @param {string|undefined} text Text.\n     * @api\n     */\n    Text.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Set the text alignment.\n     *\n     * @param {string|undefined} textAlign Text align.\n     * @api\n     */\n    Text.prototype.setTextAlign = function (textAlign) {\n        this.textAlign_ = textAlign;\n    };\n    /**\n     * Set the text baseline.\n     *\n     * @param {string|undefined} textBaseline Text baseline.\n     * @api\n     */\n    Text.prototype.setTextBaseline = function (textBaseline) {\n        this.textBaseline_ = textBaseline;\n    };\n    /**\n     * Set the background fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setBackgroundFill = function (fill) {\n        this.backgroundFill_ = fill;\n    };\n    /**\n     * Set the background stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setBackgroundStroke = function (stroke) {\n        this.backgroundStroke_ = stroke;\n    };\n    /**\n     * Set the padding (`[top, right, bottom, left]`).\n     *\n     * @param {!Array<number>} padding Padding.\n     * @api\n     */\n    Text.prototype.setPadding = function (padding) {\n        this.padding_ = padding;\n    };\n    return Text;\n}());\nexport default Text;\n//# sourceMappingURL=Text.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Feature\n */\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport EventType from './events/EventType.js';\nimport { assert } from './asserts.js';\nimport { listen, unlistenByKey } from './events.js';\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nvar Feature = /** @class */ (function (_super) {\n    __extends(Feature, _super);\n    /**\n     * @param {Geometry|Object<string, *>=} opt_geometryOrProperties\n     *     You may pass a Geometry object directly, or an object literal containing\n     *     properties. If you pass an object literal, you may include a Geometry\n     *     associated with a `geometry` key.\n     */\n    function Feature(opt_geometryOrProperties) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        _this.id_ = undefined;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.geometryName_ = 'geometry';\n        /**\n         * User provided style.\n         * @private\n         * @type {import(\"./style/Style.js\").StyleLike}\n         */\n        _this.style_ = null;\n        /**\n         * @private\n         * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n         */\n        _this.styleFunction_ = undefined;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.geometryChangeKey_ = null;\n        _this.addEventListener(getChangeEventType(_this.geometryName_), _this.handleGeometryChanged_);\n        if (opt_geometryOrProperties) {\n            if (typeof (\n            /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry) === 'function') {\n                var geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n                _this.setGeometry(geometry);\n            }\n            else {\n                /** @type {Object<string, *>} */\n                var properties = opt_geometryOrProperties;\n                _this.setProperties(properties);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Clone this feature. If the original feature has a geometry it\n     * is also cloned. The feature id is not set in the clone.\n     * @return {Feature} The clone.\n     * @api\n     */\n    Feature.prototype.clone = function () {\n        var clone = new Feature(this.hasProperties() ? this.getProperties() : null);\n        clone.setGeometryName(this.getGeometryName());\n        var geometry = this.getGeometry();\n        if (geometry) {\n            clone.setGeometry(geometry.clone());\n        }\n        var style = this.getStyle();\n        if (style) {\n            clone.setStyle(style);\n        }\n        return clone;\n    };\n    /**\n     * Get the feature's default geometry.  A feature may have any number of named\n     * geometries.  The \"default\" geometry (the one that is rendered by default) is\n     * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n     * @return {Geometry|undefined} The default geometry for the feature.\n     * @api\n     * @observable\n     */\n    Feature.prototype.getGeometry = function () {\n        return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is either set when reading data from a remote source or set explicitly by\n     * calling {@link module:ol/Feature~Feature#setId}.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Feature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * Get the name of the feature's default geometry.  By default, the default\n     * geometry is named `geometry`.\n     * @return {string} Get the property name associated with the default geometry\n     *     for this feature.\n     * @api\n     */\n    Feature.prototype.getGeometryName = function () {\n        return this.geometryName_;\n    };\n    /**\n     * Get the feature's style. Will return what was provided to the\n     * {@link module:ol/Feature~Feature#setStyle} method.\n     * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n     * @api\n     */\n    Feature.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the feature's style function.\n     * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n     * representing the current style of this feature.\n     * @api\n     */\n    Feature.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChanged_ = function () {\n        if (this.geometryChangeKey_) {\n            unlistenByKey(this.geometryChangeKey_);\n            this.geometryChangeKey_ = null;\n        }\n        var geometry = this.getGeometry();\n        if (geometry) {\n            this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * Set the default geometry for the feature.  This will update the property\n     * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n     * @param {Geometry|undefined} geometry The new geometry.\n     * @api\n     * @observable\n     */\n    Feature.prototype.setGeometry = function (geometry) {\n        this.set(this.geometryName_, geometry);\n    };\n    /**\n     * Set the style for the feature to override the layer style.  This can be a\n     * single style object, an array of styles, or a function that takes a\n     * resolution and returns an array of styles. To unset the feature style, call\n     * `setStyle()` without arguments or a falsey value.\n     * @param {import(\"./style/Style.js\").StyleLike=} opt_style Style for this feature.\n     * @api\n     * @fires module:ol/events/Event~BaseEvent#event:change\n     */\n    Feature.prototype.setStyle = function (opt_style) {\n        this.style_ = opt_style;\n        this.styleFunction_ = !opt_style\n            ? undefined\n            : createStyleFunction(opt_style);\n        this.changed();\n    };\n    /**\n     * Set the feature id.  The feature id is considered stable and may be used when\n     * requesting features or comparing identifiers returned from a remote source.\n     * The feature id can be used with the\n     * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n     * @param {number|string|undefined} id The feature id.\n     * @api\n     * @fires module:ol/events/Event~BaseEvent#event:change\n     */\n    Feature.prototype.setId = function (id) {\n        this.id_ = id;\n        this.changed();\n    };\n    /**\n     * Set the property name to be used when getting the feature's default geometry.\n     * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n     * this name will be returned.\n     * @param {string} name The property name of the default geometry.\n     * @api\n     */\n    Feature.prototype.setGeometryName = function (name) {\n        this.removeEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n        this.geometryName_ = name;\n        this.addEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n        this.handleGeometryChanged_();\n    };\n    return Feature;\n}(BaseObject));\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n    if (typeof obj === 'function') {\n        return obj;\n    }\n    else {\n        /**\n         * @type {Array<import(\"./style/Style.js\").default>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof ( /** @type {?} */(obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n            var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n            styles_1 = [style];\n        }\n        return function () {\n            return styles_1;\n        };\n    }\n}\nexport default Feature;\n//# sourceMappingURL=Feature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport { TRUE } from '../functions.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\nimport { getWidth } from '../extent.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { inView } from '../layer/Layer.js';\nimport { renderDeclutterItems } from '../render.js';\nimport { wrapX } from '../coordinate.js';\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        /**\n         * @private\n         */\n        _this.declutterTree_ = null;\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n     *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {?} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer) {\n            return callback.call(thisArg, feature, managed ? layer : null);\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = wrapX(coordinate.slice(), projection);\n        var offsets = [[0, 0]];\n        if (projection.canWrapX() && checkWrapped) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            offsets.push([-worldWidth, 0], [worldWidth, 0]);\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var declutteredFeatures;\n        if (this.declutterTree_) {\n            declutteredFeatures = this.declutterTree_.all().map(function (entry) {\n                return entry.value;\n            });\n        }\n        var tmpCoord = [];\n        for (var i = 0; i < offsets.length; i++) {\n            for (var j = numLayers - 1; j >= 0; --j) {\n                var layerState = layerStates[j];\n                var layer = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer);\n                if (layer.hasRenderer() &&\n                    inView(layerState, viewState) &&\n                    layerFilter.call(thisArg2, layer)) {\n                    var layerRenderer = layer.getRenderer();\n                    var source = layer.getSource();\n                    if (layerRenderer && source) {\n                        var coordinates = source.getWrapX()\n                            ? translatedCoordinate\n                            : coordinate;\n                        var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                        tmpCoord[0] = coordinates[0] + offsets[i][0];\n                        tmpCoord[1] = coordinates[1] + offsets[i][1];\n                        result = layerRenderer.forEachFeatureAtCoordinate(tmpCoord, frameState, hitTolerance, callback_1, declutteredFeatures);\n                    }\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, checkWrapped, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Render.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        this.declutterTree_ = renderDeclutterItems(frameState, this.declutterTree_);\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/render\n */\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport { apply as applyTransform, create as createTransform, multiply as multiplyTransform, scale as scaleTransform, } from './transform.js';\nimport { getSquaredTolerance } from './renderer/vector.js';\nimport { getTransformFromProjections, getUserProjection } from './proj.js';\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * var canvas = document.createElement('canvas');\n * var render = toContext(canvas.getContext('2d'),\n *     { size: [100, 100] });\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions=} opt_options Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, opt_options) {\n    var canvas = context.canvas;\n    var options = opt_options ? opt_options : {};\n    var pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n    var size = options.size;\n    if (size) {\n        canvas.width = size[0] * pixelRatio;\n        canvas.height = size[1] * pixelRatio;\n        canvas.style.width = size[0] + 'px';\n        canvas.style.height = size[1] + 'px';\n    }\n    var extent = [0, 0, canvas.width, canvas.height];\n    var transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n    return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @returns {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n    var frameState = event.frameState;\n    var transform = multiplyTransform(event.inversePixelTransform.slice(), frameState.coordinateToPixelTransform);\n    var squaredTolerance = getSquaredTolerance(frameState.viewState.resolution, frameState.pixelRatio);\n    var userTransform;\n    var userProjection = getUserProjection();\n    if (userProjection) {\n        userTransform = getTransformFromProjections(userProjection, frameState.viewState.projection);\n    }\n    return new CanvasImmediateRenderer(event.context, frameState.pixelRatio, frameState.extent, transform, frameState.viewState.rotation, squaredTolerance, userTransform);\n}\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @returns {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n    var result = pixel.slice(0);\n    applyTransform(event.inversePixelTransform.slice(), result);\n    return result;\n}\n/**\n * @param {import(\"./PluggableMap.js\").FrameState} frameState Frame state.\n * @param {?} declutterTree Declutter tree.\n * @returns {?} Declutter tree.\n */\nexport function renderDeclutterItems(frameState, declutterTree) {\n    if (declutterTree) {\n        declutterTree.clear();\n    }\n    var items = frameState.declutterItems;\n    for (var z = items.length - 1; z >= 0; --z) {\n        var item = items[z];\n        var zIndexItems = item.items;\n        for (var i = 0, ii = zIndexItems.length; i < ii; i += 3) {\n            declutterTree = zIndexItems[i].renderDeclutter(zIndexItems[i + 1], zIndexItems[i + 2], item.opacity, declutterTree);\n        }\n    }\n    items.length = 0;\n    return declutterTree;\n}\n//# sourceMappingURL=render.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { checkedFonts } from '../render/canvas.js';\nimport { inView } from '../layer/Layer.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { replaceChildren } from '../dom.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @type {import(\"../events.js\").EventsKey}\n         */\n        _this.fontChangeListenerKey_ = listen(checkedFonts, ObjectEventType.PROPERTYCHANGE, map.redrawText.bind(map));\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    CompositeMapRenderer.prototype.disposeInternal = function () {\n        unlistenByKey(this.fontChangeListenerKey_);\n        this.element_.parentNode.removeChild(this.element_);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Render.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n            return a.zIndex - b.zIndex;\n        });\n        var viewState = frameState.viewState;\n        this.children_.length = 0;\n        var previousElement = null;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            frameState.layerIndex = i;\n            if (!inView(layerState, viewState) ||\n                (layerState.sourceState != SourceState.READY &&\n                    layerState.sourceState != SourceState.UNDEFINED)) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState, previousElement);\n            if (!element) {\n                continue;\n            }\n            if (element !== previousElement) {\n                this.children_.push(element);\n                previousElement = element;\n            }\n        }\n        _super.prototype.renderFrame.call(this, frameState);\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (layer.hasRenderer() &&\n                inView(layerState, viewState) &&\n                layerFilter(layer)) {\n                var layerRenderer = layer.getRenderer();\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign, clear } from '../obj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { getIntersection } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers',\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        _this.addEventListener(getChangeEventType(Property.LAYERS), _this.handleLayersChanged_);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof ( /** @type {?} */(layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n            layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n        }\n        return states;\n    };\n    /**\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {EVENT} originalEvent Original event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserEvent(type, map, originalEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {EVENT}\n         * @api\n         */\n        _this.originalEvent = originalEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {?import(\"./pixel.js\").Pixel}\n         */\n        _this.pixel_ = null;\n        /**\n         * The coordinate in the user projection corresponding to the original browser event.\n         * @type {?import(\"./coordinate.js\").Coordinate}\n         */\n        _this.coordinate_ = null;\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    Object.defineProperty(MapBrowserEvent.prototype, \"pixel\", {\n        /**\n         * The map pixel relative to the viewport corresponding to the original event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        get: function () {\n            if (!this.pixel_) {\n                this.pixel_ = this.map.getEventPixel(this.originalEvent);\n            }\n            return this.pixel_;\n        },\n        set: function (pixel) {\n            this.pixel_ = pixel;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MapBrowserEvent.prototype, \"coordinate\", {\n        /**\n         * The coordinate corresponding to the original browser event.  This will be in the user\n         * projection if one is set.  Otherwise it will be in the view projection.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        get: function () {\n            if (!this.coordinate_) {\n                this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n            }\n            return this.coordinate_;\n        },\n        set: function (coordinate) {\n            this.coordinate_ = coordinate;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        this.originalEvent.preventDefault();\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        this.originalEvent.stopPropagation();\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport { DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS } from './has.js';\nimport { listen, unlistenByKey } from './events.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance\n            ? moveTolerance * DEVICE_PIXEL_RATIO\n            : DEVICE_PIXEL_RATIO;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        _this.element_ = element;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(element, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.originalPointerMoveEvent_;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(element, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        /**\n         * @private\n         */\n        _this.boundHandleTouchMove_ = _this.handleTouchMove_.bind(_this);\n        _this.element_.addEventListener(EventType.TOUCHMOVE, _this.boundHandleTouchMove_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n        return _this;\n    }\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.stopPropagation() or event.preventDefault().\n        if (!newEvent.propagationStopped &&\n            !this.dragging_ &&\n            this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        this.down_ = pointerEvent;\n        if (this.dragListenerKeys_.length === 0) {\n            this.dragListenerKeys_.push(listen(document, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(document, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.element_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n            if (this.element_.getRootNode &&\n                this.element_.getRootNode() !== document) {\n                this.dragListenerKeys_.push(listen(this.element_.getRootNode(), MapBrowserEventType.POINTERUP, this.handlePointerUp_, this));\n            }\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserEvent matches the PointerEvent type.\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        this.originalPointerMoveEvent_ = pointerEvent;\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * Flexible handling of a `touch-action: none` css equivalent: because calling\n     * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n     * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n     * when an interaction (currently `DragPan` handles the event.\n     * @param {TouchEvent} event Event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handleTouchMove_ = function (event) {\n        // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n        // may not be initialized yet when we get here on a platform without native pointer events.\n        if (!this.originalPointerMoveEvent_ ||\n            this.originalPointerMoveEvent_.defaultPrevented) {\n            event.preventDefault();\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return (this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) >\n                this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_);\n    };\n    /**\n     * Clean up.\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        this.element_.removeEventListener(EventType.TOUCHMOVE, this.boundHandleTouchMove_);\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        this.element_ = null;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(EventTarget));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view',\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < count >> 1) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count && priorities[rIndex] < priorities[lIndex]\n                ? rIndex\n                : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, { DROP } from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n        }) || this;\n        /** @private */\n        _this.boundHandleTileChange_ = _this.handleTileChange.bind(_this);\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @param {Array} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if ((tile.hifi && state === TileState.LOADED) ||\n            state === TileState.ERROR ||\n            state === TileState.EMPTY) {\n            tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading &&\n            newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(frameState, tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n        return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n        return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels between\n    // the center of the tile and the center of the viewport.  The factor of 65536\n    // means that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var center = frameState.viewState.center;\n    var deltaX = tileCenter[0] - center[0];\n    var deltaY = tileCenter[1] - center[1];\n    return (65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution);\n}\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation',\n};\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var minX = extent[0] + viewWidth / 2;\n            var maxX = extent[2] - viewWidth / 2;\n            var minY = extent[1] + viewHeight / 2;\n            var maxY = extent[3] - viewHeight / 2;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = (maxX + minX) / 2;\n                maxX = minX;\n            }\n            if (minY > maxY) {\n                minY = (maxY + minY) / 2;\n                maxY = minY;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x +=\n                    -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                        ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y +=\n                    -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                        ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { clamp } from './math.js';\nimport { getHeight, getWidth } from './extent.js';\nimport { linearFindNearest } from './array.js';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent=} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize, showFullExtent) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    if (showFullExtent) {\n        return Math.min(resolution, Math.max(xResolution, yResolution));\n    }\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *=\n        Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n            1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /=\n            Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n                ratio +\n                1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n                return resolutions[z + 1];\n            }\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var tolerance = 1e-9;\n            var minZoomLevel = Math.ceil(Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance);\n            var offset = -direction * (0.5 - tolerance) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var cappedZoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = (2 * Math.PI) / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { METERS_PER_UNIT, createProjection, fromUserCoordinate, fromUserExtent, getUserProjection, toUserCoordinate, toUserExtent, } from './proj.js';\nimport { VOID } from './functions.js';\nimport { add as addCoordinate, equals as coordinatesEqual, rotate as rotateCoordinate, } from './coordinate.js';\nimport { assert } from './asserts.js';\nimport { assign } from './obj.js';\nimport { none as centerNone, createExtent } from './centerconstraint.js';\nimport { clamp, modulo } from './math.js';\nimport { createMinMaxResolution } from './resolutionconstraint.js';\nimport { createSnapToN, createSnapToZero, disable, none as rotationNone, } from './rotationconstraint.js';\nimport { createSnapToPower, createSnapToResolutions, } from './resolutionconstraint.js';\nimport { easeOut } from './easing.js';\nimport { equals } from './coordinate.js';\nimport { getCenter, getForViewAndSize, getHeight, getWidth, isEmpty, } from './extent.js';\nimport { inAndOut } from './easing.js';\nimport { linearFindNearest } from './array.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean):void} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions=} opt_options View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./size.js\").Size}\n         */\n        _this.viewportSize_ = [100, 100];\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.cancelAnchor_ = undefined;\n        if (options.center) {\n            options.center = fromUserCoordinate(options.center, _this.projection_);\n        }\n        if (options.extent) {\n            options.extent = fromUserExtent(options.extent, _this.projection_);\n        }\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint,\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenterInternal(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenterInternal();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i) {\n            var options = arguments[i];\n            if (options.center) {\n                options = assign({}, options);\n                options.center = fromUserCoordinate(options.center, this.getProjection());\n            }\n            if (options.anchor) {\n                options = assign({}, options);\n                options.anchor = fromUserCoordinate(options.anchor, this.getProjection());\n            }\n            args[i] = options;\n        }\n        this.animateInternal.apply(this, args);\n    };\n    /**\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animateInternal = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 &&\n            typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        if (!this.isDef()) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[animationCount - 1];\n            if (state.center) {\n                this.setCenterInternal(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (var i = 0; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback,\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        var anchor;\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n            if (!anchor) {\n                for (var j = 0, jj = series.length; j < jj; ++j) {\n                    var animation = series[j];\n                    if (!animation.complete) {\n                        anchor = animation.anchor;\n                        break;\n                    }\n                }\n            }\n        }\n        this.animations_.length = 0;\n        this.cancelAnchor_ = anchor;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1\n                        ? animation.targetResolution\n                        : animation.sourceResolution +\n                            progress *\n                                (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getViewportSize_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined &&\n                    animation.targetRotation !== undefined) {\n                    var rotation = progress === 1\n                        ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                            Math.PI\n                        : animation.sourceRotation +\n                            progress *\n                                (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] -\n                (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n            var y = anchor[1] -\n                (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * Returns the current viewport size.\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getViewportSize_ = function (opt_rotation) {\n        var size = this.viewportSize_;\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            return [\n                Math.abs(w * Math.cos(opt_rotation)) +\n                    Math.abs(h * Math.sin(opt_rotation)),\n                Math.abs(w * Math.sin(opt_rotation)) +\n                    Math.abs(h * Math.cos(opt_rotation)),\n            ];\n        }\n        else {\n            return size;\n        }\n    };\n    /**\n     * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n     * to avoid performance hit and layout reflow.\n     * This should be done on map size change.\n     * Note: the constraints are not resolved during an animation to avoid stopping it\n     * @param {import(\"./size.js\").Size=} opt_size Viewport size; if undefined, [100, 100] is assumed\n     */\n    View.prototype.setViewportSize = function (opt_size) {\n        this.viewportSize_ = Array.isArray(opt_size)\n            ? opt_size.slice()\n            : [100, 100];\n        if (!this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        var center = this.getCenterInternal();\n        if (!center) {\n            return center;\n        }\n        return toUserCoordinate(center, this.getProjection());\n    };\n    /**\n     * Get the view center without transforming to user projection.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     */\n    View.prototype.getCenterInternal = function () {\n        return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @return {boolean} Resolution constraint is set\n     */\n    View.prototype.getConstrainResolution = function () {\n        return this.options_.constrainResolution;\n    };\n    /**\n     * @param {Array<number>=} opt_hints Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size\n     * of the map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var extent = this.calculateExtentInternal(opt_size);\n        return toUserExtent(extent, this.getProjection());\n    };\n    /**\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n     * first map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    View.prototype.calculateExtentInternal = function (opt_size) {\n        var size = opt_size || this.getViewportSize_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view shoud allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        return this.getResolutionForExtentInternal(fromUserExtent(extent, this.getProjection()), opt_size);\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     */\n    View.prototype.getResolutionForExtentInternal = function (extent, opt_size) {\n        var size = opt_size || this.getViewportSize_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var logPower = Math.log(opt_power || 2);\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / logPower;\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = Math.log(maxResolution / resolution) / logPower / max;\n            return value;\n        });\n    };\n    /**\n     * @return {State} View state.\n     */\n    View.prototype.getState = function () {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        var projection = this.getProjection();\n        var resolution = /** @type {number} */ (this.getResolution());\n        var rotation = this.getRotation();\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            rotation: rotation,\n            zoom: this.getZoom(),\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return (this.resolutions_[baseLevel] /\n                Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1)));\n        }\n        else {\n            return (this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_));\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions=} opt_options Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        var options = assign({ size: this.getViewportSize_() }, opt_options || {});\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) ||\n            typeof ( /** @type {?} */(geometryOrExtent).getSimplifiedGeometry) ===\n                'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            var extent = fromUserExtent(geometryOrExtent, this.getProjection());\n            geometry = polygonFromExtent(extent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            var extent = fromUserExtent(geometryOrExtent.getExtent(), this.getProjection());\n            geometry = polygonFromExtent(extent);\n            geometry.rotate(this.getRotation(), getCenter(extent));\n        }\n        else {\n            var userProjection = getUserProjection();\n            if (userProjection) {\n                geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n                    .clone()\n                    .transform(userProjection, this.getProjection()));\n            }\n            else {\n                geometry = geometryOrExtent;\n            }\n        }\n        this.fitInternal(geometry, options);\n    };\n    /**\n     * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n     * @param {FitOptions=} opt_options Options.\n     */\n    View.prototype.fitInternal = function (geometry, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getViewportSize_();\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var coords = geometry.getFlatCoordinates();\n        // calculate rotated extent\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        var stride = geometry.getStride();\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        // calculate resolution\n        var resolution = this.getResolutionForExtentInternal([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n        resolution = isNaN(resolution)\n            ? minResolution\n            : Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerRotX = (minRotX + maxRotX) / 2;\n        var centerRotY = (minRotY + maxRotY) / 2;\n        centerRotX += ((padding[1] - padding[3]) / 2) * resolution;\n        centerRotY += ((padding[0] - padding[2]) / 2) * resolution;\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n        var center = [centerX, centerY];\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animateInternal({\n                resolution: resolution,\n                center: this.getConstrainedCenter(center, resolution),\n                duration: options.duration,\n                easing: options.easing,\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        this.centerOnInternal(fromUserCoordinate(coordinate, this.getProjection()), size, position);\n    };\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     */\n    View.prototype.centerOnInternal = function (coordinate, size, position) {\n        // calculate rotated position\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n        var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n        var resolution = this.getResolution();\n        rotX += (size[0] / 2 - position[0]) * resolution;\n        rotY += (position[1] - size[1] / 2) * resolution;\n        // go back to original angle\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerX = rotX * cosAngle - rotY * sinAngle;\n        var centerY = rotY * cosAngle + rotX * sinAngle;\n        this.setCenterInternal([centerX, centerY]);\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenterInternal() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = toUserCoordinate(this.targetCenter_, this.getProjection());\n        this.setCenter([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     */\n    View.prototype.adjustCenterInternal = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenterInternal([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.adjustResolutionInternal(ratio, anchor);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.adjustResolutionInternal = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getViewportSize_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        if (opt_anchor) {\n            opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n        }\n        this.adjustRotationInternal(delta, opt_anchor);\n    };\n    /**\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     */\n    View.prototype.adjustRotationInternal = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n    };\n    /**\n     * Set the center using the view projection (not the user projection).\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     */\n    View.prototype.setCenterInternal = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {import(\"./ViewHint.js\").default} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving);\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) ||\n            !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n        this.cancelAnchor_ = undefined;\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number=} opt_duration The animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size);\n        if (duration === 0 && !this.cancelAnchor_) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        var anchor = opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n        this.cancelAnchor_ = undefined;\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenterInternal() ||\n            !equals(this.getCenterInternal(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animateInternal({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: anchor,\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.endInteractionInternal = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes, opt_direction));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        var smooth = options.smoothExtentConstraint !== undefined\n            ? options.smoothExtentConstraint\n            : true;\n        return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n    }\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    if (options.multiWorld !== true && projection.isGlobal()) {\n        var extent = projection.getExtent().slice();\n        extent[0] = -Infinity;\n        extent[2] = Infinity;\n        return createExtent(extent, false, false);\n    }\n    return centerNone;\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ? options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined\n        ? options.smoothResolutionConstraint\n        : true;\n    var showFullExtent = options.showFullExtent !== undefined ? options.showFullExtent : false;\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var projExtent = projection.getExtent();\n    var constrainOnlyCenter = options.constrainOnlyCenter;\n    var extent = options.extent;\n    if (!multiWorld && !extent && projection.isGlobal()) {\n        constrainOnlyCenter = false;\n        extent = projExtent;\n    }\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution =\n            resolutions[maxZoom] !== undefined\n                ? resolutions[maxZoom]\n                : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var size = !projExtent\n            ? // use an extent that can fit the whole world if need be\n                (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n            : Math.max(getWidth(projExtent), getHeight(projExtent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution /\n            Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom =\n            minZoom +\n                Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    return {\n        constraint: resolutionConstraint,\n        maxResolution: maxResolution,\n        minResolution: minResolution,\n        minZoom: minZoom,\n        zoomFactor: zoomFactor,\n    };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ? options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\nexport default View;\n//# sourceMappingURL=View.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, { getTilePriority } from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { DEVICE_PIXEL_RATIO, IMAGE_DECODE, PASSIVE_EVENT_LISTENERS, } from './has.js';\nimport { TRUE } from './functions.js';\nimport { apply as applyTransform, create as createTransform, } from './transform.js';\nimport { assert } from './asserts.js';\nimport { clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty, } from './extent.js';\nimport { fromUserCoordinate, toUserCoordinate } from './proj.js';\nimport { hasArea } from './size.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { removeNode } from './dom.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {Array<DeclutterItems>} declutterItems\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {number} layerIndex\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {Object} DeclutterItems\n * @property {Array<*>} items Declutter items of an executor.\n * @property {number} opacity Layer opacity.\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        var optionsInternal = createOptionsInternal(options);\n        /** @private */\n        _this.boundHandleBrowserEvent_ = _this.handleBrowserEvent.bind(_this);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ =\n            options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ =\n            options.pixelRatio !== undefined\n                ? options.pixelRatio\n                : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.postRenderTimeoutHandle_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className =\n            'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.style.pointerEvents = 'none';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.moveTolerance_ = options.moveTolerance;\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = null;\n        /**\n         * @type {undefined|function(Event): void}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        _this.addEventListener(getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        function (control) {\n            control.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        function (interaction) {\n            interaction.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(\n            /** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }.bind(_this));\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * Clean up.\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n     *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var hitTolerance = opt_options.hitTolerance !== undefined\n            ? opt_options.hitTolerance * this.frameState_.pixelRatio\n            : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * an empty array if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = [];\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     *\n     * Note: this may give false positives unless the map layers have had different `className`\n     * properties assigned to them.\n     *\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions=} opt_options Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || {};\n        var hitTolerance = options.hitTolerance !== undefined\n            ? options.hitTolerance * this.frameState_.pixelRatio\n            : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined\n            ? opt_options.hitTolerance * this.frameState_.pixelRatio\n            : 0;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in user projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     */\n    PluggableMap.prototype.getEventCoordinateInternal = function (event) {\n        return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {UIEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = \n        //FIXME Are we really calling this with a TouchEvent anywhere?\n        'changedTouches' in event\n            ? /** @type {TouchEvent} */ (event).changedTouches[0]\n            : /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top,\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string'\n                ? document.getElementById(target)\n                : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * user projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        return toUserCoordinate(this.getCoordinateFromPixelInternal(pixel), this.getView().getProjection());\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     */\n    PluggableMap.prototype.getCoordinateFromPixelInternal = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * @return {boolean} Layers have sources that are still loading.\n     */\n    PluggableMap.prototype.getLoading = function () {\n        var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layer = layerStatesArray[i].layer;\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the user\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var viewCoordinate = fromUserCoordinate(coordinate, this.getView().getProjection());\n        return this.getPixelFromCoordinateInternal(viewCoordinate);\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     */\n    PluggableMap.prototype.getPixelFromCoordinateInternal = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return /** @type {View} */ (this.get(MapProperty.VIEW));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        return getTilePriority(this.frameState_, tile, tileSourceKey, tileCenter, tileResolution);\n    };\n    /**\n     * @param {UIEvent} browserEvent Browser event.\n     * @param {string=} opt_type Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n        var eventType = originalEvent.type;\n        if (eventType === PointerEventType.POINTERDOWN ||\n            eventType === EventType.WHEEL ||\n            eventType === EventType.KEYDOWN) {\n            var rootNode = this.viewport_.getRootNode\n                ? this.viewport_.getRootNode()\n                : document;\n            var target = rootNode === document\n                ? /** @type {Node} */ (originalEvent.target)\n                : /** @type {ShadowRoot} */ (rootNode).elementFromPoint(originalEvent.clientX, originalEvent.clientY);\n            if (\n            // Abort if the target is a child of the container for elements whose events are not meant\n            // to be handled by map interactions.\n            this.overlayContainerStopEvent_.contains(target) ||\n                // Abort if the event target is a child of the container that is no longer in the page.\n                // It's possible for the target to no longer be in the page if it has been removed in an\n                // event listener, this might happen in a Control that recreates it's content based on\n                // user interaction either manually or via a render in something like https://reactjs.org/\n                !(rootNode === document ? document.documentElement : rootNode).contains(target)) {\n                return;\n            }\n        }\n        mapBrowserEvent.frameState = this.frameState_;\n        var interactionsArray = this.getInteractions().getArray();\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (!interaction.getActive()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = !IMAGE_DECODE && Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState &&\n            this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n            !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() &&\n            !this.getLoading()) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView() && !this.getView().getAnimating()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.mapBrowserEventHandler_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n            this.viewport_.removeEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_);\n            this.viewport_.removeEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n            this.mapBrowserEventHandler_.dispose();\n            this.mapBrowserEventHandler_ = null;\n            removeNode(this.viewport_);\n        }\n        if (!targetElement) {\n            if (this.renderer_) {\n                clearTimeout(this.postRenderTimeoutHandle_);\n                this.postRenderFunctions_.length = 0;\n                this.renderer_.dispose();\n                this.renderer_ = null;\n            }\n            if (this.animationDelayKey_) {\n                cancelAnimationFrame(this.animationDelayKey_);\n                this.animationDelayKey_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            if (!this.renderer_) {\n                this.renderer_ = this.createRenderer();\n            }\n            this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, this.moveTolerance_);\n            for (var key in MapBrowserEventType) {\n                this.mapBrowserEventHandler_.addEventListener(MapBrowserEventType[key], this.handleMapBrowserEvent.bind(this));\n            }\n            this.viewport_.addEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_, false);\n            this.viewport_.addEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n            var keyboardEventTarget = !this.keyboardEventTarget_\n                ? targetElement\n                : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this),\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.updateViewportSize_();\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this),\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Redraws all text after new fonts have loaded\n     */\n    PluggableMap.prototype.redrawText = function () {\n        var layerStates = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStates.length; i < ii; ++i) {\n            var layer = layerStates[i].layer;\n            if (layer.hasRenderer()) {\n                layer.getRenderer().handleFontsChanged();\n            }\n        }\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.renderer_ && this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var size = this.getSize();\n        var view = this.getView();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            var viewState = view.getState();\n            frameState = {\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                declutterItems: previousFrameState\n                    ? previousFrameState.declutterItems\n                    : [],\n                extent: getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, size),\n                index: this.frameIndex_++,\n                layerIndex: 0,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {},\n            };\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        this.postRenderTimeoutHandle_ = setTimeout(this.handlePostRender.bind(this), 0);\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            this.setSize(undefined);\n        }\n        else {\n            var computedStyle = getComputedStyle(targetElement);\n            this.setSize([\n                targetElement.offsetWidth -\n                    parseFloat(computedStyle['borderLeftWidth']) -\n                    parseFloat(computedStyle['paddingLeft']) -\n                    parseFloat(computedStyle['paddingRight']) -\n                    parseFloat(computedStyle['borderRightWidth']),\n                targetElement.offsetHeight -\n                    parseFloat(computedStyle['borderTopWidth']) -\n                    parseFloat(computedStyle['paddingTop']) -\n                    parseFloat(computedStyle['paddingBottom']) -\n                    parseFloat(computedStyle['borderBottomWidth']),\n            ]);\n        }\n        this.updateViewportSize_();\n    };\n    /**\n     * Recomputes the viewport size and save it on the view object (if any)\n     * @private\n     */\n    PluggableMap.prototype.updateViewportSize_ = function () {\n        var view = this.getView();\n        if (view) {\n            var size = undefined;\n            var computedStyle = getComputedStyle(this.viewport_);\n            if (computedStyle.width && computedStyle.height) {\n                size = [\n                    parseInt(computedStyle.width, 10),\n                    parseInt(computedStyle.height, 10),\n                ];\n            }\n            view.setViewportSize(size);\n        }\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget =\n            typeof options.keyboardEventTarget === 'string'\n                ? document.getElementById(options.keyboardEventTarget)\n                : options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers &&\n        typeof ( /** @type {?} */(options.layers).getLayers) === 'function'\n        ? /** @type {LayerGroup} */ (options.layers)\n        : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] =\n        options.view !== undefined ? options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.controls).getArray) === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.interactions).getArray) ===\n                'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.overlays).getArray) === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values,\n    };\n}\nexport default PluggableMap;\n//# sourceMappingURL=PluggableMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options=} opt_options Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = 'ol-compass';\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add('ol-compass');\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var rotation = view.getRotation();\n        if (rotation !== undefined) {\n            if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    /**\n     * Update the rotate control element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Rotate.prototype.render = function (mapEvent) {\n        var frameState = mapEvent.frameState;\n        if (!frameState) {\n            return;\n        }\n        var rotation = frameState.viewState.rotation;\n        if (rotation != this.rotation_) {\n            var transform = 'rotate(' + rotation + 'rad)';\n            if (this.autoHide_) {\n                var contains = this.element.classList.contains(CLASS_HIDDEN);\n                if (!contains && rotation === 0) {\n                    this.element.classList.add(CLASS_HIDDEN);\n                }\n                else if (contains && rotation !== 0) {\n                    this.element.classList.remove(CLASS_HIDDEN);\n                }\n            }\n            this.label_.style.transform = transform;\n        }\n        this.rotation_ = rotation;\n    };\n    return Rotate;\n}(Control));\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active',\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport { easeOut, linear } from '../easing.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions=} opt_options Options.\n     */\n    function Interaction(opt_options) {\n        var _this = _super.call(this) || this;\n        if (opt_options && opt_options.handleEvent) {\n            _this.handleEvent = opt_options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenterInternal();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animateInternal({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center),\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate in the user projection.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut,\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n     * doubleclick) and eventually zooms the map.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    DoubleClickZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n            var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n            var map = mapBrowserEvent.map;\n            var anchor = mapBrowserEvent.coordinate;\n            var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, anchor, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n        return !stopEvent;\n    };\n    return DoubleClickZoom;\n}(Interaction));\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, \n        /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, PointerEvent>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<PointerEvent>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Returns the current number of pointers involved in the interaction,\n     * e.g. `2` when two fingers are used.\n     * @return {number} The number of pointers.\n     * @api\n     */\n    PointerInteraction.prototype.getPointerCount = function () {\n        return this.targetPointers.length;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!mapBrowserEvent.originalEvent) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n                // prevent page scrolling during dragging\n                mapBrowserEvent.preventDefault();\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence =\n                    handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.originalEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return (type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP);\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { FALSE, TRUE } from '../functions.js';\nimport { MAC, WEBKIT } from '../has.js';\nimport { assert } from '../asserts.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n    var conditions = arguments;\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} All conditions passed.\n     */\n    return function (event) {\n        var pass = true;\n        for (var i = 0, ii = conditions.length; i < ii; ++i) {\n            pass = pass && conditions[i](event);\n            if (!pass) {\n                break;\n            }\n        }\n        return pass;\n    };\n}\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement().contains(document.activeElement);\n};\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport var focusWithTabindex = function (event) {\n    return event.map.getTargetElement().hasAttribute('tabindex')\n        ? focus(event)\n        : true;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    var tagName = /** @type {Element} */ (originalEvent.target).tagName;\n    return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { all, focusWithTabindex, noModifierKeys, primaryAction, } from '../events/condition.js';\nimport { easeOut } from '../easing.js';\nimport { rotate as rotateCoordinate, scale as scaleCoordinate, } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE,\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        var condition = options.condition\n            ? options.condition\n            : all(noModifierKeys, primaryAction);\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.onFocusOnly\n            ? all(focusWithTabindex, condition)\n            : condition;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!this.panning_) {\n            this.panning_ = true;\n            this.getMap().getView().beginInteraction();\n        }\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1],\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenterInternal(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n        mapBrowserEvent.originalEvent.preventDefault();\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = view.getCenterInternal();\n                var centerpx = map.getPixelFromCoordinateInternal(center);\n                var dest = map.getCoordinateFromPixelInternal([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle),\n                ]);\n                view.animateInternal({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut,\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { altShiftKeysOnly, mouseActionButton, mouseOnly, } from '../events/condition.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE,\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotationInternal(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) &&\n            this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.style.pointerEvents = 'auto';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = 'inherit';\n            style.top = 'inherit';\n            style.width = 'inherit';\n            style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]],\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixelInternal, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport { mouseActionButton } from '../events/condition.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        if (options.onBoxEnd) {\n            _this.onBoxEnd = options.onBoxEnd;\n        }\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : mouseActionButton;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition\n            ? options.boxEndCondition\n            : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        this.box_.setMap(null);\n        if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n            this.onBoxEnd(mapBrowserEvent);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND, mapBrowserEvent.coordinate, mapBrowserEvent));\n        }\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragBox.prototype.onBoxEnd = function (event) { };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter, } from '../extent.js';\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            minArea: options.minArea,\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragZoom.prototype.onBoxEnd = function (event) {\n        var map = this.getMap();\n        var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n        var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n        var extent = this.getGeometry().getExtent();\n        if (this.out_) {\n            var mapExtent = view.calculateExtentInternal(size);\n            var boxPixelExtent = createOrUpdateFromCoordinates([\n                map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n                map.getPixelFromCoordinateInternal(getTopRight(extent)),\n            ]);\n            var factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n            scaleFromCenter(mapExtent, 1 / factor);\n            extent = mapExtent;\n        }\n        var resolution = view.getConstrainedResolution(view.getResolutionForExtentInternal(extent, size));\n        var center = view.getConstrainedCenter(getCenter(extent), resolution);\n        view.animateInternal({\n            resolution: resolution,\n            center: center,\n            duration: this.duration_,\n            easing: easeOut,\n        });\n    };\n    return DragZoom;\n}(DragBox));\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { pan } from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport { rotate as rotateCoordinate } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return (noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent));\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ =\n            options.condition !== undefined\n                ? options.condition\n                : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ =\n            options.pixelDelta !== undefined ? options.pixelDelta : 128;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n     * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n     * pressed).\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {KeyboardPan}\n     */\n    KeyboardPan.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == EventType.KEYDOWN) {\n            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n            var keyCode = keyEvent.keyCode;\n            if (this.condition_(mapBrowserEvent) &&\n                (keyCode == KeyCode.DOWN ||\n                    keyCode == KeyCode.LEFT ||\n                    keyCode == KeyCode.RIGHT ||\n                    keyCode == KeyCode.UP)) {\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n                var deltaX = 0, deltaY = 0;\n                if (keyCode == KeyCode.DOWN) {\n                    deltaY = -mapUnitsDelta;\n                }\n                else if (keyCode == KeyCode.LEFT) {\n                    deltaX = -mapUnitsDelta;\n                }\n                else if (keyCode == KeyCode.RIGHT) {\n                    deltaX = mapUnitsDelta;\n                }\n                else {\n                    deltaY = mapUnitsDelta;\n                }\n                var delta = [deltaX, deltaY];\n                rotateCoordinate(delta, view.getRotation());\n                pan(view, delta, this.duration_);\n                mapBrowserEvent.preventDefault();\n                stopEvent = true;\n            }\n        }\n        return !stopEvent;\n    };\n    return KeyboardPan;\n}(Interaction));\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { targetNotEditable } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n     * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n     * key pressed was '+' or '-').\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {KeyboardZoom}\n     */\n    KeyboardZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == EventType.KEYDOWN ||\n            mapBrowserEvent.type == EventType.KEYPRESS) {\n            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n            var charCode = keyEvent.charCode;\n            if (this.condition_(mapBrowserEvent) &&\n                (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n                var map = mapBrowserEvent.map;\n                var delta = charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n                var view = map.getView();\n                zoomByDelta(view, delta, undefined, this.duration_);\n                mapBrowserEvent.preventDefault();\n                stopEvent = true;\n            }\n        }\n        return !stopEvent;\n    };\n    return KeyboardZoom;\n}(Interaction));\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX } from '../has.js';\nimport { all, always, focusWithTabindex } from '../events/condition.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel',\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, \n        /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ =\n            options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.constrainResolution_ =\n            options.constrainResolution !== undefined\n                ? options.constrainResolution\n                : false;\n        var condition = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.onFocusOnly\n            ? all(focusWithTabindex, condition)\n            : condition;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.deltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0, this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL) {\n            return true;\n        }\n        mapBrowserEvent.preventDefault();\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n        }\n        var view = map.getView();\n        if (this.mode_ === Mode.TRACKPAD &&\n            !(view.getConstrainResolution() || this.constrainResolution_)) {\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.timeout_);\n            view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = -clamp(this.totalDelta_, -this.maxDelta_ * this.deltaPerZoom_, this.maxDelta_ * this.deltaPerZoom_) / this.deltaPerZoom_;\n        if (view.getConstrainResolution() || this.constrainResolution_) {\n            // view has a zoom constraint, zoom by 1\n            delta = delta ? (delta > 0 ? 1 : -1) : 0;\n        }\n        zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotationInternal(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolutionInternal(scaleDelta, this.anchor_);\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport { assign } from './obj.js';\nimport { defaults as defaultControls } from './control.js';\nimport { defaults as defaultInteractions } from './interaction.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions({\n                onFocusOnly: true,\n            });\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\nexport { default as Attribution } from './control/Attribution.js';\nexport { default as Control } from './control/Control.js';\nexport { default as FullScreen } from './control/FullScreen.js';\nexport { default as MousePosition } from './control/MousePosition.js';\nexport { default as OverviewMap } from './control/OverviewMap.js';\nexport { default as Rotate } from './control/Rotate.js';\nexport { default as ScaleLine } from './control/ScaleLine.js';\nexport { default as Zoom } from './control/Zoom.js';\nexport { default as ZoomSlider } from './control/ZoomSlider.js';\nexport { default as ZoomToExtent } from './control/ZoomToExtent.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ? options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=control.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined\n        ? options.altShiftDragRotate\n        : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            onFocusOnly: options.onFocusOnly,\n            kinetic: kinetic,\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate : true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            onFocusOnly: options.onFocusOnly,\n            duration: options.zoomDuration,\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","import { Attribution, MousePosition, Zoom } from 'ol/control.js';\nimport { createStringXY } from 'ol/coordinate.js';\nimport { boundingExtent } from 'ol/extent.js';\nimport { LineString, LinearRing, MultiLineString, MultiPoint, MultiPolygon, Point, Polygon } from 'ol/geom.js';\nimport { Tile, Vector as VectorLayer } from 'ol/layer.js';\nimport { fromLonLat, get, transformExtent } from 'ol/proj.js';\nimport { OSM, Vector as VectorSource } from 'ol/source.js';\nimport { Circle, Fill, Stroke, Style, Text } from 'ol/style.js';\nimport { Feature, Map, View } from 'ol';\n\nconst ol = {\n  control: {\n    Attribution, MousePosition, Zoom\n  },\n  coordinate: {\n    createStringXY\n  },\n  extent: {\n    boundingExtent\n  },\n  geom: {\n    LineString, LinearRing, MultiLineString, MultiPoint, MultiPolygon, Point, Polygon\n  },\n  layer: {\n    Tile, Vector: VectorLayer\n  },\n  proj: {\n    fromLonLat, get, transformExtent\n  },\n  source: {\n    OSM, Vector: VectorSource\n  },\n  style: {\n    Circle, Fill, Stroke, Style, Text\n  },\n  Feature, Map, View\n}\n\nexport default ol;\n\n"],"sourceRoot":""}